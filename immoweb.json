{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "2.0",
    "title" : "Immoweb API V2",
    "description" : "This describes second version of Immoweb API"
  },
  "servers" : [ {
    "url" : "https://testapigw.immoweb.be/",
    "description" : "APIGW test server"
  } ],
  "tags" : [ {
    "name" : "Advertisements",
    "description" : "API to retrieve ads to display along side Immoweb classifieds"
  }, {
    "name" : "AdvertisementsV2",
    "description" : "New MS-based API to handle retrieve advertisements to display along side Immoweb classifieds"
  }, {
    "name" : "Agents",
    "description" : "API to retrieve and search for agents"
  }, {
    "name" : "AutoComplete",
    "description" : "Autocomplete featuring API to suggest cities or other ressource name based on user input"
  }, {
    "name" : "Contact",
    "description" : "Define API regarding contact (via emails, ...)"
  }, {
    "name" : "Classifieds",
    "description" : "Notices intended to inform the public about the marketing of a Property and published via Immoweb"
  }, {
    "name" : "Classified-requests",
    "description" : "Notices intended to inform the public about the status of a classified request processing"
  }, {
    "name" : "Customers",
    "description" : "Notices intended to inform the public about the customers of Property on Immoweb"
  }, {
    "name" : "Locations",
    "description" : "API to access geographical data, like districts or regions"
  }, {
    "name" : "Media - IW360",
    "description" : "API to administrate IW 360 Microservice"
  }, {
    "name" : "Media - Pictures",
    "description" : "API to administrate IW Photos"
  }, {
    "name" : "Media - Videos",
    "description" : "API to administrate IW Videos"
  }, {
    "name" : "Notaries",
    "description" : "Notices intended to inform notaries APIs"
  }, {
    "name" : "OAuth",
    "description" : "Notices intended to inform public on Oauth process"
  }, {
    "name" : "Premium Project Page",
    "description" : "API to administrate PPP Microservice"
  }, {
    "name" : "Users",
    "description" : "APIs relating to resources protected by user authentication"
  } ],
  "x-enums" : {
    "AcceptedLanguages" : {
      "type" : "string",
      "enum" : [ "fr", "en", "nl" ],
      "default" : "en"
    },
    "AdimTypes" : {
      "type" : "string",
      "enum" : [ "NORMAL", "XL", "ON_THE_HOMEPAGE" ]
    },
    "AdvertisementInternalLinkTargets" : {
      "type" : "string",
      "enum" : [ "CLASSIFIED", "CUSTOMER", "GROUP" ]
    },
    "ArchitecturalStyles" : {
      "type" : "string",
      "enum" : [ "CLASSIC", "RUSTIC", "CONTEMPORARY" ],
      "x-oldKey" : "toBuild.architecturalStyle"
    },
    "AuctionStates" : {
      "type" : "string",
      "enum" : [ "FIRST_SESSION", "OVERBID", "FINAL_SALE" ]
    },
    "AutoCompleteTypes" : {
      "type" : "string",
      "enum" : [ "AGENT_NAME", "AGENCY_GROUP_NAME", "AGENCY_NETWORK", "COUNTRY", "DISTRICT", "LOCALITY_NAME", "NETWORK", "POSTAL_CODE", "PROVINCE", "REGION" ]
    },
    "AvailabilityPeriodTypes" : {
      "type" : "string",
      "enum" : [ "UPON_EXCHANGE_OF_DEEDS", "TO_BE_DEFINED", "AT_DELIVERY", "DEPENDING_ON_THE_TENANT", "IMMEDIATELY", "ON_THE_DATE" ],
      "x-oldKey" : "general.availability"
    },
    "BuildingConditions" : {
      "type" : "string",
      "enum" : [ "GOOD", "AS_NEW", "TO_RESTORE", "JUST_RENOVATED", "TO_BE_DONE_UP", "TO_RENOVATE" ],
      "description" : "State of the property",
      "x-oldKey" : "general.buildingCondition"
    },
    "CallingTimes" : {
      "type" : "string",
      "enum" : [ "NONE", "MORNING", "AFTERNOON", "EVENING", "MORNING_OR_EVENING", "WORKING_HOURS", "ALL_THE_TIME", "WEEK_END" ]
    },
    "ClassifiedSortingOrders" : {
      "type" : "string",
      "minItems" : 1,
      "uniqueItems" : true,
      "enum" : [ "PRICE", "AD_QUALITY", "POSTAL_CODE", "PUBLICATION_DATE" ]
    },
    "CommonErrorCodes-400" : {
      "type" : "string",
      "enum" : [ "UNRECOGNIZED_PARAMETER", "MISSING_MANDATORY_PARAMETER", "INCORRECT_BODY" ]
    },
    "CommonErrorCodes-415" : {
      "type" : "string",
      "enum" : [ "UNSUPPORTED_MEDIA_TYPE", "UNSUPPORTED_ACCEPT_HEADER", "UNSUPPORTED_CONTENT_TYPE_HEADER" ]
    },
    "ContactEmailSources" : {
      "type" : "string",
      "enum" : [ "FIND_AN_AGENT", "ESTIMATE_MY_PROPERTY" ]
    },
    "ContactInfoUsages" : {
      "type" : "string",
      "enum" : [ "BUY", "RENT", "REAL_ESTATE_PROJECT", "DEFAULT" ]
    },
    "ConstructionSystems" : {
      "type" : "string",
      "enum" : [ "TRADITIONAL_CONSTRUCTION", "PREFABRICATED", "METAL_FRAME", "WOOD_FRAME", "MASSIVE_WOOD" ],
      "x-oldKey" : "toBuild.constructionSystem"
    },
    "ConstructionTypes" : {
      "description" : "What can be built on this land",
      "x-oldKey" : "buildingRegulation.typeOfBuilding",
      "type" : "string",
      "enum" : [ "ALL_KIND", "APARTMENT_BUILDING", "BEL_ETAGE", "BUNGALOW", "HOUSE", "VILLA" ]
    },
    "Countries" : {
      "type" : "string",
      "enum" : [ "AE", "AL", "AM", "AN", "AR", "AT", "AU", "AZ", "BA", "BD", "BE", "BG", "BR", "BW", "BY", "BZ", "CA", "CD", "CH", "CI", "CL", "CN", "CR", "CV", "CY", "CZ", "DE", "DK", "DO", "DZ", "EE", "EG", "ES", "FI", "FR", "GB", "GE", "GH", "GR", "HK", "HR", "HU", "ID", "IE", "IL", "IN", "IT", "JO", "JP", "KE", "KG", "KR", "KZ", "LB", "LI", "LT", "LU", "LV", "MA", "MC", "MD", "ME", "MG", "MK", "MT", "MU", "MX", "NA", "NL", "NO", "PA", "PE", "PL", "PT", "PY", "RO", "RS", "RU", "SE", "SG", "SI", "SK", "SN", "TH", "TJ", "TM", "TN", "TR", "TW", "TZ", "UA", "US", "UZ", "VE", "ZA" ]
    },
    "DaysOfTheWeek" : {
      "type" : "string",
      "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
    },
    "DomainCodes" : {
      "type" : "string",
      "enum" : [ "BUILDING_RENOVATION", "ENERGY", "INSURANCE_FINANCE", "SERVICES", "VACATION" ]
    },
    "EnergyPerformances" : {
      "type" : "string",
      "enum" : [ "PASSIVE", "LOW_ENERGY", "STANDARD" ],
      "x-oldKey" : "flags.lowEnergy,flags.passiveHouse"
    },
    "FloodZoneTypes" : {
      "type" : "string",
      "enum" : [ "RECOGNIZED_FLOOD_ZONE", "RECOGNIZED_N_CIRCUMSCRIBED_FLOOD_ZONE", "RECOGNIZED_N_CIRCUMSCRIBED_WATERSIDE_FLOOD_ZONE", "POSSIBLE_FLOOD_ZONE", "POSSIBLE_N_CIRCUMSCRIBED_FLOOD_ZONE", "POSSIBLE_N_CIRCUMSCRIBED_WATERSIDE_ZONE", "CIRCUMSCRIBED_FLOOD_ZONE", "CIRCUMSCRIBED_WATERSIDE_ZONE", "NON_FLOOD_ZONE", null ],
      "description" : "Property located fully or partially in:",
      "x-oldKey" : "buildingRegulation.floodZoneInfo"
    },
    "Gender" : {
      "type" : "string",
      "enum" : [ "FEMALE", "MALE" ]
    },
    "HeatingTypes" : {
      "type" : "string",
      "enum" : [ "CARBON", "ELECTRIC", "FUELOIL", "GAS", "PELLET", "SOLAR", "WOOD" ],
      "x-oldKey" : "energy.Heating"
    },
    "ImageOrientations" : {
      "type" : "string",
      "enum" : [ "LANDSCAPE", "PORTRAIT" ]
    },
    "KitchenSetups" : {
      "type" : "string",
      "enum" : [ "USAInstalled", "USAUninstalled", "USASemiEquipped", "USAHyperEquipped", "Installed", "NotInstalled", "SemiEquipped", "HyperEquipped" ],
      "description" : "Different types of kitchens depending on how they are equipped:an American kitchen is an open-plan kitchen. A furnished or non-equipped kitchen does not have any appliances. A semi-fitted kitchen is equipped with a cooker and a fridge. A fully-fitted kitchen is equipped with a cooker, a fridge and another appliance. A hyper-equipped kitchen has everything you could dream of.",
      "x-oldKey" : "interior.kitchenSetup"
    },
    "LatestUseDesignations" : {
      "type" : "string",
      "enum" : [ "AGR", "DIV", "ECO", "EXT", "FON", "FOR", "GDR", "GVR", "IAB", "IND", "LOI", "LWA", "MIX", "NAT", "NR", "PAR", "RES", "VER", "WCH", "WP", "WUG", null ],
      "description" : "A property''s land use designation depends on the type of area in which it is located, in accordance with the regional development plan (for example: residential area, commercial area, industrial area, green area, recreation area, etc.).",
      "x-oldKey" : "buildingRegulation.latestLandUseDesignation"
    },
    "NonceStatuses" : {
      "type" : "string",
      "enum" : [ "VALID", "USED" ]
    },
    "OilTankCertificateStatus" : {
      "type" : "string",
      "enum" : [ "YES_CONFORM", "YES_NOT_CONFORM", "NO", "NOT_SPECIFIED" ]
    },
    "Orientations" : {
      "type" : "string",
      "enum" : [ "NORTH", "SOUTH", "EAST", "WEST", "NORTH_EAST", "NORTH_WEST", "SOUTH_EAST", "SOUTH_WEST" ],
      "description" : "The orientation of your garden will usually be the opposite to the orientation of your house. A house whose main fa√ßade is north facing generally has a south-facing garden."
    },
    "PictureOrientations" : {
      "type" : "string",
      "enum" : [ "LANDSCAPE", "PORTRAIT" ],
      "x-oldKey" : "picturesResized[].pictureOrientation"
    },
    "PublicSaleStatuses" : {
      "type" : "string",
      "enum" : [ "FIRST_SESSION", "OVERBID", "FINAL_SALE" ],
      "description" : "The current state of the public sale process.",
      "x-oldKey" : "auction.auctionState"
    },
    "ContractTypes" : {
      "type" : "string",
      "enum" : [ "SILVER", "GOLD", "PLATINIUM" ]
    },
    "CustomerSortingOrdersAsc" : {
      "type" : "string",
      "enum" : [ "CUSTOMER_NAME", "RANDOM", "NUMBER_OF_AVAILABLE_CLASSIFIEDS" ]
    },
    "CustomerSortingOrders" : {
      "type" : "string",
      "enum" : [ "CUSTOMER_NAME", "NUMBER_OF_AVAILABLE_CLASSIFIEDS" ]
    },
    "CustomerTypes" : {
      "type" : "string",
      "x-oldKey" : "contactInfo.clientType",
      "enum" : [ "AGENCY", "AGENCY_PAYING_WITH_OGONE", "CERTIGO", "COMPANY", "COMPANY_PAYING_WITH_OGONE", "CUSTOMER_INVOICE", "DETACHED_HOUSE_BUILDERS", "EXPERT", "GENERAL_CONTRACTOR", "GENERAL_ENTREPRENEUR", "HOLIDAY_AGENCY", "INSURANCE_BROOKER", "INSURANCE_COMPANY", "MATRIX", "MOVERS", "NOTARY", "PREPAID", "PREPAID_AGENCY", "PREPAID_COMPANY", "PRIVATE", "PROFESSIONALS", "PROPERTY_DEVELOPER", "REAL_ESTATE_AGENCY", "REAL_ESTATE_AGENT", "RESORT_PARTNERS", "SELF_EMPLOYED", "SURVEYOR", "TOURISM" ]
    },
    "Mnemonics" : {
      "type" : "string",
      "enum" : [ "APARTMENT_1BDR", "APARTMENT_2BDR", "APARTMENT_3BDR", "APARTMENT_4BDR", "APARTMENT_OVER4BDR", "BUILDABLELAND", "BUILDABLELAND_2FC", "BUILDABLELAND_3FC", "BUILDABLELAND_4FC", "BUSINESS", "DUPLEX_1BDR", "DUPLEX_2BDR", "DUPLEX_3BDR", "DUPLEX_4BDR", "DUPLEX_OVER4BDR", "GARAGE_1", "GARAGE_2", "GARAGE_LOCKEDUP", "GROUNDFLOOR_1BDR", "GROUNDFLOOR_2BDR", "GROUNDFLOOR_3BDR", "GROUNDFLOOR_4BDR", "GROUNDFLOOR_OVER4BDR", "HOTELANDCATERING", "HOUSE_2FC_1BDR", "HOUSE_2FC_2BDR", "HOUSE_2FC_3BDR", "HOUSE_2FC_4BDR", "HOUSE_2FC_OVER4BDR", "HOUSE_3FC_1BDR", "HOUSE_3FC_2BDR", "HOUSE_3FC_3BDR", "HOUSE_3FC_4BDR", "HOUSE_3FC_OVER4BDR", "HOUSE_BASEMENT_2FC_1BDR", "HOUSE_BASEMENT_2FC_2BDR", "HOUSE_BASEMENT_2FC_3BDR", "HOUSE_BASEMENT_2FC_4BDR", "HOUSE_BASEMENT_2FC_OVER4BDR", "HOUSE_BASEMENT_3FC_1BDR", "HOUSE_BASEMENT_3FC_2BDR", "HOUSE_BASEMENT_3FC_3BDR", "HOUSE_BASEMENT_3FC_4BDR", "HOUSE_BASEMENT_3FC_OVER4BDR", "KOT", "LAND_OTHER", "LOFT_1", "LOFT_2", "MIXEDBUILDING", "OFFICE", "PARKING_COVERED", "PARKING_INDOOR", "PARKING_OUTDOOR", "PENTHOUSE_1BDR", "PENTHOUSE_2BDR", "PENTHOUSE_3BDR", "PENTHOUSE_4BDR", "PENTHOUSE_OVER4BDR", "SERVICEFLAT", "SHOP", "STUDIO_FLAT", "TRIPLEX_1BDR", "TRIPLEX_2BDR", "TRIPLEX_3BDR", "TRIPLEX_4BDR", "TRIPLEX_OVER4BDR", "VILLA_3FC_1BDR", "VILLA_3FC_2BDR", "VILLA_3FC_3BDR", "VILLA_3FC_4BDR", "VILLA_3FC_OVER4BDR", "VILLA_4FC_1BDR", "VILLA_4FC_2BDR", "VILLA_4FC_3BDR", "VILLA_4FC_4BDR", "VILLA_4FC_OVER4BDR" ],
      "x-oldKey" : "estateGroupInfo.estateGroupItems[].mnemonic"
    },
    "POITypes" : {
      "type" : "string",
      "enum" : [ "SCHOOL", "TRAM", "METRO", "BUS", "SHOPS", "TRANSPORT" ],
      "description" : "POI identifier",
      "x-oldKey" : "geographical.POIs[].poiName"
    },
    "PriceTypes" : {
      "type" : "string",
      "enum" : [ "MONTHLY_RENTAL_PRICE", "PRICE", "PRICE_PER_SQM", "YEARLY_RENTAL_PRICE", "YEARLY_RENTAL_PRICE_PER_SQM" ]
    },
    "PropertySubtypes" : {
      "type" : "string",
      "x-oldKey" : "subtype",
      "enum" : [ "AGRICULTURAL_AREA", "APARTMENT", "APARTMENT_BLOCK", "APARTMENT_GROUP", "BARGE", "BED_N_BREAKFAST", "BOAT_CRUISE", "BUILDING", "BUILDING_LAND", "BUNGALOW", "BUSINESS", "CAMPSITE", "CASTLE", "CHALET", "COMMERCIAL_PREMISES", "COMMERCIAL_VILLA", "COUNTRY_COTTAGE", "COVERED_PARKING_SPACE", "DUPLEX", "EXCEPTIONAL_PROPERTY", "FARMHOUSE", "FIELDS", "FLAT_STUDIO", "FOREST", "GITES", "GROUND_FLOOR", "HOLIDAY_PARK", "HOTEL", "HOTEL_RESTAURANT_CAFE", "HOUSE", "HOUSE_GROUP", "INDUSTRIAL_PREMISES", "KOT", "LAND", "LARGE_TOWN_HOUSE", "LOCK_UP_GARAGE", "LOCK_UP_PARKING", "LOFT", "MANOR_HOUSE", "MANSION", "MEADOW", "MILL", "MIXED_USE_BUILDING", "MIXED_USE_BUILDING_COMMERCIAL", "MIXED_USE_BUILDING_INDUSTRIES", "MIXED_USE_BUILDING_OFFICES", "MOBILE_HOME", "MODEL_HOUSE", "OFFICE_BLOCK", "OFFICES", "ORCHARD", "OTHER", "OTHER_HOUSE", "OTHER_PROPERTY", "OUTDOOR_PARKING_SPACE", "PAVILION", "PENTHOUSE", "PROVINCIAL_FARMHOUSE", "RECREATIONAL_AREA", "REFERENCE", "SERVICE_FLAT", "SHOW_HOUSE", "STATIC_CARAVAN", "TOWN_HOUSE", "TRIPLEX", "UNBUILDABLE_LAND", "VILLA", "WAREHOUSE" ]
    },
    "PropertyTypes" : {
      "type" : "string",
      "x-oldKey" : "mainType",
      "enum" : [ "APARTMENT", "APARTMENT_GROUP", "COMMERCIAL", "GARAGE", "HOMES_TO_BUILD", "HOUSE", "HOUSE_GROUP", "INDUSTRY", "LAND", "OFFICE", "OTHER" ]
    },
    "PropertyTypesForSearch" : {
      "type" : "string",
      "enum" : [ "APARTMENT", "APARTMENT_GROUP", "APARTMENT_OR_APARTMENT_GROUP", "COMMERCIAL", "GARAGE", "HOMES_TO_BUILD", "HOUSE", "HOUSE_GROUP", "HOUSE_OR_HOUSE_GROUP", "INDUSTRY", "LAND", "LOT_SALES", "OFFICE", "OTHER" ]
    },
    "Regions" : {
      "type" : "string",
      "enum" : [ "BRUSSELS", "FLANDERS", "WALLONIE", "ABROAD" ]
    },
    "SaleStatuses" : {
      "type" : "string",
      "description" : "Status of the estate item i.e. if it is sold, booked or available,",
      "x-oldKey" : "estateGroupInfo.estateGroupItems[].sold",
      "enum" : [ "AVAILABLE", "SOLD", "PURCHASE_OPTION" ]
    },
    "Segments" : {
      "type" : "string",
      "enum" : [ "RESIDENTIAL", "BUSINESS", "HOLIDAYS", "PRESTIGE" ]
    },
    "SewerConnections" : {
      "type" : "string",
      "enum" : [ "CONNECTED", "CAN_BE_CONNECTED", "NOT_CONNECTED", "CANNOT_BE_CONNECTED" ],
      "x-oldKey" : "interior.connectionToSewerNetwork,interior.connectionPossible",
      "x-comment" : "combine value into enum"
    },
    "SortCriteria" : {
      "type" : "string",
      "enum" : [ "PRICE", "AD_QUALITY", "POSTAL_CODE", "PUBLICATION_DATE" ]
    },
    "SortOrders" : {
      "type" : "string",
      "enum" : [ "asc", "desc" ]
    },
    "SurroundingTypes" : {
      "type" : "string",
      "enum" : [ "FITTED_OUT", "CONCRETE", "MALL", "COMPARTMENTALIZED", "COUNTRY", "ISOLATED", "NOT_FITTED_OUT", "LANDSCAPE", "SHOP_STREET", "RESIDENTIAL", "URBAN" ],
      "x-oldKey" : "general.surroundingEnvironment"
    },
    "TopicCodes" : {
      "type" : "string",
      "enum" : [ "BATHROOM", "CARPENTRY" ]
    },
    "TransactionTypes" : {
      "type" : "string",
      "enum" : [ "FOR_RENT", "FOR_SALE" ],
      "x-oldKey" : "buyRent"
    },
    "TransactionSubtypes" : {
      "type" : "string",
      "enum" : [ "PUBLIC_SALE", "BUY_REGULAR", "HOLIDAY", "LIFE_ANNUITY", "RENT_REGULAR" ],
      "x-oldKey" : "transactionSubtype"
    },
    "UnitDisplayModes" : {
      "type" : "string",
      "enum" : [ "DETAILED", "STANDARD" ]
    },
    "VatAndOrRegistrationFeeTypes" : {
      "type" : "string",
      "enum" : [ "NET_PRICE", "VAT_EXCLUDED", "VAT_INCLUDED" ],
      "x-oldKey" : "financial.vatProfile"
    },
    "VisualisationOptions" : {
      "type" : "string",
      "enum" : [ "L", "M", "XL" ],
      "x-oldKey" : "adType"
    }
  },
  "x-enums-in" : {
    "BuildingConditions" : {
      "type" : "string",
      "enum" : [ "GOOD", "AS_NEW", "TO_RESTORE", "JUST_RENOVATED", "TO_REFURBISH", "TO_RENOVATE" ]
    },
    "EpcScoreTypes" : {
      "type" : "string",
      "enum" : [ "A++", "A+", "A", "B", "C", "D", "E", "F", "G", "A+_A++", "A_A++", "A_A+", "B_A++", "B_A+", "B_A", "C_A++", "C_A+", "C_A", "C_B", "D_A++", "D_A+", "D_A", "D_B", "D_C", "E_A++", "E_A+", "E_A", "E_B", "E_C", "E_D", "F_A++", "F_A+", "F_A", "F_B", "F_C", "F_D", "F_E", "G_A++", "G_A+", "G_A", "G_B", "G_C", "G_D", "G_E", "G_F" ]
    },
    "HeatingTypes" : {
      "type" : "string",
      "enum" : [ "CARBON", "ELECTRIC", "GAS", "FUELOIL", "WOOD", "PELLET" ]
    },
    "KitchenSetups" : {
      "type" : "string",
      "enum" : [ "USA_INSTALLED", "USA_UNINSTALLED", "USA_SEMI_EQUIPPED", "USA_HYPER_EQUIPPED", "INSTALLED", "UNINSTALLED", "SEMI_EQUIPPED", "HYPER_EQUIPPED" ]
    },
    "LatestUseDesignations" : {
      "type" : "string",
      "enum" : [ "FARMING_AREA", "OTHER", "ECONOMIC_ACTIVITY_AREA", "EXTRACTION_AREA", "LAND_RESERVE_AREA", "FOREST_AREA", "DAYTIME_RECREATION_AREA", "RESIDENTIAL_RECREATION_AREA", "INDUSTRIAL_ZONE_FOR_CRAFT_OR_SMALL_AND_MEDIUM_ENTERPRISES", "INDUSTRIAL_AREA", "LEISURE_AREA", "AREA_OF_LANDSCAPE_INTEREST", "MIXED_LIVING_AREA", "NATURAL_AREA", "NATURE_RESERVE", "PARK_AREA", "LIVING_AREA", "GREEN_AREA", "RESIDENTIAL_AREA_WITH_CULTURAL_HISTORICAL_AND_ESTHETIC_VALUE", "RESIDENTIAL_PARK", "RESIDENTIAL_EXPANSION_AREA" ]
    },
    "ProjectPhases" : {
      "type" : "string",
      "enum" : [ "CONSTRUCTION_PERMIT_OBTAINED", "SHELL_WORK_ONGOING", "INTERNAL_FINISHING_ONGOING", "CONSTRUCTION_COMPLETED" ]
    },
    "PropertyTypes" : {
      "type" : "string",
      "enum" : [ "HOUSE", "OFFICE", "INDUSTRY", "COMMERCIAL", "APARTMENT", "LAND", "GARAGE", "OTHER", "HOUSE_GROUP", "APARTMENT_GROUP" ]
    },
    "SoldPercentageDisplayModes" : {
      "type" : "string",
      "enum" : [ "HIDDEN", "USER_DEFINED", "CALCULATED" ]
    },
    "TransactionSubtypes" : {
      "type" : "string",
      "enum" : [ "BUY_REGULAR", "PUBLIC_SALE", "LIFE_ANNUITY", "RENT_REGULAR" ]
    },
    "UnitPhases" : {
      "type" : "string",
      "enum" : [ "PHASE_1", "PHASE_2", "PHASE_3" ]
    },
    "VatAndOrRegistrationFeeTypes" : {
      "type" : "string",
      "enum" : [ "VAT_EXCLUDED", "VAT_INCLUDED" ]
    },
    "VisualisationOptions" : {
      "type" : "string",
      "enum" : [ "M", "L", "XL", "IN_THE_SPOTLIGHT" ]
    }
  },
  "x-enums-media" : {
    "MediaStatuses" : {
      "type" : "string",
      "enum" : [ "INITIATED", "SAVED", "PUBLISHED", "UNPUBLISHED" ]
    }
  },
  "x-enums-ppp" : {
    "PPPStatuses" : {
      "type" : "string",
      "enum" : [ "PUBLISHED", "UNPUBLISHED" ]
    }
  },
  "x-comments" : {
    "DateInfo" : {
      "string" : "This is a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. ex: 2014-01-27T00:40:57.165"
    }
  },
  "x-maskedModels" : {
    "AdvertisementAdimContent" : {
      "type" : "object",
      "properties" : {
        "campaign" : {
          "type" : "object",
          "required" : [ "id", "type", "lastModificationDate" ],
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 12345
            },
            "type" : {
              "type" : "string",
              "exmaple" : "ADIM"
            },
            "lastModificationDate" : {
              "type" : "string",
              "format" : "date-time",
              "example" : "2017-07-21T17:32:28Z"
            },
            "content" : {
              "type" : "object",
              "properties" : {
                "fr" : {
                  "type" : "object",
                  "properties" : {
                    "picture" : {
                      "type" : "object",
                      "properties" : {
                        "url" : {
                          "type" : "string",
                          "format" : "uri"
                        },
                        "altText" : {
                          "type" : "string"
                        }
                      }
                    },
                    "internalLinkTarget" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "type" : {
                          "$ref" : "#/x-enums/AdvertisementInternalLinkTargets"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AdvertisementAdimXLContent" : {
      "type" : "object",
      "properties" : {
        "campaign" : {
          "type" : "object",
          "required" : [ "id", "type", "lastModificationDate" ],
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 12345
            },
            "type" : {
              "type" : "string",
              "exmaple" : "ADIM_XL"
            },
            "lastModificationDate" : {
              "type" : "string",
              "format" : "date-time",
              "example" : "2017-07-21T17:32:28Z"
            },
            "content" : {
              "type" : "object",
              "properties" : {
                "fr" : {
                  "type" : "object",
                  "properties" : {
                    "title" : {
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "picture" : {
                      "type" : "object",
                      "properties" : {
                        "url" : {
                          "type" : "string",
                          "format" : "uri"
                        },
                        "altText" : {
                          "type" : "string"
                        }
                      }
                    },
                    "internalLinkTarget" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "type" : {
                          "$ref" : "#/x-enums/AdvertisementInternalLinkTargets"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AdvertisementAdimHomepageContent" : {
      "type" : "object",
      "properties" : {
        "campaign" : {
          "type" : "object",
          "required" : [ "id", "type", "lastModificationDate" ],
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 12345
            },
            "type" : {
              "type" : "string",
              "exmaple" : "ADIM_HOMEPAGE"
            },
            "lastModificationDate" : {
              "type" : "string",
              "format" : "date-time",
              "example" : "2017-07-21T17:32:28Z"
            },
            "content" : {
              "type" : "object",
              "properties" : {
                "fr" : {
                  "type" : "object",
                  "properties" : {
                    "title" : {
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "picture" : {
                      "type" : "object",
                      "properties" : {
                        "url" : {
                          "type" : "string",
                          "format" : "uri"
                        },
                        "altText" : {
                          "type" : "string"
                        }
                      }
                    },
                    "linkUrl" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "internalLinkTarget" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "type" : {
                          "$ref" : "#/x-enums/AdvertisementInternalLinkTargets"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AdvertisementAdFocusHomepageContent" : {
      "type" : "object",
      "properties" : {
        "campaign" : {
          "type" : "object",
          "required" : [ "id", "type", "lastModificationDate" ],
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 12345
            },
            "type" : {
              "type" : "string",
              "exmaple" : "ADFOCUS_HOMEPAGE"
            },
            "lastModificationDate" : {
              "type" : "string",
              "format" : "date-time",
              "example" : "2017-07-21T17:32:28Z"
            },
            "content" : {
              "type" : "object",
              "properties" : {
                "fr" : {
                  "type" : "object",
                  "properties" : {
                    "picture" : {
                      "type" : "object",
                      "properties" : {
                        "url" : {
                          "type" : "string",
                          "format" : "uri"
                        },
                        "altText" : {
                          "type" : "string"
                        }
                      }
                    },
                    "linkUrl" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "internalLinkTarget" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "type" : {
                          "$ref" : "#/x-enums/AdvertisementInternalLinkTargets"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AdvertisementAdFocusResultListContent" : {
      "type" : "object",
      "properties" : {
        "campaign" : {
          "type" : "object",
          "required" : [ "id", "type", "lastModificationDate" ],
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 12345
            },
            "type" : {
              "type" : "string",
              "exmaple" : "ADFOCUS_RESULTLIST"
            },
            "lastModificationDate" : {
              "type" : "string",
              "format" : "date-time",
              "example" : "2017-07-21T17:32:28Z"
            },
            "content" : {
              "type" : "object",
              "properties" : {
                "fr" : {
                  "type" : "object",
                  "properties" : {
                    "picture" : {
                      "type" : "object",
                      "properties" : {
                        "url" : {
                          "type" : "string",
                          "format" : "uri"
                        },
                        "altText" : {
                          "type" : "string"
                        }
                      }
                    },
                    "linkUrl" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "internalLinkTarget" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "type" : {
                          "$ref" : "#/x-enums/AdvertisementInternalLinkTargets"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AdvertisementCampaignContentResponses" : {
      "CREATED" : {
        "type" : "object",
        "properties" : {
          "campaignId" : {
            "type" : "string",
            "example" : 2698109
          }
        }
      },
      "BADREQUEST" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "error" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "example" : "MISSING_CAMPAIGN_ID",
                  "description" : "Type of the error. Ex: MISSING_CAMPAIGN_ID"
                },
                "description" : {
                  "type" : "string",
                  "example" : "campaign.id must be set",
                  "description" : "Description of the error"
                }
              }
            }
          }
        }
      },
      "FORBIDDEN" : {
        "type" : "object",
        "properties" : {
          "http_status_code" : {
            "type" : "string",
            "example" : 403,
            "description" : "Status code"
          },
          "message" : {
            "type" : "string",
            "example" : "API Key is not valid or is expired / revoked.",
            "description" : "Description of the error"
          }
        }
      },
      "NOT_FOUND" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string",
            "example" : "CAMPAIGN_NOT_FOUND",
            "description" : "CAMPAIGN_NOT_FOUND"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "Description of the error",
            "example" : "No campaign could be found"
          }
        }
      },
      "UNAUTHORIZED" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "INVALID_OAUTH2_TOKEN",
                "description" : "Type of the error. Ex: INVALID_OAUTH2_TOKEN"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the error",
                "example" : "Incorrect Oauth2 token"
              }
            }
          }
        }
      }
    },
    "Adim" : {
      "type" : "object",
      "description" : "Ad to display along search results",
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Ad identifier",
          "x-oldKey" : "adimId"
        },
        "imageUrl" : {
          "type" : "string",
          "description" : "URI pointing to the ad image"
        },
        "customerId" : {
          "type" : "integer",
          "description" : "Ad customer identifier"
        },
        "title" : {
          "type" : "string",
          "description" : "Small text defining the ad as provided by the customer"
        }
      }
    },
    "AdimTypesArray" : {
      "type" : "array",
      "items" : {
        "schema" : {
          "$ref" : "#/x-enums/AdimTypes"
        }
      }
    },
    "AgentsTopNetworks" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "networkName" : {
            "type" : "string",
            "example" : "CENTURY 21"
          },
          "classifiedCount" : {
            "type" : "integer",
            "example" : 5523
          },
          "query" : {
            "type" : "object",
            "properties" : {
              "param" : {
                "type" : "string",
                "enum" : [ "networkIds" ]
              },
              "value" : {
                "type" : "string",
                "example" : "CENT21"
              }
            }
          }
        }
      }
    },
    "LegacyAdims" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "example" : 1992587
        },
        "content" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "PUBLISHER", "CLASSIFIED", "EXTERNAL_RESOURCE" ]
              },
              "formats" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "enum" : [ "LEADERBOARD", "REGULAR" ]
                }
              },
              "target" : {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "enum" : [ "PUBLISHER", "CLASSIFIED" ]
                  },
                  "uri" : {
                    "type" : "string",
                    "example" : "/publisher/1797876"
                  }
                }
              },
              "publisher" : {
                "type" : "object",
                "description" : "only present if type is PUBLISHER",
                "properties" : {
                  "id" : {
                    "type" : "integer",
                    "example" : 1797876
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "logoUri" : {
                    "type" : "string",
                    "example" : "https://static.immoweb.be/logos/1797876.gif?cache=2016071603577"
                  }
                }
              },
              "classifieds" : {
                "type" : "object",
                "properties" : {
                  "realEstateProjects" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "metadata" : {
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "example" : 7200021
                            },
                            "type" : {
                              "type" : "object",
                              "properties" : {
                                "propertyType" : {
                                  "$ref" : "#/x-enums/PropertyTypes"
                                },
                                "propertySubType" : {
                                  "$ref" : "#/x-enums/PropertySubtypes"
                                }
                              },
                              "transaction" : {
                                "type" : "object",
                                "properties" : {
                                  "transactionType" : {
                                    "type" : "string",
                                    "enum" : [ "BUY", "RENT" ]
                                  },
                                  "transactionSubtypes" : {
                                    "$ref" : "#/x-enums/TransactionSubtypes"
                                  },
                                  "realEstateProjectDescription" : {
                                    "type" : "object",
                                    "properties" : {
                                      "projectTag" : {
                                        "type" : "string"
                                      },
                                      "percentageSold" : {
                                        "type" : "integer"
                                      },
                                      "photos" : {
                                        "type" : "array",
                                        "items" : {
                                          "type" : "string",
                                          "example" : "https://static.immoweb.be/photos/0/7/2/0/0/0/2/1/7200021_1.jpg?cache=2018330102783"
                                        }
                                      }
                                    }
                                  },
                                  "interior" : {
                                    "type" : "object",
                                    "properties" : {
                                      "roomsCountRange" : {
                                        "type" : "object",
                                        "properties" : {
                                          "min" : {
                                            "type" : "integer",
                                            "example" : 1
                                          },
                                          "max" : {
                                            "type" : "integer",
                                            "example" : 3
                                          }
                                        }
                                      },
                                      "habitableAreaRange" : {
                                        "type" : "object",
                                        "properties" : {
                                          "min" : {
                                            "type" : "integer",
                                            "example" : 42
                                          },
                                          "max" : {
                                            "type" : "integer",
                                            "example" : 131
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "financial" : {
                                    "type" : "object",
                                    "properties" : {
                                      "salePriceRange" : null,
                                      "type" : "object",
                                      "properties" : {
                                        "min" : {
                                          "type" : "number",
                                          "example" : 152000
                                        },
                                        "max" : {
                                          "type" : "number",
                                          "example" : 689800
                                        }
                                      }
                                    }
                                  },
                                  "location" : {
                                    "type" : "object",
                                    "properties" : {
                                      "postal" : {
                                        "type" : "object",
                                        "properties" : {
                                          "locality" : {
                                            "type" : "string",
                                            "example" : "Bruxelles"
                                          },
                                          "postalcode" : {
                                            "type" : "string",
                                            "example" : "1000"
                                          }
                                        }
                                      },
                                      "postalAddr" : {
                                        "type" : "object",
                                        "properties" : {
                                          "locality" : {
                                            "type" : "string",
                                            "example" : "Bruxelles"
                                          },
                                          "postalcode" : {
                                            "type" : "string",
                                            "example" : "1000"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "orderings" : {
                      "type" : "object",
                      "properties" : {
                        "references" : null,
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "example" : 7200021
                            },
                            "type" : {
                              "type" : "string",
                              "enum" : [ "REAL_ESTATE_PROJECT" ]
                            }
                          }
                        },
                        "metadata" : {
                          "type" : "object",
                          "properties" : {
                            "ordering" : {
                              "type" : "string",
                              "enum" : [ "FIRST_OUT" ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "externalResources" : {
                "type" : "object",
                "description" : "only present if type is EXTERNAL_RESOURCE",
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  },
                  "fileType" : {
                    "type" : "string",
                    "enum" : [ "IMAGE", "PDF" ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "AutoCompleteTypesArray" : {
      "type" : "array",
      "items" : {
        "schema" : {
          "$ref" : "#/x-enums/AutoCompleteTypes"
        }
      }
    },
    "CommonErrors-400" : {
      "type" : "object",
      "properties" : {
        "errorCode" : {
          "$ref" : "#/x-enums/CommonErrorCodes-400"
        },
        "errorDescription" : {
          "type" : "string",
          "description" : "Error message",
          "example" : "Unrecognized parameter"
        }
      }
    },
    "CommonErrors-415" : {
      "type" : "object",
      "properties" : {
        "errorCode" : {
          "$ref" : "#/x-enums/CommonErrorCodes-415"
        },
        "errorDescription" : {
          "type" : "string",
          "description" : "Error message",
          "example" : "Unsupppoerted media type"
        }
      }
    },
    "ContactEmail" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "object",
          "properties" : {
            "firstName" : {
              "type" : "string"
            },
            "lastName" : {
              "type" : "string"
            },
            "email" : {
              "type" : "string"
            }
          }
        },
        "to" : {
          "type" : "object",
          "properties" : {
            "emails" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : "dest1@immoweb.be"
              }
            }
          }
        },
        "message" : {
          "type" : "object",
          "properties" : {
            "subject" : {
              "type" : "string"
            },
            "body" : {
              "type" : "string"
            }
          }
        },
        "callbackUrl" : {
          "type" : "string",
          "description" : "url to call back after email verification to verify the user",
          "example" : "http://myFront.immoweb.be/contact/email/validation"
        },
        "source" : {
          "$ref" : "#/x-enums/ContactEmailSources"
        },
        "additionalFields" : {
          "type" : "object",
          "description" : "additional fields specific to certain source to generate personnalized email with enriched templates",
          "properties" : {
            "address" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "type" : "string"
                },
                "postalCode" : {
                  "type" : "string"
                },
                "locality" : {
                  "type" : "string"
                }
              }
            },
            "phoneNumber" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "UserContactEmail" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "object",
          "properties" : {
            "firstName" : {
              "type" : "string"
            },
            "lastName" : {
              "type" : "string"
            },
            "email" : {
              "type" : "string"
            }
          }
        },
        "to" : {
          "type" : "object",
          "properties" : {
            "emails" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : "dest1@immoweb.be"
              }
            }
          }
        },
        "message" : {
          "type" : "object",
          "properties" : {
            "subject" : {
              "type" : "string"
            },
            "body" : {
              "type" : "string"
            }
          }
        },
        "source" : {
          "$ref" : "#/x-enums/ContactEmailSources"
        },
        "additionalFields" : {
          "type" : "object",
          "description" : "additional fields specific to certain source to generate personnalized email with enriched templates",
          "properties" : {
            "address" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "type" : "string"
                },
                "postalCode" : {
                  "type" : "string"
                },
                "locality" : {
                  "type" : "string"
                }
              }
            },
            "phoneNumber" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "ContactEmailValidation" : {
      "type" : "object",
      "properties" : {
        "token" : {
          "type" : "string",
          "example" : "TOKEN_RECEIVED_VIA_EMAIL"
        }
      }
    },
    "Cluster" : {
      "type" : "object",
      "description" : "Description of a real estate project, consisting in a group of properties",
      "properties" : {
        "projectInfo" : {
          "type" : "object",
          "properties" : {
            "constructor" : {
              "type" : "string",
              "x-needsReview" : "TBD"
            },
            "groupId" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupItemInfo.groupId"
            },
            "phase" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string",
              "x-oldKey" : "estateGroupInfo.projectTag"
            },
            "deliveryDate" : {
              "type" : "string",
              "x-oldKey" : "estateGroupInfo.deliveryDate"
            },
            "soldPercentage" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.percentageSold"
            },
            "unitsDisplayMode" : {
              "$ref" : "#/x-enums/UnitDisplayModes"
            }
          }
        },
        "priceRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "number",
              "x-oldKey" : "estateGroupInfo.prices.min"
            },
            "max" : {
              "type" : "number",
              "x-oldKey" : "estateGroupInfo.prices.max"
            }
          }
        },
        "surfaceRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.area.min"
            },
            "max" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.area.max"
            }
          }
        },
        "bedroomCountRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.roomCount.min"
            },
            "max" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.roomCount.max"
            }
          }
        },
        "units" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "$ref" : "#/x-enums/PropertyTypes"
              },
              "bedroomCountRange" : {
                "type" : "object",
                "properties" : {
                  "min" : {
                    "type" : "integer"
                  },
                  "max" : {
                    "type" : "integer"
                  }
                }
              },
              "items" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "description" : "A summary description of an estate belonging that's part of a bigger real estate project",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "x-oldKey" : "estateGroupInfo.estateGroupItems[].id"
                    },
                    "bedroomCount" : {
                      "type" : "integer",
                      "x-oldKey" : "estateGroupInfo.estateGroupItems[].roomCount"
                    },
                    "floor" : {
                      "type" : "integer",
                      "x-oldKey" : "estateGroupInfo.estateGroupItems[].floor"
                    },
                    "floorPlanCount" : {
                      "type" : "integer"
                    },
                    "mnemonic" : {
                      "$ref" : "#/x-enums/Mnemonics"
                    },
                    "price" : {
                      "type" : "number",
                      "x-oldKey" : "estateGroupInfo.estateGroupItems[].price"
                    },
                    "realEstateProjectPhase" : {
                      "type" : "string",
                      "enum" : [ "PHASE_1", "PHASE_2", "PHASE_3" ],
                      "x-oldKey" : "estateGroupInfo.estateGroupItems[].realEstateProjectPhase"
                    },
                    "surface" : {
                      "type" : "number",
                      "x-oldKey" : "estateGroupInfo.estateGroupItems[].area"
                    },
                    "saleStatus" : {
                      "$ref" : "#/x-enums/SaleStatuses"
                    },
                    "specificationCount" : {
                      "type" : "integer"
                    },
                    "subtype" : {
                      "$ref" : "#/x-enums/PropertySubtypes"
                    }
                  }
                }
              },
              "priceRange" : {
                "type" : "object",
                "properties" : {
                  "min" : {
                    "type" : "number"
                  },
                  "max" : {
                    "type" : "number"
                  }
                }
              },
              "soldUnitCount" : {
                "type" : "integer"
              },
              "surfaceRange" : {
                "type" : "object",
                "properties" : {
                  "min" : {
                    "type" : "integer"
                  },
                  "max" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ClassifiedMessage" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "object",
          "properties" : {
            "firstName" : {
              "type" : "string",
              "example" : "firstName"
            },
            "lastName" : {
              "type" : "string",
              "example" : "lastName"
            },
            "email" : {
              "type" : "string",
              "example" : "from@from.com"
            },
            "phoneNumber" : {
              "type" : "string",
              "example" : "phone"
            }
          }
        },
        "message" : {
          "type" : "string",
          "example" : "message"
        },
        "sendMeACopy" : {
          "type" : "boolean"
        },
        "to" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "example" : 1234
              }
            }
          }
        }
      }
    },
    "ClassifiedResponses" : {
      "CREATED" : {
        "type" : "object",
        "properties" : {
          "referenceId" : {
            "type" : "string",
            "example" : 2698109
          }
        }
      },
      "BADREQUEST" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "error" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "example" : "MISSING_PROPERTY_TYPE",
                  "description" : "Type of the error. Ex: MISSING_PROPERTY_TYPE"
                },
                "description" : {
                  "type" : "string",
                  "example" : "property.type must be set",
                  "description" : "Description of the error"
                }
              }
            }
          }
        }
      },
      "FORBIDDEN" : {
        "type" : "object",
        "properties" : {
          "http_status_code" : {
            "type" : "string",
            "example" : 403,
            "description" : "Status code"
          },
          "message" : {
            "type" : "string",
            "example" : "API Key is not valid or is expired / revoked.",
            "description" : "Description of the error"
          }
        }
      },
      "NOT_FOUND" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string",
            "example" : "CLASSIFIED_NOT_FOUND",
            "description" : "CLASSIFIED_NOT_FOUND"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "Description of the error",
            "example" : "No classified could be found"
          }
        }
      },
      "UNAUTHORIZED" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "INVALID_OAUTH2_TOKEN",
                "description" : "Type of the error. Ex: INVALID_OAUTH2_TOKEN"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the error",
                "example" : "Incorrect Oauth2 token"
              }
            }
          }
        }
      }
    },
    "ClassifiedRequestsResponses" : {
      "OK" : {
        "type" : "object",
        "properties" : {
          "referenceId" : {
            "type" : "string",
            "example" : "4bb72467-0021-42b7-a155-6612043960c2"
          },
          "created" : {
            "type" : "string",
            "example" : "2018-09-13T12:56:05.219Z"
          },
          "updated" : {
            "type" : "string",
            "example" : "2018-09-13T12:56:05.219Z"
          },
          "step" : {
            "type" : "string",
            "example" : "TRANSACTION_VALIDATION"
          },
          "status" : {
            "type" : "string",
            "example" : "PROCESSED"
          },
          "httpMethod" : {
            "type" : "string",
            "example" : "POST"
          },
          "errors" : {
            "type" : "array",
            "example" : [ ]
          },
          "classified" : {
            "$ref" : "#/components/schemas/ClassifiedIn"
          }
        }
      },
      "FORBIDDEN" : {
        "type" : "object",
        "properties" : {
          "http_status_code" : {
            "type" : "string",
            "example" : 403,
            "description" : "Status code"
          },
          "message" : {
            "type" : "string",
            "example" : "API Key is not valid or is expired / revoked.",
            "description" : "Description of the error"
          }
        }
      },
      "NOTFOUND" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "UNKNOWN_REFERENCE_ID",
                "description" : "Type of the error. Ex: UNKNOWN_REFERENCE_ID"
              },
              "description" : {
                "type" : "string",
                "example" : "Invalid or missing referenceId.",
                "description" : "Description of the error"
              }
            }
          }
        }
      }
    },
    "ClusterSearch" : {
      "type" : "object",
      "description" : "Description of a real estate project, consisting in a group of properties",
      "properties" : {
        "priceRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "number",
              "x-oldKey" : "estateGroupInfo.prices.min"
            },
            "max" : {
              "type" : "number",
              "x-oldKey" : "estateGroupInfo.prices.max"
            }
          }
        },
        "bedroomCountRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.roomCount.min"
            },
            "max" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.roomCount.max"
            }
          }
        },
        "surfaceRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.area.min"
            },
            "max" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.area.max"
            }
          }
        }
      }
    },
    "ClusterSearch-V2.1" : {
      "type" : "object",
      "description" : "Description of a real estate project, consisting in a group of properties",
      "properties" : {
        "projectInfo" : {
          "type" : "object",
          "properties" : {
            "soldPercentage" : {
              "type" : "integer"
            }
          }
        },
        "priceRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "number",
              "x-oldKey" : "estateGroupInfo.prices.min"
            },
            "max" : {
              "type" : "number",
              "x-oldKey" : "estateGroupInfo.prices.max"
            }
          }
        },
        "bedroomCountRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.roomCount.min"
            },
            "max" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.roomCount.max"
            }
          }
        },
        "surfaceRange" : {
          "type" : "object",
          "properties" : {
            "min" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.area.min"
            },
            "max" : {
              "type" : "integer",
              "x-oldKey" : "estateGroupInfo.area.max"
            }
          }
        }
      }
    },
    "CustomerContactInfo" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "usage" : {
            "$ref" : "#/x-enums/ContactInfoUsages"
          },
          "email" : {
            "type" : "string"
          },
          "landline" : {
            "type" : "string"
          },
          "mobile" : {
            "type" : "string"
          },
          "faxNumber" : {
            "type" : "string"
          }
        }
      }
    },
    "CustomerGroupInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "logoUrl" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "activeClassifieds" : {
          "type" : "object",
          "properties" : {
            "forSaleCount" : {
              "type" : "integer"
            },
            "forRentCount" : {
              "type" : "integer"
            },
            "totalCount" : {
              "type" : "integer"
            }
          }
        }
      }
    },
    "CustomerPublicInfo" : {
      "type" : "object",
      "properties" : {
        "activeClassifieds" : {
          "type" : "object",
          "properties" : {
            "forSaleCount" : {
              "type" : "integer"
            },
            "forRentCount" : {
              "type" : "integer"
            },
            "totalCount" : {
              "type" : "integer"
            }
          }
        },
        "contactHours" : {
          "type" : "object",
          "properties" : {
            "landline" : {
              "type" : "string",
              "x-oldKey" : "contactHours"
            },
            "mobile" : {
              "type" : "string",
              "x-oldKey" : "contactHoursGsm"
            }
          }
        },
        "description" : {
          "type" : "string",
          "x-oldKey" : "description.description"
        },
        "alternativeDescriptions" : {
          "type" : "object",
          "properties" : {
            "en" : {
              "type" : "string"
            },
            "fr" : {
              "type" : "string"
            },
            "nl" : {
              "type" : "string"
            }
          }
        },
        "ipiNo" : {
          "type" : "string",
          "x-oldKey" : "ipiNo"
        },
        "logoUrl" : {
          "type" : "string",
          "x-oldKey" : "logoUri"
        },
        "name" : {
          "type" : "string",
          "x-oldKey" : "name"
        },
        "vatNumber" : {
          "type" : "string",
          "x-oldKey" : "RFU"
        },
        "website" : {
          "type" : "string",
          "x-oldKey" : "RFU"
        }
      }
    },
    "Customer" : {
      "type" : "object",
      "properties" : {
        "info" : {
          "$ref" : "#/x-maskedModels/CustomerInfo"
        },
        "location" : {
          "$ref" : "#/x-maskedModels/CustomerLocation"
        },
        "isOwner" : {
          "type" : "boolean",
          "description" : "True if the customer is the owner of the classified"
        }
      }
    },
    "CustomerV2.1" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "type" : {
          "$ref" : "#/x-enums/CustomerTypes"
        },
        "isOwner" : {
          "type" : "boolean",
          "description" : "True if the customer is the owner of the classified"
        },
        "contactInfo" : {
          "$ref" : "#/x-maskedModels/CustomerPublicInfo"
        },
        "location" : {
          "$ref" : "#/x-maskedModels/CustomerLocation"
        },
        "publicInfo" : {
          "$ref" : "#/x-maskedModels/CustomerPublicInfo"
        }
      }
    },
    "CustomerInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "x-oldKey" : "contactInfo.clientId"
        },
        "type" : {
          "$ref" : "#/x-enums/CustomerTypes"
        },
        "email" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.email"
        },
        "ipiNo" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.ipiNo"
        },
        "logoUrl" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.logo"
        },
        "mobileNumber" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.mobile"
        },
        "notaryGroupId" : {
          "type" : "string"
        },
        "notaryNetworkId" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.phone"
        },
        "referenceWithinAgency" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.referenceWithinAgency"
        },
        "referenceWithinSoftware" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.referenceWithinSoftware"
        },
        "responsible" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.responsible"
        },
        "name" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.title"
        },
        "website" : {
          "type" : "string",
          "x-oldKey" : "contactInfo.www"
        }
      }
    },
    "CustomerLocation" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "object",
          "properties" : {
            "country" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.country"
            },
            "region" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.region"
            },
            "province" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.province"
            },
            "district" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.district"
            },
            "locality" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.locality"
            },
            "postalCode" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.postalcode"
            },
            "street" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.street"
            },
            "number" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.number"
            },
            "box" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.box"
            },
            "propertyName" : {
              "type" : "string",
              "x-oldKey" : "contactInfo.location.postalAddr.buildingName"
            }
          }
        },
        "geoPoint" : {
          "type" : "object",
          "properties" : {
            "latitude" : {
              "type" : "number",
              "x-oldKey" : "contactInfo.location.geoPoint.latitude"
            },
            "longitude" : {
              "type" : "number",
              "x-oldKey" : "contactInfo.location.geoPoint.longitude"
            }
          }
        }
      }
    },
    "CustomerMessage" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string",
          "example" : "firstName"
        },
        "lastName" : {
          "type" : "string",
          "example" : "lastName"
        },
        "email" : {
          "type" : "string",
          "example" : "from@from.com"
        },
        "phone" : {
          "type" : "string",
          "example" : "phone"
        },
        "message" : {
          "type" : "string",
          "example" : "message"
        },
        "sendMeACopy" : {
          "type" : "boolean"
        }
      }
    },
    "FlagsAndStatistics" : {
      "type" : "object",
      "properties" : {
        "flags" : {
          "type" : "object",
          "properties" : {
            "isAPublicSale" : {
              "type" : "boolean",
              "x-oldKey" : "flags.publicSale"
            },
            "isANewlyPublishedClassified" : {
              "type" : "boolean",
              "x-oldKey" : "flags.new"
            },
            "isAPropertyWithNewPrice" : {
              "type" : "boolean",
              "x-oldKey" : "flags.newPrice"
            },
            "isNewlyBuilt" : {
              "type" : "boolean",
              "x-oldKey" : "flags.newProject"
            },
            "isANotarySale" : {
              "type" : "boolean",
              "x-oldKey" : "flags.notaries"
            },
            "isALifeAnnuitySale" : {
              "type" : "boolean",
              "x-oldKey" : "flags.annuity"
            },
            "hasIw360Media" : null,
            "orderingScores" : {
              "type" : "object",
              "properties" : {
                "adQuality" : {
                  "type" : "number",
                  "x-oldKey" : "flags.adQualityScore"
                },
                "date" : {
                  "type" : "string",
                  "x-oldKey" : "flags.dateOrderingScore"
                },
                "default" : {
                  "type" : "integer",
                  "x-oldKey" : "flags.defaultOrderingScore"
                },
                "price" : {
                  "type" : "number",
                  "x-oldKey" : "flags.priceOrderingScore"
                },
                "priceSqm" : {
                  "type" : "number",
                  "x-oldKey" : "flags.pricem2orderScore"
                }
              }
            }
          }
        },
        "statistics" : {
          "type" : "object",
          "properties" : {
            "bookmarkCount" : {
              "type" : "integer",
              "x-oldKey" : "bookmarksCount"
            },
            "userBookmarkData" : {
              "type" : "object",
              "description" : "Current user bookmark data. Whole section is not present for anonymous calls",
              "properties" : {
                "alertPrice" : {
                  "description" : "a price which will trigger sending of mails of property price goes below this one",
                  "type" : "number",
                  "x-oldKey" : "userBookmarkData.alertPrice"
                },
                "creationDate" : {
                  "description" : "the date when the bookmark was created by the current user This is a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. ex: 2014-01-27T00:40:57.165Z",
                  "type" : "string",
                  "format" : "date-time",
                  "x-oldKey" : "userBookmarkData.createdDate"
                },
                "description" : {
                  "description" : "User's comment about the saved property",
                  "type" : "string",
                  "x-oldKey" : "userBookmarkData.description"
                },
                "isAlertEmailSet" : {
                  "description" : "Have user requested a price alert email",
                  "type" : "boolean",
                  "x-oldKey" : "userBookmarkData.sendEmail"
                },
                "rating" : {
                  "description" : "Rating given to the saved property",
                  "type" : "number",
                  "minimum" : 0,
                  "maximum" : 4,
                  "x-oldKey" : "userBookmarkData.rating"
                },
                "wasOwnerContacted" : {
                  "description" : "Have user contacted the advertiser",
                  "type" : "boolean",
                  "x-oldKey" : "userBookmarkData.contactOwner"
                },
                "wasPropertyVisited" : {
                  "description" : "Have user visited the property",
                  "type" : "boolean",
                  "x-oldKey" : "userBookmarkData.propertyVisited"
                }
              }
            },
            "viewCount" : {
              "type" : "integer",
              "x-oldKey" : "viewsCount"
            }
          }
        }
      }
    },
    "Locations_TopCities_array" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "districtName" : {
            "type" : "string",
            "example" : "Alost"
          },
          "query" : {
            "type" : "object",
            "properties" : {
              "param" : {
                "type" : "string",
                "enum" : [ "districts" ]
              },
              "value" : {
                "type" : "string",
                "example" : "AALST"
              }
            }
          }
        }
      }
    },
    "LocalitiesAutoCompleteResponse" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "localityName" : {
            "type" : "string",
            "example" : "Brussels",
            "description" : "Name of the locality, if applicable"
          },
          "countryName" : {
            "type" : "string",
            "example" : "Belgium",
            "description" : "Name of the country, if applicable"
          },
          "postalCode" : {
            "type" : "string",
            "example" : "1000",
            "description" : "Postal Code of the city, if applicable"
          },
          "query" : {
            "type" : "object",
            "properties" : {
              "param" : {
                "type" : "string",
                "example" : "postalCodes"
              },
              "value" : {
                "type" : "string",
                "example" : "1000"
              }
            }
          }
        }
      }
    },
    "Media" : {
      "type" : "object",
      "properties" : {
        "files" : {
          "type" : "object",
          "properties" : {
            "floorPlans" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "uri"
              }
            },
            "specifications" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "pictures" : {
          "type" : "object",
          "properties" : {
            "baseUrl" : {
              "type" : "string"
            },
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "lastModificationDate" : {
                    "type" : "string",
                    "description" : "This is a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. ex: 2014-01-27T00:40:57.165",
                    "x-oldKey" : "picturesResized[].lastModificationDate"
                  },
                  "orientation" : {
                    "$ref" : "#/x-enums/PictureOrientations"
                  },
                  "relativeUrl" : {
                    "type" : "object",
                    "properties" : {
                      "large" : {
                        "type" : "string",
                        "format" : "uri",
                        "x-oldKey" : "picturesResized[].pictureFormatLarge"
                      },
                      "medium" : {
                        "type" : "string",
                        "format" : "uri",
                        "x-oldKey" : "picturesResized[].pictureFormatMedium"
                      },
                      "raw" : {
                        "type" : "string",
                        "format" : "uri",
                        "x-oldKey" : "photos[]"
                      },
                      "small" : {
                        "type" : "string",
                        "format" : "uri",
                        "x-oldKey" : "picturesResized[].pictureFormatSmall"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "iw360" : {
          "type" : "object",
          "properties" : {
            "url" : {
              "type" : "string",
              "description" : "url of the iw360 tour if available for classified"
            }
          }
        },
        "virtualExperience" : {
          "type" : "object",
          "properties" : {
            "url" : {
              "type" : "string",
              "format" : "uri",
              "x-oldKey" : "visualisation.virtualExperienceUrl"
            }
          }
        }
      }
    },
    "MediaPatch" : {
      "type" : "object",
      "properties" : {
        "iw360" : {
          "type" : "object",
          "properties" : {
            "lastModificationDate" : {
              "type" : "string",
              "format" : "date-time",
              "example" : "2017-07-21T17:32:28Z"
            },
            "status" : {
              "type" : "string",
              "enum" : "MediaStatuses"
            },
            "url" : {
              "type" : "string",
              "description" : "url of the iw360 tour if available for classified"
            }
          }
        }
      }
    },
    "Property" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "description" : "any information that you haven't had the chance to enter elsewhere. For example: motorway 1 km away, completely renovated, new boilder, underfloor heating or forced-air heating, tennis court, mezzanine, wood flooring or carpets throughout, quality d√É∆í√Ü‚Äô√É‚Ä†√¢‚Ç¨‚Ñ¢√É∆í√¢‚Ç¨≈°√É‚Äö√Ç¬©cor, etc. A free text of 1-750 chars",
          "type" : "string",
          "x-oldKey" : "description.description,description.moreInfo",
          "x-comments" : "description concatenated with moreInfo"
        },
        "alternativeDescriptions" : {
          "type" : "object",
          "properties" : {
            "en" : {
              "type" : "string"
            },
            "fr" : {
              "type" : "string"
            },
            "nl" : {
              "type" : "string"
            }
          }
        },
        "isHolidayProperty" : {
          "description" : "A holiday property is simply a property located in a holiday setting. It is not necessarily a property to be rented by holidaymakers. A business located in a popular tourist area will be described as a 'holiday' business.",
          "type" : "boolean",
          "x-oldKey" : "land.holidayProperty"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the property if it exists. Ex: Villa MyHoliday",
          "x-oldKey" : "RFU"
        },
        "subtype" : {
          "$ref" : "#/x-enums/PropertySubtypes"
        },
        "title" : {
          "description" : "a short but meaningful title to your property, a free text of 1-44 chars",
          "type" : "string",
          "x-oldKey" : "description.title"
        },
        "alternativeTitles" : {
          "type" : "object",
          "properties" : {
            "en" : {
              "type" : "string"
            },
            "fr" : {
              "type" : "string"
            },
            "nl" : {
              "type" : "string"
            }
          }
        },
        "type" : {
          "$ref" : "#/x-enums/PropertyTypes"
        },
        "attic" : {
          "type" : "object",
          "properties" : {
            "surface" : {
              "type" : "integer",
              "description" : "Attic area (m2)",
              "x-oldKey" : "interior.atticm2"
            },
            "exists" : {
              "type" : "boolean",
              "x-oldKey" : "interior.atticProperty"
            },
            "isIsolated" : {
              "description" : "Attic is isolated",
              "type" : "boolean",
              "x-oldKey" : "interior.isolatedAtticProperty"
            },
            "isAccessibleWithFixedStairs" : {
              "description" : "Attic is accessible with fixed stairs",
              "type" : "boolean",
              "x-oldKey" : "interior.atticAccessibleWithFixedStairs"
            }
          }
        },
        "basement" : {
          "type" : "object",
          "properties" : {
            "surface" : {
              "type" : "integer",
              "description" : "Basement surface (m2)",
              "x-oldKey" : "interior.cellarm2"
            },
            "exists" : {
              "type" : "boolean",
              "x-oldKey" : "interior.cellarProperty"
            }
          }
        },
        "bathroom" : {
          "type" : "object",
          "required" : [ "count" ],
          "properties" : {
            "count" : {
              "type" : "integer",
              "x-oldKey" : "interior.bathroomNumber"
            },
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "x-oldKey" : "RFU"
                  }
                }
              }
            }
          }
        },
        "bedroom" : {
          "type" : "object",
          "required" : [ "count" ],
          "properties" : {
            "count" : {
              "type" : "integer",
              "x-oldKey" : "interior.bedrooms"
            },
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "x-oldKey" : "interior.bedroom1m2,interior.bedroom2m2,interior.bedroom3m2,interior.bedroom4m2,interior.bedroom5m2"
                  }
                }
              }
            },
            "hasDressingRoom" : {
              "description" : "A dressing room is a small room where you can keep your clothes, close to the bedroom.",
              "type" : "boolean",
              "x-oldKey" : "interior.dressingRoom"
            }
          }
        },
        "building" : {
          "type" : "object",
          "properties" : {
            "annexCount" : {
              "type" : "integer",
              "x-oldKey" : "general.outbuildingsNumber"
            },
            "condition" : {
              "$ref" : "#/x-enums/BuildingConditions"
            },
            "constructionYear" : {
              "type" : "integer",
              "x-oldKey" : "general.yearOfConstruction"
            },
            "facadeCount" : {
              "type" : "integer",
              "x-oldKey" : "general.frontageNumber"
            },
            "floorCount" : {
              "type" : "integer",
              "x-oldKey" : "general.floorsNumber"
            },
            "streetFacadeWidth" : {
              "type" : "number",
              "x-oldKey" : "general.facadeStreetWidth"
            }
          }
        },
        "certificates" : {
          "type" : "object",
          "properties" : {
            "isAsBuiltPlan" : {
              "description" : "A completely new instrument (in Flanders) in favor of the legal security is the as-built plan. An as-built plan is a certificate in which it is declared that the acts referring to a construction or a real unit do not differ or hardly from the plans which make l' object of l' urban authorization or of the declaration. It can consequently be regarded as a kind of mini-authorization of regularization. An as-built still d' allows; to remove ab.initio any penal character with the operations concerned. An as-built will be obligatory from June 2010, for the recipient of a license from town planning and for the person who transfers the property right from on June 1, 2012. An as-built plan will be consequently an important component within the framework of transactions of all kinds.",
              "type" : "boolean",
              "x-oldKey" : "buildingRegulation.asBuiltPlan",
              "x-oldKeyValues" : [ "YES", "NO", "NOT_SPECIFIED" ]
            },
            "globalInsulationLevel" : {
              "description" : "EPC K-level (free text) The K-level reflects the degree of thermal insulation of a home. It takes account of heat loss through exterior walls, roofs, floors and windows.",
              "type" : "integer",
              "x-oldKey" : "energy.K_level"
            },
            "oilTankCertificateStatus" : {
              "description" : "In Belgium All housefuel containers need to be checked by a certified technician.",
              "ref" : "#/x-enums/OilTankCertificateStatus",
              "x-oldKey" : "energy.conformityCertificationForFuelTanks"
            },
            "primaryEnergyConsumptionLevel" : {
              "description" : "EPC E-level (free text) The E-level expresses the energy efficiency of a dwelling. The calculation not only takes into account the home insulation, but also its compactness, the performance of the heating and hot water production, exploitation of solar heat, ventilation, etc.",
              "type" : "integer",
              "x-oldKey" : "energy.E_level"
            }
          }
        },
        "commonEquipment" : {
          "type" : "object",
          "properties" : {
            "hasCaretakerOrConcierge" : {
              "type" : "boolean",
              "x-oldKey" : "general.caretaker",
              "x-needsReview" : "hasCaretaker or hasConcierge?"
            },
            "hasDisabledAccess" : {
              "type" : "boolean",
              "x-oldKey" : "general.disabledAccess"
            },
            "hasLift" : {
              "type" : "boolean",
              "x-oldKey" : "general.lift"
            }
          }
        },
        "constructionPermit" : {
          "type" : "object",
          "properties" : {
            "constructionType" : {
              "$ref" : "#/x-enums/ConstructionTypes"
            },
            "floodZoneType" : {
              "$ref" : "#/x-enums/FloodZoneTypes"
            },
            "isPermitObtained" : {
              "description" : "Planning permission is an authorisation granted by the local authority to carry out building work on a given plot of land. In order to obtain planning permission or a list of all previous permissions granted for your property, contact your local Town Planning Department.",
              "type" : "boolean",
              "x-oldKeyValues" : [ "YES", "NO", "NOT_SPECIFIED" ],
              "x-oldKey" : "buildingRegulation.planningPermissionObtained"
            },
            "hasObligationToConstruct" : {
              "type" : "boolean",
              "x-oldKey" : "buildingRegulation.obligationToBuild"
            },
            "hasPlotDivisionAuthorization" : {
              "description" : "Planning permission is an authorisation granted by the local authority to carry out building work on a given plot of land. In order to obtain planning permission or a list of all previous permissions granted for your property, contact your local Town Planning Department.",
              "type" : "boolean",
              "x-oldKeyValues" : [ "YES", "NO", "NOT_SPECIFIED" ],
              "x-oldKey" : "buildingRegulation.subdivisionPermit"
            },
            "hasPossiblePriorityPurchaseRight" : {
              "description" : "The priority purchase right gives the public authorities priority over any other buyer in the sale of a property. In practice, as soon as the sale agreement has been concluded with a buyer, the solicitor must inform the public authorities. The authorities then have one month in Flanders and two months in Wallonia and Brussels in which to confirm whether they wish to exercise their priority purchase right. In the event that they do, they will substitute the buyer and purchase the property for the price and subject to the terms set out in the initial sale agreement. You can contact your local council to find out if your property is located in an area where this priority purchase right applies. Moreover, the authorities must inform all owners of properties located within a district that is subject to the priority purchase right of the existence of that right within 10 days of the entry into force of the corresponding development masterplan by registered letter.",
              "type" : "boolean",
              "x-oldKeyValues" : [ "YES", "NO", "NOT_SPECIFIED" ],
              "x-oldKey" : "buildingRegulation.possiblePriorityPurchaseRight"
            },
            "isBreachingUrbanPlanningRegulation" : {
              "type" : "boolean",
              "x-oldKey" : [ "YES", "NO", "NOT_SPECIFIED" ],
              "x-oldKeyValues" : "buildingRegulation.proceedingsForBreachOfPlanningRegulations"
            },
            "floodZoneIconUrl" : {
              "type" : "string",
              "format" : "uri",
              "x-oldKey" : "buildingRegulation.propertyZoneIcon"
            },
            "totalBuildableGroundFloorSurface" : {
              "type" : "integer",
              "x-oldKey" : "buildingRegulation.totalGroundFloorBuildable"
            },
            "urbanPlanningInformation" : {
              "description" : "Town planning (free text) In this 'Description' field, you can provide any information that you haven't had the chance to enter elsewhere in the form. For example: motorway 1 km away, completely renovated, new boilder, underfloor heating or forced-air heating, tennis court, mezzanine, wood flooring or carpets throughout, quality decor, etc",
              "type" : "string",
              "x-oldKey" : "buildingRegulation.townPlanning"
            }
          }
        },
        "diningRoom" : {
          "type" : "object",
          "required" : [ "exists" ],
          "properties" : {
            "surface" : {
              "type" : "integer",
              "description" : "Dining room area (m2)",
              "x-oldKey" : "interior.diningRoomm2"
            },
            "exists" : {
              "type" : "boolean",
              "x-oldKey" : "interior.diningRoomProperty"
            }
          }
        },
        "energy" : {
          "type" : "object",
          "properties" : {
            "heatingType" : {
              "$ref" : "#/x-enums/HeatingTypes"
            },
            "hasHeatPump" : {
              "type" : "boolean",
              "x-oldKey" : "energy.heatPump"
            },
            "hasPhotovoltaicPanels" : {
              "type" : "boolean",
              "x-oldKey" : "energy.photovoltaicSolarPanels"
            },
            "hasThermicPanels" : {
              "type" : "boolean",
              "x-oldKey" : "energy.thermicSolarPanels"
            },
            "hasCollectiveWaterHeater" : {
              "type" : "boolean",
              "x-oldKey" : "energy.commonHeatingWater"
            },
            "hasDoubleGlazing" : {
              "type" : "boolean",
              "x-oldKey" : "energy.doubleGlazing"
            },
            "performance" : {
              "$ref" : "#/x-enums/EnergyPerformances"
            }
          }
        },
        "kitchen" : {
          "type" : "object",
          "properties" : {
            "surface" : {
              "type" : "integer",
              "x-oldKey" : "interior.kitchenm2"
            },
            "type" : {
              "$ref" : "#/x-enums/KitchenSetups"
            },
            "holidayRentalsFeatures" : {
              "type" : "object",
              "properties" : {
                "hasOven" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "hasMicroWaveOven" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "hasDishwasher" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "hasWashingMachine" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "hasFridge" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "hasFreezer" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "hasSteamOven" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                }
              }
            }
          }
        },
        "land" : {
          "type" : "object",
          "properties" : {
            "hasGasWaterElectricityConnection" : {
              "type" : "boolean",
              "x-oldKey" : "interior.gasWaterElectricity"
            },
            "sewerConnection" : {
              "$ref" : "#/x-enums/SewerConnections"
            },
            "surface" : {
              "description" : "The total surface area of the land corresponds to the total surface area of your plot including the space taken up by any constructions. 1 are = 100 m2 1 hectare = 100 ares = 10000 m2",
              "type" : "integer",
              "x-oldKey" : "land.surfaceAreaOfPlot"
            },
            "rearLand" : {
              "description" : "Depth of plot in m",
              "type" : "integer",
              "x-oldKey" : "land.depthOfPlot"
            },
            "landWidth" : {
              "description" : "Width of plot to street in m",
              "type" : "number",
              "x-oldKey" : "land.widthOfPlotToStreet"
            },
            "isFacingStreet" : {
              "type" : "boolean",
              "x-oldKey" : "land.landFacingStreet"
            },
            "isFlat" : {
              "type" : "boolean",
              "x-oldKey" : "land.flatLand"
            },
            "hasPlotToRear" : {
              "type" : "boolean",
              "x-oldKey" : "land.plotToRear"
            },
            "isWooded" : {
              "description" : "when there are trees on the plot",
              "type" : "boolean",
              "x-oldKey" : "land.isWooded"
            },
            "latestUseDesignation" : {
              "$ref" : "#/x-enums/LatestUseDesignations"
            }
          }
        },
        "laundryRoom" : {
          "type" : "object",
          "properties" : {
            "surface" : {
              "type" : "integer",
              "x-oldKey" : "RFU"
            },
            "exists" : {
              "type" : "boolean",
              "x-oldKey" : "interior.utilityRoom"
            }
          }
        },
        "livingDescription" : {
          "type" : "object",
          "x-comment" : "need review on name",
          "properties" : {
            "netHabitableSurface" : {
              "type" : "integer",
              "x-oldKey" : "general.netFloorArea"
            },
            "habitableUnitCount" : {
              "type" : "integer",
              "x-oldKey" : "general.dwellingsNumber"
            },
            "roomCount" : {
              "type" : "integer",
              "x-oldKey" : "interior.roomCount"
            },
            "fireplaceCount" : {
              "type" : "integer",
              "x-oldKey" : "interior.fireplaceNumber"
            }
          }
        },
        "livingRoom" : {
          "type" : "object",
          "required" : [ "exists" ],
          "properties" : {
            "surface" : {
              "type" : "integer",
              "description" : "Living room area (m2)",
              "x-oldKey" : "interior.livingRoomm2"
            },
            "exists" : {
              "type" : "boolean",
              "x-oldKey" : "interior.livingRoomProperty"
            }
          }
        },
        "location" : {
          "type" : "object",
          "properties" : {
            "address" : {
              "type" : "object",
              "x-oldKey" : "geographical.postalAddr",
              "properties" : {
                "country" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.country"
                },
                "region" : {
                  "type" : "string"
                },
                "regionCode" : {
                  "type" : "string",
                  "schema" : {
                    "$ref" : "#/x-enums/Regions"
                  },
                  "x-oldKey" : "geographical.postalAddr.region"
                },
                "province" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.province"
                },
                "district" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.district"
                },
                "locality" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.locality"
                },
                "postalCode" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.postalcode"
                },
                "street" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.street"
                },
                "placeName" : {
                  "type" : "string",
                  "x-oldKey" : "general.districtOrPlaceName"
                },
                "number" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.number"
                },
                "box" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.box"
                },
                "propertyName" : {
                  "type" : "string",
                  "x-oldKey" : "geographical.postalAddr.buildingName"
                },
                "floor" : {
                  "type" : "integer",
                  "x-oldKey" : "general.floorOfProperty"
                }
              }
            },
            "geoPoint" : {
              "type" : "object",
              "properties" : {
                "latitude" : {
                  "type" : "number",
                  "x-oldKey" : "geographical.geoPoint.latitude"
                },
                "longitude" : {
                  "type" : "number",
                  "x-oldKey" : "geographical.geoPoint.longitude"
                },
                "approximated" : {
                  "type" : "boolean",
                  "description" : "Yes if the point was approximated using other sources of data (i.e. the center of the commune)",
                  "x-oldKey" : "geographical.geoPoint.aproximated"
                }
              }
            },
            "surroundings" : {
              "type" : "object",
              "properties" : {
                "pointsOfInterest" : {
                  "description" : "point of interests near by this property",
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "$ref" : "#/x-enums/POITypes"
                      },
                      "distance" : {
                        "description" : "Distance in meters to the POI",
                        "type" : "integer",
                        "minimum" : 0,
                        "x-oldKey" : "geographical.POIs[].distance"
                      }
                    }
                  }
                },
                "hasSeaView" : {
                  "type" : "boolean"
                },
                "type" : {
                  "$ref" : "#/x-enums/SurroundingTypes"
                }
              }
            }
          }
        },
        "newlyBuilt" : {
          "type" : "object",
          "properties" : {
            "isFirstOccupation" : {
              "type" : "boolean",
              "x-oldKey" : "general.firstOccupation"
            }
          }
        },
        "outdoor" : {
          "type" : "object",
          "properties" : {
            "holidayRentalsFeatures" : {
              "type" : "object",
              "properties" : {
                "hasBalcony" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "hasBarbecue" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                }
              }
            },
            "garden" : {
              "type" : "object",
              "properties" : {
                "exists" : {
                  "type" : "boolean",
                  "x-oldKey" : "land.hasGarden"
                },
                "surface" : {
                  "description" : "(in m2) The surface area of a private garden is the total area of the plot minus the area occupied by the house, entrance path and driveway. In general, small gardens between the house and the road are no longer considered private gardens.",
                  "type" : "integer",
                  "x-oldKey" : "land.areaOfGarden"
                },
                "orientation" : {
                  "$ref" : "#/x-enums/Orientations"
                }
              }
            }
          }
        },
        "parking" : {
          "type" : "object",
          "properties" : {
            "parkingSpaceCount" : {
              "type" : "object",
              "properties" : {
                "indoor" : {
                  "type" : "integer",
                  "x-oldKey" : "general.insideParkingNumber"
                },
                "outdoor" : {
                  "type" : "integer",
                  "x-oldKey" : "general.outsideParkingNumber"
                },
                "closedBox" : {
                  "type" : "integer",
                  "x-oldKey" : "RFU"
                }
              }
            }
          }
        },
        "privateEquipment" : {
          "type" : "object",
          "properties" : {
            "hasAirConditioning" : {
              "type" : "boolean",
              "x-oldKey" : "energy.airConditioning"
            },
            "hasArmoredDoor" : {
              "type" : "boolean",
              "x-oldKey" : "interior.reinforcedDoor"
            },
            "hasCableTV" : {
              "type" : "boolean",
              "x-oldKey" : "interior.cableTV"
            },
            "hasDoorPhone" : {
              "type" : "boolean",
              "x-oldKey" : "interior.intercom"
            },
            "hasInternet" : {
              "type" : "boolean",
              "x-oldKey" : "RFU"
            },
            "hasSecureAccessAlarm" : {
              "type" : "boolean",
              "x-oldKey" : "interior.secureAccessAlarm"
            },
            "hasVisiophone" : {
              "type" : "boolean",
              "x-oldKey" : "interior.hasVisiophone"
            }
          }
        },
        "showerRoom" : {
          "type" : "object",
          "required" : [ "count" ],
          "properties" : {
            "count" : {
              "type" : "integer",
              "x-oldKey" : "interior.showerRoomNumber"
            },
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "x-oldKey" : "RFU"
                  }
                }
              }
            }
          }
        },
        "specificities" : {
          "type" : "object",
          "properties" : {
            "BRI" : {
              "type" : "object",
              "properties" : {
                "internalFixturesAndFittings" : {
                  "type" : "string",
                  "x-oldKey" : "interior.InternalFixturesAndFittings"
                },
                "miscellaneousFixturesAndFittings" : {
                  "type" : "string",
                  "x-oldKey" : "interior.miscellaneousFixturesAndFittings"
                },
                "totalFloorSurface" : {
                  "type" : "integer",
                  "x-oldKey" : "interior.availableFloorArea"
                }
              }
            },
            "industrial" : {
              "type" : "object",
              "properties" : {
                "accessDoorCount" : {
                  "type" : "integer",
                  "x-oldKey" : "interior.amountAccessDoor"
                },
                "sectionalDoorCount" : {
                  "type" : "integer",
                  "x-oldKey" : "interior.amountSectionalDoor"
                },
                "slidingDoorCount" : {
                  "type" : "integer",
                  "x-oldKey" : "interior.amountSlidingDoor"
                },
                "loadingBayCount" : {
                  "type" : "integer",
                  "x-oldKey" : "interior.amountLoadingBay"
                },
                "coveredBaysCount" : {
                  "type" : "integer",
                  "x-oldKey" : "interior.amountCoveredBays"
                },
                "loadingBayWithLiftingDeviceCount" : {
                  "type" : "integer",
                  "x-oldKey" : "interior.amountDockLeveler"
                },
                "ceilingHeight" : {
                  "type" : "number",
                  "x-oldKey" : "interior.headroom"
                },
                "maxAvailableHeight" : {
                  "type" : "number",
                  "x-oldKey" : "interior.maxAvailableHeight"
                },
                "minAvailableHeight" : {
                  "type" : "number",
                  "x-oldKey" : "interior.minAvailableHeight"
                }
              }
            },
            "largeEnterprise" : {
              "type" : "object",
              "properties" : {
                "showroomSurface" : {
                  "type" : "integer",
                  "x-oldKey" : "interior.floorAreaOfShowroom"
                },
                "hasReceptionDesk" : {
                  "type" : "boolean",
                  "x-oldKey" : "interior.receptionDesk"
                }
              }
            },
            "shop" : {
              "type" : "object",
              "properties" : {
                "shopWindowWidth" : {
                  "type" : "number",
                  "x-oldKey" : "interior.widthOfDisplayWindow"
                },
                "hasGoodwill" : {
                  "type" : "boolean",
                  "x-oldKey" : "financial.withBusinessToSell"
                },
                "goodwillPrice" : {
                  "type" : "number",
                  "x-oldKey" : "financial.priceOfBusiness"
                }
              }
            },
            "SME" : {
              "type" : "object",
              "properties" : {
                "office" : {
                  "type" : "object",
                  "properties" : {
                    "surface" : {
                      "type" : "integer",
                      "x-oldKey" : "interior.studym2"
                    },
                    "exists" : {
                      "type" : "boolean",
                      "x-oldKey" : "interior.studyProperty"
                    }
                  }
                },
                "workSpace" : {
                  "type" : "object",
                  "properties" : {
                    "surface" : {
                      "type" : "integer",
                      "description" : "Work space area (m2)",
                      "x-oldKey" : "interior.workSpacem2"
                    },
                    "exists" : {
                      "type" : "boolean",
                      "x-oldKey" : "interior.workSpaceProperty"
                    }
                  }
                }
              }
            }
          }
        },
        "toilet" : {
          "type" : "object",
          "required" : [ "count" ],
          "properties" : {
            "count" : {
              "type" : "integer",
              "x-oldKey" : "interior.toiletsNumber"
            },
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "x-oldKey" : "RFU"
                  }
                }
              }
            }
          }
        },
        "wellnessEquipment" : {
          "type" : "object",
          "properties" : {
            "hasFitnessRoom" : {
              "type" : "boolean",
              "x-comment" : "RFU"
            },
            "hasHammam" : {
              "type" : "boolean",
              "x-comment" : "RFU"
            },
            "hasJacuzzi" : {
              "type" : "boolean",
              "x-oldKey" : "interior.jacuzzi"
            },
            "hasSauna" : {
              "type" : "boolean",
              "x-oldKey" : "interior.sauna"
            },
            "hasSwimmingPool" : {
              "type" : "boolean",
              "x-oldKey" : "land.swimmingPool"
            },
            "hasTennisCourt" : {
              "type" : "boolean",
              "x-oldKey" : "RFU",
              "x-needsReview" : "key name"
            }
          }
        }
      }
    },
    "OauthTokenRequest" : {
      "properties" : {
        "grant_type" : {
          "type" : "string",
          "example" : "password"
        },
        "client_id" : {
          "type" : "string",
          "example" : "iw_front"
        },
        "client_secret" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string",
          "example" : "myUserName"
        },
        "password" : {
          "type" : "string",
          "example" : "myPassword"
        },
        "scope" : {
          "type" : "string",
          "example" : "openid"
        }
      }
    },
    "OauthTokenResponse" : {
      "type" : "object",
      "properties" : {
        "access_token" : {
          "type" : "string",
          "example" : "3bdc2277-35e4-473e-8b42-06df19edf032"
        },
        "token_type" : {
          "type" : "string",
          "example" : "bearer"
        },
        "refresh_token" : {
          "type" : "string",
          "example" : "d67d6e7b-b91b-44d7-906b-6d3a1a052cc9"
        },
        "expires_in" : {
          "type" : "integer",
          "example" : 7199
        },
        "scope" : {
          "type" : "string",
          "example" : "openid"
        },
        "id_token" : {
          "type" : "string",
          "description" : "Token to provide to api to authenticate subsequent calls",
          "example" : "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyNjk4MTA5IiwiYXVkIjoiaXdfZnJvbnQiLCJmaXJzdE5hbWUiOiJ0ZXN0IiwibGFzdE5hbWUiOiJ0ZXN0IiwibWFpbCI6ImVtbWFudWVsLmxlcm95QGF4YS5iZSIsImlzcyI6Iml3ZWJfZGIiLCJleHAiOjE1MTY3Mzk3MDMsImlhdCI6MTUxNjcyNTMwMywidXNlcklkIjoiMjY5ODEwOSJ9.RiYg9t148XFfpvDKARFlgDiw0pBQ4LRy4Fz1iGoUNdp5MaGqGayB7NKhN7KIlIsN_tj1xS6Yf5AkOiOIQ60T8T7gTiyc1orPV2U6jILCMYFEvOSOzxPEQCxHJm3f70CxKquvjFQAxysZn5W_MhTIrcIYCr9isPaMylIcVMioTqeg2VMwEmNo0pNzfp9PKRTpS3ub5zCbYMw_nDbc6_anoYjmpJKx8js11-nvA66rW--jxl8Cvb1ORRl9K678s-rsfqPf8Gl2NoQ8OTRn2HZGPIPJ4JxVXcs-Enzt9ittjvoOjbOVArVv9y-oQM7ATm-vD_SWoBmhzPHL-VevF0yngA"
        }
      }
    },
    "Publication" : {
      "type" : "object",
      "properties" : {
        "creationDate" : {
          "type" : "string",
          "description" : "This is a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. ex: 2014-01-27T00:40:57.165",
          "x-oldKey" : "pubDate"
        },
        "expirationDate" : {
          "type" : "string",
          "description" : "This is a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. ex: 2014-01-27T00:40:57.165",
          "x-oldKey" : "expiryDate"
        },
        "lastModificationDate" : {
          "type" : "string",
          "description" : "This is a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. ex: 2014-01-27T00:40:57.165"
        },
        "customerId" : {
          "description" : "This is the customer id to which the classified is associated",
          "type" : "integer",
          "x-oldKey" : "publisherId"
        },
        "visualisationOption" : {
          "$ref" : "#/x-enums/VisualisationOptions"
        }
      }
    },
    "CustomerResponses" : {
      "NOT_FOUND" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "CUSTOMER_NOT_FOUND",
                "description" : "CUSTOMER_NOT_FOUND"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the error",
                "example" : "No customer could be found"
              }
            }
          }
        }
      },
      "NO_CLASSIFIED_FOUND" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "NO_CLASSIFIED_FOUND",
                "description" : "NO_CLASSIFIED_FOUND"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the error",
                "example" : "No classified could be found for a customer"
              }
            }
          }
        }
      },
      "UNAUTHORIZED" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "INVALID_OAUTH2_TOKEN",
                "description" : "Type of the error. Ex: INVALID_OAUTH2_TOKEN"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the error",
                "example" : "Incorrect Oauth2 token"
              }
            }
          }
        }
      }
    },
    "Customers" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/Customer"
      }
    },
    "SavedSearchBody" : {
      "type" : "object",
      "properties" : {
        "transactionTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/TransactionTypes"
          }
        },
        "propertyTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/PropertyTypes"
          }
        },
        "propertySubtypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/PropertySubtypes"
          }
        },
        "postalCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "countries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/Countries"
          }
        },
        "minRoomCount" : {
          "type" : "integer"
        },
        "maxRoomCount" : {
          "type" : "integer"
        },
        "minSurface" : {
          "type" : "integer"
        },
        "maxSurface" : {
          "type" : "integer"
        },
        "priceType" : {
          "required" : true,
          "$ref" : "#/x-enums/PriceTypes"
        },
        "minParkingPlaces" : {
          "type" : "integer"
        },
        "maxParkingPlaces" : {
          "type" : "integer"
        },
        "hasAReceptionDesk" : {
          "type" : "boolean"
        },
        "hasTerraceOrGarden" : {
          "type" : "boolean"
        },
        "buildingConditions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/BuildingConditions"
          }
        },
        "hasDisabledAccess" : {
          "type" : "boolean"
        },
        "hasLift" : {
          "type" : "boolean"
        },
        "isAPublicSale" : {
          "type" : "boolean"
        },
        "isANewlyPublishedClassified" : {
          "type" : "boolean"
        },
        "isALifeAnnuitySale" : {
          "type" : "boolean"
        },
        "isFurnished" : {
          "type" : "boolean"
        },
        "isAHolidayRental" : {
          "type" : "boolean"
        },
        "isAnInvestmentProperty" : {
          "type" : "boolean"
        },
        "minLandSurface" : {
          "type" : "integer"
        },
        "maxLandSurface" : {
          "type" : "integer"
        },
        "minPriceOfBusiness" : {
          "type" : "number"
        },
        "maxPriceOfBusiness" : {
          "type" : "number"
        },
        "isAWorkSpaceProperty" : {
          "type" : "boolean"
        },
        "minAvailableSurface" : {
          "type" : "integer"
        },
        "maxAvailableSurface" : {
          "type" : "integer"
        },
        "minShowroomSurface" : {
          "type" : "integer"
        },
        "maxShowroomSurface" : {
          "type" : "integer"
        },
        "minKitchenSurface" : {
          "type" : "integer"
        },
        "maxKitchenSurface" : {
          "type" : "integer"
        },
        "minFacadeCount" : {
          "type" : "integer"
        },
        "maxFacadeCount" : {
          "type" : "integer"
        },
        "minAccessDoorCount" : {
          "type" : "integer"
        },
        "maxAccessDoorCount" : {
          "type" : "integer"
        },
        "minLoadingBayCount" : {
          "type" : "integer"
        },
        "maxLoadingBayCount" : {
          "type" : "integer"
        },
        "maxDaysSinceLastModification" : {
          "type" : "integer"
        }
      }
    },
    "SavedSearches" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/SavedSearch"
      }
    },
    "SearchClassifiedResponseV2" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/SearchedClassified-V2"
      }
    },
    "SearchClassifiedResponseV2.1" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/SearchedClassified-V2.1"
      }
    },
    "SearchClassifiedResponse-User-V2" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/SearchedClassified-User-V2"
      }
    },
    "SearchClassifiedResponse-User-V2.1" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/SearchedClassified-User-V2.1"
      }
    },
    "SearchResponseFlagsAndStatistics" : {
      "type" : "object",
      "properties" : {
        "flags" : {
          "type" : "object",
          "properties" : {
            "isAPublicSale" : {
              "type" : "boolean",
              "x-oldKey" : "results[].flags.publicSale"
            },
            "isNewlyPublishedClassified" : {
              "type" : "boolean",
              "x-oldKey" : "results[].flags.new"
            },
            "isPropertyWithNewPrice" : {
              "type" : "boolean",
              "x-oldKey" : "results[].flags.newPrice"
            },
            "isNewlyBuilt" : {
              "type" : "boolean",
              "x-oldKey" : "results[].flags.newProject"
            },
            "isANotarySale" : {
              "type" : "boolean",
              "x-oldKey" : "results[].flags.notaries"
            },
            "isALifeAnnuitySale" : {
              "type" : "boolean",
              "x-oldKey" : "results[].flags.annuity"
            }
          }
        }
      }
    },
    "SearchResponseMedia" : {
      "type" : "object",
      "properties" : {
        "pictures" : {
          "type" : "object",
          "properties" : {
            "baseUrl" : {
              "type" : "string"
            },
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "lastModificationDate" : {
                    "type" : "string",
                    "description" : "This is a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. ex: 2014-01-27T00:40:57.165",
                    "x-oldKey" : "picturesResized[].lastModificationDate"
                  },
                  "orientation" : {
                    "$ref" : "#/x-enums/PictureOrientations"
                  },
                  "relativeUrl" : {
                    "type" : "object",
                    "properties" : {
                      "large" : {
                        "type" : "string",
                        "format" : "uri",
                        "x-oldKey" : "picturesResized[].pictureFormatLarge"
                      },
                      "medium" : {
                        "type" : "string",
                        "format" : "uri",
                        "x-oldKey" : "picturesResized[].pictureFormatMedium"
                      },
                      "small" : {
                        "type" : "string",
                        "format" : "uri",
                        "x-oldKey" : "picturesResized[].pictureFormatSmall"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "SearchResponseProperty" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "x-oldKey" : "results[].info.mainType"
        },
        "subtype" : {
          "$ref" : "#/x-enums/PropertySubtypes"
        },
        "bedroom" : {
          "type" : "object",
          "properties" : {
            "count" : {
              "type" : "integer"
            }
          }
        },
        "livingDescription" : {
          "type" : "object",
          "properties" : {
            "netHabitableSurface" : {
              "type" : "integer",
              "x-oldKey" : "m2"
            },
            "roomCount" : {
              "type" : "integer",
              "x-oldKey" : "results[].rooms"
            }
          }
        },
        "location" : {
          "type" : "object",
          "properties" : {
            "address" : {
              "type" : "object",
              "x-oldKey" : "info.postalAddr",
              "properties" : {
                "country" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.country"
                },
                "region" : {
                  "type" : "string"
                },
                "regionCode" : {
                  "$ref" : "#/x-enums/Regions"
                },
                "province" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.province"
                },
                "district" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.district"
                },
                "locality" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.locality"
                },
                "postalCode" : {
                  "type" : "string",
                  "x-oldKey" : "info.locationgeographical.postalAddr.postalcode"
                },
                "street" : {
                  "type" : "string",
                  "x-oldKey" : "info.locationg.postalAddr.street"
                },
                "number" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.number"
                },
                "box" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.box"
                },
                "propertyName" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.buildingName"
                },
                "floor" : {
                  "type" : "integer",
                  "x-oldKey" : "info.location.floorOfProperty"
                }
              }
            },
            "geoPoint" : {
              "type" : "object",
              "properties" : {
                "latitude" : {
                  "type" : "number",
                  "x-oldKey" : "info.location.geoPoint.latitude"
                },
                "longitude" : {
                  "type" : "number",
                  "x-oldKey" : "info.location.geoPoint.longitude"
                },
                "approximated" : {
                  "type" : "boolean",
                  "description" : "Yes if the point was approximated using other sources of data (i.e. the center of the commune)",
                  "x-oldKey" : "info.location.aproximated"
                }
              }
            }
          }
        },
        "title" : {
          "type" : "string"
        },
        "alternativeTitles" : {
          "type" : "object",
          "properties" : {
            "en" : {
              "type" : "string"
            },
            "fr" : {
              "type" : "string"
            },
            "nl" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "SearchResponseProperty-V2.1" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "x-oldKey" : "results[].info.mainType"
        },
        "subtype" : {
          "$ref" : "#/x-enums/PropertySubtypes"
        },
        "bedroom" : {
          "type" : "object",
          "properties" : {
            "count" : {
              "type" : "integer"
            }
          }
        },
        "energy" : {
          "type" : "object",
          "properties" : {
            "performance" : {
              "$ref" : "#/x-enums/EnergyPerformances"
            }
          }
        },
        "livingDescription" : {
          "type" : "object",
          "properties" : {
            "netHabitableSurface" : {
              "type" : "integer",
              "x-oldKey" : "m2"
            },
            "roomCount" : {
              "type" : "integer",
              "x-oldKey" : "results[].rooms"
            }
          }
        },
        "location" : {
          "type" : "object",
          "properties" : {
            "address" : {
              "type" : "object",
              "x-oldKey" : "info.postalAddr",
              "properties" : {
                "country" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.country"
                },
                "region" : {
                  "type" : "string"
                },
                "regionCode" : {
                  "$ref" : "#/x-enums/Regions"
                },
                "province" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.province"
                },
                "district" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.district"
                },
                "locality" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.locality"
                },
                "postalCode" : {
                  "type" : "string",
                  "x-oldKey" : "info.locationgeographical.postalAddr.postalcode"
                },
                "street" : {
                  "type" : "string",
                  "x-oldKey" : "info.locationg.postalAddr.street"
                },
                "number" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.number"
                },
                "box" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.box"
                },
                "propertyName" : {
                  "type" : "string",
                  "x-oldKey" : "info.location.postalAddr.buildingName"
                },
                "floor" : {
                  "type" : "integer",
                  "x-oldKey" : "info.location.floorOfProperty"
                }
              }
            },
            "geoPoint" : {
              "type" : "object",
              "properties" : {
                "latitude" : {
                  "type" : "number",
                  "x-oldKey" : "info.location.geoPoint.latitude"
                },
                "longitude" : {
                  "type" : "number",
                  "x-oldKey" : "info.location.geoPoint.longitude"
                },
                "approximated" : {
                  "type" : "boolean",
                  "description" : "Yes if the point was approximated using other sources of data (i.e. the center of the commune)",
                  "x-oldKey" : "info.location.aproximated"
                }
              }
            }
          }
        },
        "title" : {
          "type" : "string",
          "alternativeTitles" : {
            "type" : "object",
            "properties" : {
              "en" : {
                "type" : "string"
              },
              "fr" : {
                "type" : "string"
              },
              "nl" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "SearchResponsePublication" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "integer",
          "x-oldKey" : "results[].publisherId"
        },
        "visualisationOption" : {
          "$ref" : "#/x-enums/VisualisationOptions"
        }
      }
    },
    "SearchResponseTransaction" : {
      "type" : "object",
      "properties" : {
        "certificates" : {
          "type" : "object",
          "properties" : {
            "epc" : {
              "type" : "object",
              "properties" : {
                "logoUrl" : {
                  "type" : "string",
                  "format" : "uri",
                  "x-oldKey" : "results[].energy.EPCScore",
                  "x-comment" : "produce url"
                },
                "score" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "type" : {
          "$ref" : "#/x-enums/TransactionTypes"
        },
        "rental" : {
          "type" : "object",
          "properties" : {
            "monthlyRentalPrice" : {
              "type" : "number",
              "x-oldKey" : "results[].info.price.monthlyRentalPrice"
            },
            "monthlyRentalCosts" : {
              "type" : "number",
              "x-oldKey" : "results[].info.price.monthlyCharges"
            },
            "nonResidential" : {
              "type" : "object",
              "properties" : {
                "yearlyRentalPrice" : {
                  "type" : "number",
                  "x-oldKey" : "results[].info.price.yearlyRentalPrice"
                },
                "yearlyRentalPricePerSqm" : {
                  "type" : "number",
                  "x-oldKey" : "results[].info.price.yearlyRentalPricePerSqm"
                }
              }
            }
          }
        },
        "sale" : {
          "type" : "object",
          "properties" : {
            "price" : {
              "type" : "number",
              "x-oldKey" : "results[].info.price.salePrice"
            },
            "pricePerSqm" : {
              "type" : "number"
            },
            "oldPrice" : {
              "type" : "number"
            },
            "vatAndOrRegistrationFeeTypes" : {
              "$ref" : "#/x-enums/VatAndOrRegistrationFeeTypes"
            },
            "lifeAnnuity" : {
              "type" : "object",
              "properties" : {
                "lumpSum" : {
                  "type" : "number",
                  "description" : "The initial payment at the start of the contract.",
                  "x-oldKey" : "lifeAnnuity.lumpSum"
                },
                "monthlyAmount" : {
                  "type" : "number",
                  "description" : "The monthly payment paid to the annuitant.",
                  "x-oldKey" : "lifeAnnuity.monthlyPayment"
                }
              }
            },
            "publicSale" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "$ref" : "#/x-enums/PublicSaleStatuses"
                },
                "pendingOverbidAmount" : {
                  "type" : "number",
                  "description" : "The minimum starting bid over the reserve price. Could only be used when the public sale is at the 'OVERBID' stage.",
                  "x-oldKey" : "auction.minimumOverbid"
                }
              }
            }
          }
        }
      }
    },
    "SearchResponseTransactionV2.1" : {
      "type" : "object",
      "properties" : {
        "certificates" : {
          "type" : "object",
          "properties" : {
            "epc" : {
              "type" : "object",
              "properties" : {
                "logoUrl" : {
                  "type" : "string",
                  "format" : "uri",
                  "x-oldKey" : "results[].energy.EPCScore",
                  "x-comment" : "produce url"
                },
                "score" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "type" : {
          "$ref" : "#/x-enums/TransactionTypes"
        },
        "rental" : {
          "type" : "object",
          "properties" : {
            "monthlyRentalPrice" : {
              "type" : "number",
              "x-oldKey" : "results[].info.price.monthlyRentalPrice"
            },
            "monthlyRentalCosts" : {
              "type" : "number",
              "x-oldKey" : "results[].info.price.monthlyCharges"
            },
            "nonResidential" : {
              "type" : "object",
              "properties" : {
                "yearlyRentalPrice" : {
                  "type" : "number",
                  "x-oldKey" : "results[].info.price.yearlyRentalPrice"
                },
                "yearlyRentalPricePerSqm" : {
                  "type" : "number",
                  "x-oldKey" : "results[].info.price.yearlyRentalPricePerSqm"
                }
              }
            }
          }
        },
        "sale" : {
          "type" : "object",
          "properties" : {
            "price" : {
              "type" : "number",
              "x-oldKey" : "results[].info.price.salePrice"
            },
            "pricePerSqm" : {
              "type" : "number"
            },
            "oldPrice" : {
              "type" : "number"
            },
            "vatAndOrRegistrationFeeTypes" : {
              "$ref" : "#/x-enums/VatAndOrRegistrationFeeTypes"
            },
            "lifeAnnuity" : {
              "type" : "object",
              "properties" : {
                "lumpSum" : {
                  "type" : "number",
                  "description" : "The initial payment at the start of the contract.",
                  "x-oldKey" : "lifeAnnuity.lumpSum"
                },
                "monthlyAmount" : {
                  "type" : "number",
                  "description" : "The monthly payment paid to the annuitant.",
                  "x-oldKey" : "lifeAnnuity.monthlyPayment"
                }
              }
            },
            "publicSale" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "$ref" : "#/x-enums/PublicSaleStatuses"
                },
                "pendingOverbidAmount" : {
                  "type" : "number",
                  "description" : "The minimum starting bid over the reserve price. Could only be used when the public sale is at the 'OVERBID' stage.",
                  "x-oldKey" : "auction.minimumOverbid"
                }
              }
            }
          }
        },
        "soldOrRented" : {
          "type" : "object",
          "properties" : {
            "isSoldOrRented" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "SearchCustomerResponse" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/Customer"
      }
    },
    "SearchResponseForCustomer" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/SearchedClassified-V2"
      }
    },
    "SearchResponseForCustomerV2.1" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/SearchedClassified-V2.1"
      }
    },
    "Subscriptions" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "example" : "1.0"
        },
        "topics" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "topicCode" : {
                "type" : "string",
                "example" : "communications_immoweb_partners"
              },
              "subtopics" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "topicCode" : {
                      "type" : "string",
                      "example" : "consent_agree_partners_electronic_communications"
                    },
                    "subscribed" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Transaction" : {
      "type" : "object",
      "description" : "A transaction is a commercial or trading operation. It is a real estate transaction when the transaction concerns a real estate property. At Immoweb, a transaction is the way to propose the property to the real-estate market on Immoweb platforms.",
      "properties" : {
        "availabilityPeriodType" : {
          "$ref" : "#/x-enums/AvailabilityPeriodTypes"
        },
        "availabilityDate" : {
          "description" : "This is a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. ex: 2014-01-27T00:40:57.165",
          "type" : "string",
          "format" : "date-time",
          "x-oldKey" : "general.availabilityDate"
        },
        "subtype" : {
          "$ref" : "#/x-enums/TransactionSubtypes"
        },
        "type" : {
          "$ref" : "#/x-enums/TransactionTypes"
        },
        "certificates" : {
          "type" : "object",
          "properties" : {
            "epc" : {
              "type" : "object",
              "properties" : {
                "description" : {
                  "type" : "string",
                  "x-oldKey" : "energy.freeEPCdescription"
                },
                "reportReference" : {
                  "type" : "string",
                  "x-oldKey" : "energy.EPCreferenceNumber"
                },
                "score" : {
                  "type" : "string",
                  "x-oldKey" : "energy.EPCScore"
                },
                "url" : {
                  "type" : "string"
                }
              }
            },
            "carbonEmission" : {
              "type" : "integer",
              "x-oldKey" : "energy.CO2emission"
            },
            "hasElectricalInstallationComplianceCertificate" : {
              "type" : "boolean",
              "x-oldKey" : "energy.inspectionReportOfTheElectricalInstallation"
            },
            "primaryEnergyConsumption" : {
              "type" : "object",
              "properties" : {
                "perSqm" : {
                  "type" : "float",
                  "x-oldKey" : "energy.energyConsumption"
                },
                "yearlyTheoreticalTotal" : {
                  "type" : "float",
                  "x-oldKey" : "energy.yearlyTheoreticalTotalEnergyConsumption"
                }
              }
            }
          }
        },
        "investor" : {
          "type" : "object",
          "properties" : {
            "isInvestmentProperty" : {
              "type" : "boolean",
              "x-oldKey" : "isInvestmentProperty",
              "x-needsReview" : true
            },
            "currentMonthlyRentalIncome" : {
              "type" : "integer",
              "x-oldKey" : "financial.currentMonthRevenue"
            },
            "currentReturnOnInvestment" : {
              "type" : "integer",
              "x-oldKey" : "RFU"
            },
            "expectedMonthlyRentalIncome" : {
              "type" : "integer",
              "x-oldKey" : "RFU"
            },
            "expectedMonthlyRentalIncomeDescription" : {
              "type" : "string",
              "x-oldKey" : "RFU"
            },
            "expectedReturnOnInvestment" : {
              "type" : "integer",
              "x-oldKey" : "RFU"
            },
            "habitableUnitCount" : {
              "type" : "integer",
              "x-oldKey" : "RFU"
            },
            "occupancyRate" : {
              "type" : "integer",
              "x-oldKey" : "financial.percentageRented"
            }
          }
        },
        "rental" : {
          "type" : "object",
          "properties" : {
            "monthlyRentalPrice" : {
              "type" : "number",
              "x-oldKey" : "financial.monthlyRentalPrice"
            },
            "monthlyRentalCosts" : {
              "type" : "number",
              "x-oldKey" : "financial.monthlyCharges"
            },
            "nonResidential" : {
              "type" : "object",
              "properties" : {
                "yearlyRentalPrice" : {
                  "type" : "number",
                  "x-oldKey" : "financial.yearlyRentalPrice"
                },
                "yearlyRentalPricePerSqm" : {
                  "type" : "number",
                  "x-oldKey" : "financial.yearlyRentalPricePerSqm"
                }
              }
            },
            "residential" : {
              "type" : "object",
              "properties" : {
                "areBigPetsAllowed" : {
                  "type" : "boolean",
                  "x-oldKey" : "interior.bigPets",
                  "x-needsReview" : "key name needs to be validated"
                },
                "areSmallPetsAllowed" : {
                  "type" : "boolean",
                  "x-oldKey" : "interior.smallPets",
                  "x-needsReview" : "key name needs to be validated"
                },
                "isFurnished" : {
                  "type" : "boolean",
                  "x-oldKey" : "general.furnished"
                }
              }
            }
          }
        },
        "sale" : {
          "type" : "object",
          "properties" : {
            "price" : {
              "type" : "number",
              "x-oldKey" : "financial.salePrice"
            },
            "pricePerSqm" : {
              "type" : "number",
              "x-oldKey" : "financial.m2Price"
            },
            "cadastralIncome" : {
              "type" : "number",
              "x-oldKey" : "financial.cadastralIncome"
            },
            "hasStartingPrice" : {
              "type" : "boolean",
              "x-oldKey" : "financial.isPriceBased"
            },
            "oldPrice" : {
              "type" : "number",
              "x-oldKey" : "financial.oldPrice"
            },
            "vatAndOrRegistrationFeeTypes" : {
              "$ref" : "#/x-enums/VatAndOrRegistrationFeeTypes"
            },
            "lifeAnnuity" : {
              "type" : "object",
              "properties" : {
                "estimatedPropertyValue" : {
                  "type" : "number",
                  "description" : "The estimated value of an estate.",
                  "x-oldKey" : "lifeAnnuity.estateValue"
                },
                "lumpSum" : {
                  "type" : "number",
                  "description" : "The initial payment at the start of the contract.",
                  "x-oldKey" : "lifeAnnuity.lumpSum"
                },
                "monthlyAmount" : {
                  "type" : "number",
                  "description" : "The monthly payment paid to the annuitant.",
                  "x-oldKey" : "lifeAnnuity.monthlyPayment"
                },
                "isIndexed" : {
                  "type" : "boolean",
                  "description" : "True if the monthly payment will follow the consumer price index.",
                  "x-oldKey" : "lifeAnnuity.indexed"
                },
                "isJointAndSurvivorContract" : {
                  "type" : "boolean",
                  "description" : "True if the life annuity contract is a joint-and-survivor annuity contract.",
                  "x-oldKey" : "lifeAnnuity.jointAndSurvivor"
                },
                "isBareOwnership" : {
                  "type" : "boolean",
                  "description" : "The type of life annuity. true if BARE_OWNERSHIP",
                  "x-oldKey" : "lifeAnnuity.type"
                },
                "contractMaximumDurationDescription" : {
                  "type" : "string",
                  "description" : "Tree text indicating the maximum duration after which the estate will change ownership.",
                  "x-oldKey" : "lifeAnnuity.maximumDuration"
                },
                "annuitants" : {
                  "type" : "object",
                  "properties" : {
                    "count" : {
                      "type" : "integer",
                      "x-oldKey" : "lifeAnnuity.numberOfAnnuitants",
                      "description" : "The number of annuitants who benefit from a join-and-survivor contract."
                    },
                    "ages" : {
                      "type" : "array",
                      "items" : {
                        "type" : "integer",
                        "x-oldKey" : "lifeAnnuity.ageOfAnnuitant1,lifeAnnuity.ageOfAnnuitant2"
                      }
                    }
                  }
                }
              }
            },
            "publicSale" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "$ref" : "#/x-enums/PublicSaleStatuses"
                },
                "hasUniqueSession" : {
                  "type" : "boolean",
                  "x-oldKey" : "auction.hasUniqueSession"
                },
                "firstSessionStartingPrice" : {
                  "type" : "number",
                  "description" : "The reserve price at the next public sale session.",
                  "x-oldKey" : "auction.reservePrice"
                },
                "hasHigherBidRight" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "isForcedSale" : {
                  "type" : "boolean",
                  "x-oldKey" : "RFU"
                },
                "lastSessionReachedPrice" : {
                  "type" : "number",
                  "x-oldKey" : "RFU"
                },
                "overbidSessionStartingPrice" : {
                  "type" : "number",
                  "x-oldKey" : "RFU"
                },
                "pendingOverbidAmount" : {
                  "type" : "number",
                  "description" : "The minimum starting bid over the reserve price. Could only be used when the public sale is at the 'OVERBID' stage.",
                  "x-oldKey" : "auction.minimumOverbid"
                },
                "pendingOverbidDeadline" : {
                  "type" : "string",
                  "x-oldKey" : "RFU"
                },
                "firstSessionDeadline" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "The date and time of the next public sale session.",
                  "x-oldKey" : "auction.deadline"
                },
                "viewingArrangements" : {
                  "type" : "string",
                  "description" : "Describes how potential buyers can visit the property.",
                  "x-oldKey" : "auction.viewingArrangements"
                },
                "venue" : {
                  "type" : "string",
                  "description" : "Describes where the next public sale session will happen.",
                  "x-oldKey" : "auction.saleVenue"
                }
              }
            },
            "toBuild" : {
              "description" : "Description of toBuild section, exclusively for CMI",
              "type" : "object",
              "properties" : {
                "architecturalStyle" : {
                  "$ref" : "#/x-enums/ArchitecturalStyles"
                },
                "constructionDelayInMonths" : {
                  "type" : "integer",
                  "x-oldKey" : "toBuild.constructionDelayInMonths"
                },
                "constructionStartingPrice" : {
                  "description" : "Field dedicated for R3 model, ignore",
                  "type" : "number",
                  "x-oldKey" : "financial.constructionStartingPrice"
                },
                "constructionSystem" : {
                  "$ref" : "#/x-enums/ConstructionSystems"
                },
                "energyPerformance" : {
                  "$ref" : "#/x-enums/EnergyPerformances"
                },
                "maximumConstructionPrice" : {
                  "description" : "Field dedicated for R3 model, ignore",
                  "type" : "number",
                  "x-oldKey" : "financial.maximumConstructionPrice"
                },
                "isArchitectIncludedInSalePrice" : {
                  "type" : "boolean",
                  "x-oldKey" : "toBuild.isArchitectIncludedInSalePrice"
                },
                "isBlowerDoorTestIncluded" : {
                  "type" : "boolean",
                  "x-oldKey" : "toBuild.isBlowerDoorTestIncluded"
                },
                "isKitchenIncluded" : {
                  "type" : "boolean",
                  "x-oldKey" : "toBuild.isKitchenIncluded"
                },
                "isOutskirtsArrangementsIncluded" : {
                  "type" : "boolean",
                  "x-oldKey" : "toBuild.isOutskirtsArrangementsIncluded"
                },
                "isSafetyCoordinatorIncludedInSalePrice" : {
                  "type" : "boolean",
                  "x-oldKey" : "toBuild.isSafetyCoordinatorIncludedInSalePrice"
                },
                "isSoilInvestigationIncludedInSalePrice" : {
                  "type" : "boolean",
                  "x-oldKey" : "toBuild.isSoilInvestigationIncludedInSalePrice"
                },
                "isStabilityEngineerIncludedInSalePrice" : {
                  "type" : "boolean",
                  "x-oldKey" : "toBuild.isStabilityEngineerIncludedInSalePrice"
                },
                "structuralWorkPrice" : {
                  "type" : "number",
                  "x-oldKey" : "toBuild.structuralWorkPrice"
                }
              }
            }
          }
        },
        "soldOrRented" : {
          "type" : "object",
          "properties" : {
            "date" : {
              "type" : "string",
              "x-oldKey" : "soldInfo.soldDate,rentedInfo.rentedDate",
              "x-needsReview" : "check rental part"
            },
            "isSoldOrRented" : {
              "type" : "boolean",
              "x-oldKey" : "soldInfo.sold,rentedInfo.rented",
              "x-needsReview" : "check key"
            },
            "isStatusDisplayed" : {
              "type" : "boolean",
              "x-oldKey" : "RFU",
              "x-needsReview" : "check key"
            },
            "label" : {
              "type" : "string",
              "x-oldKey" : "soldInfo.soldLabel,rentedInfo.rentedLabel",
              "x-needsReview" : "check rental part"
            },
            "price" : {
              "type" : "number",
              "x-oldKey" : "soldInfo.soldPrice,rentedInfo.rentedPrice",
              "x-needsReview" : "check rental part"
            }
          }
        }
      }
    },
    "UIJson" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "example" : "1.7"
        },
        "property_page" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "section" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "titleKey" : {
                      "type" : "string",
                      "description" : "name of the section to display"
                    },
                    "rows" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "labelKey" : {
                            "type" : "string",
                            "example" : "available"
                          },
                          "valueKeypath" : {
                            "type" : "string",
                            "example" : "property.transaction.availabilityPeriodType",
                            "displayFormat" : {
                              "type" : "string",
                              "enum" : [ "enum", "string", "integer", "number", "boolean" ]
                            },
                            "localise" : {
                              "type" : "string",
                              "example" : "true",
                              "description" : "if present and \"true\", key needs to be looked up in Localise"
                            },
                            "displayUnit" : {
                              "type" : "string",
                              "example" : "m¬≤",
                              "description" : "unit to add to the display of the value contained at the json path"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "User-no-id" : {
      "description" : "Information regarding a user",
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "object",
          "properties" : {
            "acceptsHtmlEmails" : {
              "type" : "boolean"
            },
            "lastConnection" : {
              "type" : "string",
              "example" : "2018-01-23T08:51:52.753+01:00"
            },
            "lastLogin" : {
              "type" : "string",
              "example" : "2018-01-19T14:41:06.107+01:00"
            },
            "connectionOrigin" : {
              "type" : "string"
            }
          }
        },
        "personal" : {
          "type" : "object",
          "properties" : {
            "gender" : {
              "$ref" : "#/x-enums/Gender"
            },
            "lastName" : {
              "type" : "string"
            },
            "firstName" : {
              "type" : "string"
            },
            "language" : {
              "type" : "string",
              "example" : "en"
            }
          }
        },
        "address" : {
          "type" : "object",
          "properties" : {
            "country" : {
              "type" : "string"
            },
            "locality" : {
              "type" : "string",
              "example" : "Brussels City"
            },
            "postalcode" : {
              "type" : "string"
            }
          }
        },
        "contact" : {
          "properties" : {
            "email" : {
              "type" : "string",
              "example" : "name.lastname@immoweb.be"
            },
            "phoneCallingTime" : {
              "type" : "string"
            },
            "mobileCallingTime" : {
              "type" : "string"
            }
          }
        },
        "business" : {
          "type" : "object"
        },
        "newslettersPreferences" : {
          "type" : "object",
          "properties" : {
            "acceptTermsAndConditions" : {
              "type" : "boolean"
            },
            "acknowledgeInternalPrivacy" : {
              "type" : "boolean"
            },
            "acknowledgeExternalPrivacy" : {
              "type" : "boolean"
            },
            "savedEstatesNotifications" : {
              "type" : "boolean"
            },
            "savedSearchesNotifications" : {
              "type" : "boolean"
            }
          }
        },
        "userInterests" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "domainCode" : {
                "$ref" : "#/x-enums/DomainCodes"
              },
              "topicCode" : {
                "$ref" : "#/x-enums/TopicCodes"
              },
              "selected" : {
                "type" : "boolean"
              },
              "label" : {
                "type" : "string",
                "example" : "Bathroom"
              }
            }
          }
        }
      }
    },
    "UserFeedback" : {
      "type" : "object"
    }
  },
  "x-maskedModels-ppp" : {
    "base64EncodeHTML" : {
      "type" : "string"
    },
    "singleLanguageContent" : {
      "type" : "array",
      "description" : " Array of column/blocks",
      "items" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/x-maskedModels-ppp/base64EncodeHTML"
        }
      }
    },
    "multiLanguageTabContent" : {
      "type" : "object",
      "description" : "List of languages blocks",
      "properties" : {
        "fr" : {
          "$ref" : "#/x-maskedModels-ppp/singleLanguageContent"
        },
        "en" : {
          "$ref" : "#/x-maskedModels-ppp/singleLanguageContent"
        },
        "nl" : {
          "$ref" : "#/x-maskedModels-ppp/singleLanguageContent"
        }
      }
    },
    "multiLanguageText" : {
      "type" : "object",
      "properties" : {
        "fr" : {
          "type" : "string"
        },
        "en" : {
          "type" : "string"
        },
        "nl" : {
          "type" : "string"
        }
      }
    },
    "monoLanguageTabContent" : {
      "type" : "array",
      "description" : " Array of rows",
      "items" : {
        "type" : "array",
        "description" : " Array of column/blocks",
        "items" : {
          "type" : "string",
          "format" : "base64 encoded html code"
        }
      }
    },
    "PPPInfo-FrontEnd" : {
      "type" : "object",
      "properties" : {
        "colors" : {
          "type" : "object",
          "properties" : {
            "main" : {
              "type" : "string",
              "description" : "hex value of the page main color. Eg: #01172E",
              "example" : "#01172E"
            },
            "secondary" : {
              "type" : "string",
              "description" : "hex value of the page secondary color. Eg: #01172E",
              "example" : "#01172E"
            }
          }
        },
        "projectConstructor" : {
          "type" : "object",
          "properties" : {
            "logoUrl" : {
              "type" : "string",
              "format" : "Uri",
              "example" : "https://mySite.com/path_to_my_logo"
            },
            "name" : {
              "type" : "string",
              "example" : "Constructor Name"
            }
          }
        },
        "media" : {
          "type" : "object",
          "properties" : {
            "mainImage" : {
              "type" : "object",
              "properties" : {
                "url" : {
                  "type" : "string",
                  "example" : "https://mySite.com/path_to_my_mainImage"
                }
              }
            },
            "mainVideo" : {
              "type" : "object",
              "properties" : {
                "url" : {
                  "type" : "string",
                  "format" : "Uri"
                }
              }
            },
            "images" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "logoUrl" : {
              "type" : "string",
              "format" : "Uri"
            }
          }
        },
        "tabs" : {
          "type" : "object",
          "properties" : {
            "custom" : {
              "type" : "object",
              "properties" : {
                "content" : {
                  "$ref" : "#/x-maskedModels-ppp/monoLanguageTabContent"
                },
                "title" : {
                  "type" : "string"
                },
                "isVisible" : {
                  "type" : "boolean"
                }
              }
            },
            "situation" : {
              "type" : "object",
              "properties" : {
                "text" : {
                  "type" : "string"
                }
              }
            },
            "units" : {
              "type" : "object",
              "properties" : {
                "mainImage" : {
                  "type" : "object",
                  "properties" : {
                    "url" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "invest" : {
              "type" : "object",
              "properties" : {
                "isVisible" : {
                  "type" : "boolean"
                },
                "content" : {
                  "$ref" : "#/x-maskedModels-ppp/monoLanguageTabContent"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths" : {
    "/advertisements" : {
      "get" : {
        "tags" : [ "Advertisements" ],
        "description" : "Retrieve advertisements to display alongside classifieds",
        "security" : [ {
          "apikey_advertisements" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.advertisements.v1.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "postalCodes",
          "in" : "query",
          "description" : "PostalCodes of the place of interest as csv",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "segment",
          "in" : "query",
          "description" : "Segment of interest",
          "required" : true,
          "schema" : {
            "$ref" : "#/x-enums/Segments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.advertisements.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Advertisements"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/advertisements/homepage" : {
      "get" : {
        "tags" : [ "Advertisements" ],
        "description" : "Retrieve advertisements to display on the homepage",
        "security" : [ {
          "apikey_advertisements" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.advertisements.homepage.v1.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "postalCodes",
          "in" : "query",
          "description" : "PostalCodes of the place of interest as csv",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.advertisements.homepage.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Advertisements-Homepage"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/advertisements/campaigns/{campaignId}/content" : {
      "get" : {
        "tags" : [ "AdvertisementsV2" ],
        "summary" : "Find an advertising campaign content by ID",
        "description" : "Returns a single campaign content",
        "security" : [ {
          "apikey_advertisements" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.advertisement.v2.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "optional header to pass user authentication token",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "campaignId",
          "in" : "path",
          "description" : "ID of campaign to post to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.advertisement.v2.0+json" : {
                "schema" : {
                  "type" : "object",
                  "oneOf" : [ {
                    "$ref" : "#/x-maskedModels/AdvertisementAdimContent"
                  }, {
                    "$ref" : "#/x-maskedModels/AdvertisementAdimXLContent"
                  }, {
                    "$ref" : "#/x-maskedModels/AdvertisementAdimHomepageContent"
                  }, {
                    "$ref" : "#/x-maskedModels/AdvertisementAdFocusHomepageContent"
                  }, {
                    "$ref" : "#/x-maskedModels/AdvertisementAdFocusResultListContent"
                  } ],
                  "discriminator" : {
                    "propertyName" : "campaign.type"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "404" : {
            "description" : "Classified not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/NOT_FOUND"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AdvertisementsV2" ],
        "description" : "Allows user to post content for an advertising campaign",
        "security" : [ {
          "apikey_advertisements" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.advertisement.v2.0+json" ]
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "description" : "OAUTH2 Header: 'Bearer: access_token'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "campaignId",
          "in" : "path",
          "description" : "ID of campaign to post to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.advertisement.v2.0+json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/x-maskedModels/AdvertisementAdimContent"
                }, {
                  "$ref" : "#/x-maskedModels/AdvertisementAdimXLContent"
                }, {
                  "$ref" : "#/x-maskedModels/AdvertisementAdimHomepageContent"
                }, {
                  "$ref" : "#/x-maskedModels/AdvertisementAdFocusHomepageContent"
                }, {
                  "$ref" : "#/x-maskedModels/AdvertisementAdFocusResultListContent"
                } ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/CREATED"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/BADREQUEST"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/FORBIDDEN"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AdvertisementsV2" ],
        "description" : "Allows user to post content for an advertising campaign",
        "security" : [ {
          "apikey_advertisements" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.advertisement.v2.0+json" ]
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "description" : "OAUTH2 Header: 'Bearer: access_token'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "campaignId",
          "in" : "path",
          "description" : "ID of campaign to post to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.advertisement.v2.0+json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/x-maskedModels/AdvertisementAdimContent"
                }, {
                  "$ref" : "#/x-maskedModels/AdvertisementAdimXLContent"
                }, {
                  "$ref" : "#/x-maskedModels/AdvertisementAdimHomepageContent"
                }, {
                  "$ref" : "#/x-maskedModels/AdvertisementAdFocusHomepageContent"
                }, {
                  "$ref" : "#/x-maskedModels/AdvertisementAdFocusResultListContent"
                } ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/CREATED"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/BADREQUEST"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AdvertisementCampaignContentResponses/FORBIDDEN"
                }
              }
            }
          }
        }
      }
    },
    "/autocomplete" : {
      "get" : {
        "tags" : [ "AutoComplete" ],
        "description" : "Autocomplete the input entered by the user",
        "security" : [ {
          "apikey_autocomplete" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.autocomplete.v1+json", "application/vnd.be.immoweb.autocomplete.v1.1+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "Types of data to look for containing the user input",
          "required" : true,
          "schema" : {
            "$ref" : "#/x-maskedModels/AutoCompleteTypesArray"
          }
        }, {
          "name" : "countries",
          "in" : "query",
          "description" : "Country or csv list of countries to filter the suggestion (country ISO-Code)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "input",
          "in" : "query",
          "description" : "Content of the user input wich needs to be submitted to autocomplete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minClassifiedCount",
          "in" : "query",
          "description" : "minimum number of active classifieds when entering a customer or agent name",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.autocomplete.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutoCompleteResponse-V1"
                }
              },
              "application/vnd.be.immoweb.autocomplete.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutoCompleteResponse-V1.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/autocomplete/localities" : {
      "get" : {
        "tags" : [ "AutoComplete" ],
        "description" : "Autocomplete the locality input (name or postalCode) entered by the user",
        "security" : [ {
          "apikey_autocomplete" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.autocomplete.localities.v1+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "countries",
          "in" : "query",
          "description" : "Country or csv list of countries to filter the suggestion (country ISO-Code)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "input",
          "in" : "query",
          "description" : "Content of the user input wich needs to be submitted to autocomplete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.autocomplete.localities.v1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/LocalitiesAutoCompleteResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/contact/email" : {
      "post" : {
        "tags" : [ "Contact" ],
        "summary" : "Send a contact form via email",
        "security" : [ {
          "apikey_contact" : [ ]
        }, {
          "user_password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Beader + jwt",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.contact.email.v1+json", "application/vnd.be.immoweb.user.contact.email.v1+json" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.contact.email.v1+json" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/ContactEmail"
              }
            },
            "application/vnd.be.immoweb.user.contact.email.v1+json" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/UserContactEmail"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/contact/email/validation" : {
      "post" : {
        "tags" : [ "Contact" ],
        "summary" : "Send a confirmation after the email was validated",
        "security" : [ {
          "apikey_contact" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.contact.email.validation.v1+json" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.contact.email.validation.v1+json" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/ContactEmailValidation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/classifieds" : {
      "get" : {
        "tags" : [ "Classifieds" ],
        "summary" : "Search for classifieds",
        "description" : "Returns classified matching the parameters",
        "security" : [ {
          "apikey_classifieds" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.classifieds.v2.0+json", "application/vnd.be.immoweb.classifieds.v2.0+json" ]
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "optional header to pass user authentication token",
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/accept-language"
        }, {
          "$ref" : "#/components/parameters/classified-search-range"
        }, {
          "$ref" : "#/components/parameters/classified-search-sort"
        }, {
          "$ref" : "#/components/parameters/classified-search-desc"
        }, {
          "$ref" : "#/components/parameters/classified-search-buildingConditions"
        }, {
          "$ref" : "#/components/parameters/classified-search-classifiedIds"
        }, {
          "$ref" : "#/components/parameters/classified-search-customerIds"
        }, {
          "$ref" : "#/components/parameters/classified-search-constructionTypes"
        }, {
          "$ref" : "#/components/parameters/classified-search-countries"
        }, {
          "$ref" : "#/components/parameters/classified-search-districts"
        }, {
          "$ref" : "#/components/parameters/classified-search-gardenOrientations"
        }, {
          "$ref" : "#/components/parameters/classified-search-geoPoint"
        }, {
          "$ref" : "#/components/parameters/classified-search-geoPointRadius"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasDisabledAccess"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasFireplace"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasGarden"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasGoodWill"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasKitchenSetup"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasLift"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasAReceptionDesk"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasSwimmingPool"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasTerrace"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasTerraceOrGarden"
        }, {
          "$ref" : "#/components/parameters/classified-search-isAFuturePublicSale"
        }, {
          "$ref" : "#/components/parameters/classified-search-isALifeAnnuitySale"
        }, {
          "$ref" : "#/components/parameters/classified-search-isAPublicSale"
        }, {
          "$ref" : "#/components/parameters/classified-search-isANewlyPublishedClassified"
        }, {
          "$ref" : "#/components/parameters/classified-search-isAnInvestmentProperty"
        }, {
          "$ref" : "#/components/parameters/classified-search-isAWorkSpaceProperty"
        }, {
          "$ref" : "#/components/parameters/classified-search-isConstructionPermitObtained"
        }, {
          "$ref" : "#/components/parameters/classified-search-isFurnished"
        }, {
          "$ref" : "#/components/parameters/classified-search-isNewlyBuilt"
        }, {
          "$ref" : "#/components/parameters/classified-search-isSoldOrRented"
        }, {
          "$ref" : "#/components/parameters/classified-search-minAccessDoorCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxAccessDoorCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minBedroomCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxBedroomCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minAvailableSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxAvailableSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minFacadeCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxFacadeCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxDaysSinceLastModification"
        }, {
          "$ref" : "#/components/parameters/classified-search-minGardenSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxGardenSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minGroundBuildableSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxGroundBuildableSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minKitchenSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxKitchenSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minLandSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxLandSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minLoadingBayCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxLoadingBayCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minParkingPlaces"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxParkingPlaces"
        }, {
          "$ref" : "#/components/parameters/classified-search-minPrice"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxPrice"
        }, {
          "$ref" : "#/components/parameters/classified-search-minPriceOfBusiness"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxPriceOfBusiness"
        }, {
          "$ref" : "#/components/parameters/classified-search-minRoomCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxRoomCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minShowroomSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxShowroomSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minTerraceSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxTerraceSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-modifiedSince"
        }, {
          "$ref" : "#/components/parameters/classified-search-notaryNetworkIds"
        }, {
          "$ref" : "#/components/parameters/classified-search-priceType"
        }, {
          "$ref" : "#/components/parameters/classified-search-propertySubtypes"
        }, {
          "$ref" : "#/components/parameters/classified-search-postalCodes"
        }, {
          "$ref" : "#/components/parameters/classified-search-propertyTypes"
        }, {
          "$ref" : "#/components/parameters/classified-search-provinces"
        }, {
          "$ref" : "#/components/parameters/classified-search-regions"
        }, {
          "$ref" : "#/components/parameters/classified-search-transactionTypes"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Range" : {
                "description" : "Range of the return results for the search http://immoweb.be/classifieds?propertyType=HOUSE&range=20-29.  Example: \"20-29/43\"",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-count-with-geoPoint" : {
                "description" : "Total of available results for the search with available geocoding information.  Example: \"43\"",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/vnd.be.immoweb.classifieds.v2.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2"
                }
              },
              "application/vnd.be.immoweb.user.classifieds.2.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponse-User-V2"
                }
              },
              "application/vnd.be.immoweb.classifieds.v2.1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2.1"
                }
              },
              "application/vnd.be.immoweb.user.classifieds.2.1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponse-User-V2.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Classifieds" ],
        "description" : "Allows user to create a classified",
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classified-in.v1.0+json" ]
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "description" : "OAUTH2 Header: 'Bearer: access_token'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-iw-api-key",
          "in" : "header",
          "required" : true,
          "description" : "API key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.classified-in.v1.0+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClassifiedIn"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/CREATED"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/BADREQUEST"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/FORBIDDEN"
                }
              }
            }
          }
        }
      }
    },
    "/classifieds/{classifiedId}" : {
      "get" : {
        "tags" : [ "Classifieds" ],
        "summary" : "Find classified by ID",
        "description" : "Returns a single classified",
        "security" : [ {
          "apikey_classifieds" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classified.v2.0+json", "application/vnd.be.immoweb.user.classified.v2.0+json", "application/vnd.be.immoweb.classified.v2.1+json", "application/vnd.be.immoweb.user.classified.v2.1+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "optional header to pass user authentication token",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of classified to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.classified.v2.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classified-V2"
                }
              },
              "application/vnd.be.immoweb.user.classified.2.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classified-User-V2"
                }
              },
              "application/vnd.be.immoweb.classified.v2.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classified-V2.1"
                }
              },
              "application/vnd.be.immoweb.user.classified.2.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classified-User-V2.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "404" : {
            "description" : "Classified not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/NOT_FOUND"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Classifieds" ],
        "description" : "Allows user to update a classified",
        "parameters" : [ {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of the classified to update",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classified-in.v1.0+json" ]
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "description" : "OAUTH2 Header: 'Bearer: access_token'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-iw-api-key",
          "in" : "header",
          "required" : true,
          "description" : "API key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.classified-in.v1.0+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClassifiedIn"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/CREATED"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/BADREQUEST"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/FORBIDDEN"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/NOT_FOUND"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Classifieds" ],
        "description" : "Allows user to update a classified",
        "parameters" : [ {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of the classified to update",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classified.v2.1+json" ]
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "description" : "OAUTH2 Header: 'Bearer: access_token'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-iw-api-key",
          "in" : "header",
          "required" : true,
          "description" : "API key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.classified.v2.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClassifiedPatch"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/CREATED"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/BADREQUEST"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/FORBIDDEN"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/NOT_FOUND"
                }
              }
            }
          }
        }
      }
    },
    "/classifieds/{classifiedId}/customers" : {
      "get" : {
        "tags" : [ "Classifieds" ],
        "summary" : "Find customers for a classified",
        "description" : "Returns an array of the customers for a classified",
        "security" : [ {
          "apikey_classifieds" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.customers.v1.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of classified to consider",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : {
              "Content-Range" : {
                "description" : "Range of the return results for the search /customers?range=20-29.  Example: \"20-29/43\"",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.customers.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/Customers"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/classifieds/{classifiedId}/message" : {
      "post" : {
        "tags" : [ "Classifieds" ],
        "summary" : "Send a request info to classified customers",
        "description" : "Send a request info to classified customers",
        "security" : [ {
          "apikey_classifieds" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classified.message.v1.0+json" ]
          }
        }, {
          "name" : "Content-Language",
          "in" : "header",
          "required" : true,
          "description" : "Content-Language: fr, be or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of classified to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.classified.message.v1.0+json" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/ClassifiedMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "404" : {
            "description" : "Classified not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/NOT_FOUND"
                }
              }
            }
          }
        }
      }
    },
    "/classified-requests/{referenceId}" : {
      "get" : {
        "tags" : [ "Classified-requests" ],
        "description" : "Allows user to check status of a classified request processing",
        "parameters" : [ {
          "name" : "referenceId",
          "in" : "path",
          "description" : "ID of the classified to update",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classified-requests.v1.0+json" ]
          }
        }, {
          "name" : "x-iw-api-key",
          "in" : "header",
          "required" : true,
          "description" : "API key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedRequestsResponses/OK"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedRequestsResponses/FORBIDDEN"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedRequestsResponses/NOTFOUND"
                }
              }
            }
          }
        }
      }
    },
    "/customers/oauth/token" : {
      "post" : {
        "servers" : [ {
          "url" : "https://connect-test.immoweb.be/",
          "description" : "Oauth server"
        } ],
        "tags" : [ "OAuth" ],
        "summary" : "Provide Authentication token for IW customers after checking credentials",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/OauthTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/OauthTokenResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/users/oauth/token" : {
      "post" : {
        "servers" : [ {
          "url" : "https://connect-test.immoweb.be/",
          "description" : "Oauth server"
        } ],
        "tags" : [ "OAuth" ],
        "summary" : "Provide Authentication token for IW users after checking credentials",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/OauthTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/OauthTokenResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/customers" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Returns a customer based on query params",
        "description" : "Returns basic info regarding customer",
        "security" : [ {
          "apikey_customers" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.customers.v1.0+json" ]
          }
        }, {
          "$ref" : "#/components/parameters/accept-language"
        }, {
          "$ref" : "#/components/parameters/customer-search-sort"
        }, {
          "$ref" : "#/components/parameters/customer-search-desc"
        }, {
          "$ref" : "#/components/parameters/customer-search-range"
        }, {
          "$ref" : "#/components/parameters/customer-search-contractTypes"
        }, {
          "$ref" : "#/components/parameters/customer-search-countries"
        }, {
          "$ref" : "#/components/parameters/customer-search-customerIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-customerGroupIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-displayByGroup"
        }, {
          "$ref" : "#/components/parameters/customer-search-districts"
        }, {
          "$ref" : "#/components/parameters/customer-search-includeCustomersBasedOnClassifiedLocation"
        }, {
          "$ref" : "#/components/parameters/customer-search-minClassifiedCount"
        }, {
          "$ref" : "#/components/parameters/customer-search-maxClassifiedCount"
        }, {
          "$ref" : "#/components/parameters/customer-search-name"
        }, {
          "$ref" : "#/components/parameters/customer-search-networkIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-notaryNetworkIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-postalCodes"
        }, {
          "$ref" : "#/components/parameters/customer-search-provinces"
        }, {
          "$ref" : "#/components/parameters/customer-search-regions"
        }, {
          "$ref" : "#/components/parameters/customer-search-types"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.customers.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchCustomerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Returns a customer based on a Id",
        "description" : "Returns basic info regarding customer",
        "security" : [ {
          "apikey_customers" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.customer.v1.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "ID of customer to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.customer.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "404" : {
            "description" : "Customer not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/NOT_FOUND"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/classifieds" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Returns classified from customer based on id",
        "description" : "Returns an abstrat regarding classified from a given customer",
        "security" : [ {
          "apikey_customers" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classifieds.v2.0+json" ]
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "ID of customer to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.classifieds.v2.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchResponseForCustomer"
                }
              },
              "application/vnd.be.immoweb.classifieds.v2.1json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchResponseForCustomerV2.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "404" : {
            "description" : "No classified found for the customer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/NO_CLASSIFIED_FOUND"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/message" : {
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Send a request info to a customers",
        "description" : "Send a request info to a customer",
        "security" : [ {
          "apikey_customers" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.customer.message.v1.0+json" ]
          }
        }, {
          "name" : "Content-Language",
          "in" : "header",
          "required" : true,
          "description" : "Content-Language: fr, be or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "ID of customer to send message to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.customer.message.v1.0+json" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/CustomerMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/ClassifiedResponses/UNAUTHORIZED"
                }
              }
            }
          },
          "404" : {
            "description" : "Customer not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/NOT_FOUND"
                }
              }
            }
          }
        }
      }
    },
    "/users" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Creates a user based on body",
        "description" : "Create a user based on body",
        "security" : [ {
          "apikey_users" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.v1.0+json" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.user.v1.0+json" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/User-no-id"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.customers.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchCustomerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check api key",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/users/current" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Retrieves a user based on current oauth token",
        "description" : "Retrieves a user based on current oauth token",
        "security" : [ {
          "apikey_users" : [ ]
        }, {
          "user_password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.v1.0+json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.user.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Updates current user based on body",
        "description" : "Updates current user based on body",
        "security" : [ {
          "apikey_users" : [ ]
        }, {
          "user_password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.v1.0+json" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.user.v1.0+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check api key",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "apikey_users" : [ ]
        }, {
          "user_password" : [ "user" ]
        } ],
        "summary" : "Delete current user",
        "description" : "Delete current user",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Access is not authorized. Check api key",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CustomerResponses/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/contact/email" : {
      "post" : {
        "tags" : [ "Users - Contact" ],
        "summary" : "Send a contact form via email",
        "security" : [ {
          "user-password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.contact.email.v1+json" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.contact.email.v1+json" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/ContactEmail"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/saved-searches" : {
      "get" : {
        "tags" : [ "Users - Saved Searches" ],
        "summary" : "Retriev user saved searches",
        "security" : [ {
          "user-password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.saved-searches.v1.0+json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.user.saved-searches.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SavedSearches"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/saved-searches/{id}" : {
      "put" : {
        "tags" : [ "Users - Saved Searches" ],
        "summary" : "Retrieve user saved search by id",
        "security" : [ {
          "user-password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.saved-searches.v1.0+json" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.user.saved-searches.v1.0+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "title" : {
                    "type" : "string",
                    "example" : "My Saved search"
                  },
                  "query" : {
                    "$ref" : "#/x-maskedModels/SavedSearchBody"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users - Saved Searches" ],
        "summary" : "Delete user saved search by id",
        "security" : [ {
          "user-password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/saved-classifieds" : {
      "get" : {
        "tags" : [ "Users - Saved Classifieds" ],
        "summary" : "Retrieve user saved classifieds",
        "security" : [ {
          "user-password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classifieds.v2.0+json", "application/vnd.be.immoweb.classifieds.v2.1+json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.classifieds.v2.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2"
                }
              },
              "application/vnd.be.immoweb.classifieds.v2.1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users - Saved Classifieds" ],
        "summary" : "Add classified to the list of saved classifieds for the current user",
        "security" : [ {
          "user-password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.saved-classifieds.v1.0+json" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.user.saved-classifieds.v1.0+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "description" : "id of the classified",
                  "example" : 6946146
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users - Saved Classifieds" ],
        "summary" : "Remove all classified from list of saved classifieds",
        "security" : [ {
          "user-password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/saved-classifieds/{id}" : {
      "delete" : {
        "tags" : [ "Users - Saved Classifieds" ],
        "summary" : "Delete user saved classified by id",
        "security" : [ {
          "user-password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, en or nl",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/1-0/subscriptions" : {
      "get" : {
        "tags" : [ "Users - Subscriptions" ],
        "summary" : "Redirect link to administration page based on nonce and userId",
        "security" : [ ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "description" : "UserId of the user to consider when redirecting to subscriptions management page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nonce",
          "in" : "query",
          "required" : true,
          "description" : "Nonce provided in email link to authorize subscriptions retrieval/modifications",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lang",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        } ],
        "responses" : {
          "301" : {
            "description" : "redirect link in Location header",
            "headers" : {
              "Location" : {
                "schema" : {
                  "type" : "string",
                  "example" : "https://test.immoweb.be/fr/dashboard?nonce=NONCE&userId=USER_ID"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/subscriptions/nonce/{nonce}" : {
      "get" : {
        "tags" : [ "Users - Subscriptions" ],
        "summary" : "Check nonce validity prior to set subscriptions",
        "security" : [ {
          "apikey_users" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.subscriptions.nonce.v1.0+json" ]
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "description" : "UserId of the user to consider when checkin nonce validity",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nonce",
          "in" : "path",
          "required" : true,
          "description" : "Nonce provided in email link to authorize subscriptions retrieval/modifications",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Nonce is valid if status is set to VALID",
            "content" : {
              "application/vnd.be.immoweb.user.subscriptions.nonce.v1.0+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/x-enums/NonceStatuses"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Nonce could not be found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errorCode" : {
                      "type" : "string",
                      "enum" : [ "NONCE_MICROSERVICE_ERROR" ]
                    },
                    "errorDescription" : {
                      "type" : "string",
                      "example" : "Nonce NONCE not found"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users - Subscriptions" ],
        "summary" : "Invalidate nonce validity after setting subscriptions",
        "security" : [ {
          "apikey_users" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.subscriptions.nonce.v1.0+json" ]
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "description" : "UserId of the user to consider when checkin nonce validity",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nonce",
          "in" : "path",
          "required" : true,
          "description" : "Nonce provided in email link to authorize subscriptions retrieval/modifications",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.be.immoweb.user.subscriptions.nonce.v1.0+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "status" : {
                    "type" : "string",
                    "enum" : [ "USED" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK - Nonce is invalidated"
          },
          "404" : {
            "description" : "Nonce could not be found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errorCode" : {
                      "type" : "string",
                      "enum" : [ "NONCE_MICROSERVICE_ERROR" ]
                    },
                    "errorDescription" : {
                      "type" : "string",
                      "example" : "Nonce NONCE not found"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/users/new/subscriptions" : {
      "get" : {
        "tags" : [ "Users - Subscriptions" ],
        "summary" : "Get subscription topics for new or unlogged user",
        "security" : [ {
          "apikey_users" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.subscriptions.v1.0+json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.user.subscriptions.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/Subscriptions"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/subscriptions" : {
      "get" : {
        "tags" : [ "Users - Subscriptions" ],
        "summary" : "Get subscription topics for logged-in user",
        "security" : [ {
          "apikey_users" : [ ]
        }, {
          "user_password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.subscriptions.v1.0+json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.user.subscriptions.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/Subscriptions"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users - Subscriptions" ],
        "summary" : "Post subscription topics for logged-in user",
        "security" : [ {
          "apikey_users" : [ ]
        }, {
          "user_password" : [ "user" ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.subscriptions.v1.0+json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/subscriptions" : {
      "post" : {
        "tags" : [ "Users - Subscriptions" ],
        "summary" : "Post subscription topics for unlogged user. This call will first check nonce, then save subscriptions, then invalidate nonce",
        "security" : [ {
          "apikey_users" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.user.subscriptions.v1.0+json" ]
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "description" : "UserId of the user to consider when checkin nonce validity",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nonce",
          "in" : "query",
          "required" : true,
          "description" : "Nonce provided in email link to authorize subscriptions retrieval/modifications",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid nonce",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "errorCode" : {
                      "type" : "string",
                      "enum" : [ "UNKNOWN_NONCE", "INVALID_NONCE" ]
                    },
                    "errorDescription" : {
                      "type" : "string",
                      "example" : "Provided nonce could not found"
                    }
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/ppp/classifieds/{classifiedId}" : {
      "put" : {
        "tags" : [ "Premium Project Page" ],
        "summary" : "Add or update PPP info for a given classified",
        "parameters" : [ {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer adding or updating PPP info",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of PPP item to create/update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of the request",
          "required" : true,
          "content" : {
            "application/vnd.be.immoweb.ppp.v1.0+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PPPItem"
              }
            }
          }
        },
        "security" : [ {
          "customer_password" : [ "customer" ]
        }, {
          "ppp_cms_api_key" : [ "Key" ]
        } ],
        "responses" : {
          "204" : {
            "description" : "OK - No data"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Premium Project Page" ],
        "summary" : "update PPP info for a given classified",
        "parameters" : [ {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer adding or updating PPP info",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of PPP item to create/update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of the request",
          "required" : true,
          "content" : {
            "application/vnd.be.immoweb.ppp.v1.0+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PPPItem"
              }
            }
          }
        },
        "security" : [ {
          "customer_password" : [ "customer" ]
        }, {
          "ppp_cms_api_key" : [ "Key" ]
        } ],
        "responses" : {
          "204" : {
            "description" : "OK - No data"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Premium Project Page" ],
        "summary" : "Retrieve PPP info for a given classified",
        "parameters" : [ {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of PPP item to create/update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "ppp_cms_api_key" : [ "Key" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.ppp.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PPPItem"
                }
              }
            }
          },
          "404" : {
            "description" : "PPP item not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Premium Project Page" ],
        "summary" : "Delete PPP info for a given classified",
        "parameters" : [ {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer deleting the PPP info",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of PPP item to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "pro_user_auth" : [ "customer" ]
        }, {
          "cms_api_key" : [ "Key" ]
        } ],
        "responses" : {
          "202" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "PPP item not found"
          }
        }
      }
    },
    "/ppp/classifieds/{classifiedId}/status" : {
      "get" : {
        "tags" : [ "Premium Project Page" ],
        "summary" : "Retrieve PPP status info for a given classified",
        "parameters" : [ {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "ID of PPP item to retrieve status from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "ppp_cms_api_key" : [ "Key" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "$ref" : "#/x-enums-ppp/PPPStatuses"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "PPP item not found"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/ppp/lastItems" : {
      "get" : {
        "tags" : [ "Premium Project Page" ],
        "summary" : "Retrieve last modified classified including Premium Project Pages",
        "description" : "This route allows retrieval of previously store data for the last modified items (at most 50 items)",
        "security" : [ {
          "apikey_ppp" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.application/vnd.be.immoweb.classified-ppps.v1.0+json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.media.application/vnd.be.immoweb.classified-ppps.v1.0+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "example" : 9646055
                      },
                      "SEOUrl" : {
                        "type" : "string",
                        "format" : "uri",
                        "example" : "https://test.immoweb.be/en/ad/apartment/for-sale/vilvoorde/1800/id6946055"
                      },
                      "media" : {
                        "type" : "object",
                        "properties" : {
                          "mainImageUrl" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/media/iw360" : {
      "post" : {
        "tags" : [ "Media - IW360" ],
        "summary" : "Create 360 related info for a given classified",
        "description" : "This route should be used to create information related to the 360  Calls to this route are subject to prior OAUTH2 authentication.",
        "security" : [ {
          "apikey_media" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.360.v1+json" ]
          }
        }, {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer modifying the 360 data",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of the request",
          "required" : true,
          "content" : {
            "application/vnd.be.immoweb.media.360.v1+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "classifiedId" : {
                    "type" : "string"
                  },
                  "status" : {
                    "type" : "string",
                    "enum" : "MediaStatuses"
                  },
                  "url" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Media - IW360" ],
        "summary" : "Retrieve 360 related infos for a given classified or a list of classified, or a customer",
        "description" : "This route allows retrieval of previously store data for a given classified  or a list of classified , or a customer. ClassifiedId OR CustomerId must be present in the query",
        "security" : [ {
          "apikey_media" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.360s.v1+json" ]
          }
        }, {
          "name" : "classifiedId",
          "in" : "query",
          "description" : "ID of classifieds to retrieve 360 info from",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "ID of the customer to retrieve 360 info from",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/vnd.be.immoweb.media.360s.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/360Item"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      }
    },
    "/media/iw360/{id}" : {
      "put" : {
        "tags" : [ "Media - IW360" ],
        "summary" : "Update 360 related info for a given 360 media",
        "description" : "This route should be used to update the 360  Calls to this route are subject to prior OAUTH2 authentication.",
        "security" : [ {
          "apikey_media" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.360.v1+json" ]
          }
        }, {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer modifying the 360 data",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of media to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of the request",
          "required" : true,
          "content" : {
            "application/vnd.be.immoweb.media.360.v1+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "classifiedId" : {
                    "type" : "string"
                  },
                  "status" : {
                    "type" : "string",
                    "enum" : "MediaStatuses"
                  },
                  "url" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "OK - No data"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "404" : {
            "description" : "Error - The classified 360 info could not be found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Media - IW360" ],
        "summary" : "Delete 360 related info for a given 360 media",
        "description" : "This route should be used to delete the 360  Calls to this route are subject to prior OAUTH2 authentication.",
        "security" : [ {
          "apikey_media" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer modifying the 360 data",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of media to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK - No data"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "404" : {
            "description" : "Error - The classified 360 info could not be found"
          }
        }
      }
    },
    "/media/iw360/lastItems" : {
      "get" : {
        "tags" : [ "Media - IW360" ],
        "summary" : "Retrieve 360 info for the last modified items",
        "description" : "This route allows retrieval of previously store data for the last modified items (at most 50 items)",
        "security" : [ {
          "apikey_media" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.classified-360s.v1+json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.media.classified-360s.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "example" : 9646055
                      },
                      "SEOUrl" : {
                        "type" : "string",
                        "format" : "uri",
                        "example" : "https://test.immoweb.be/en/ad/apartment/for-sale/vilvoorde/1800/id6946055"
                      },
                      "media" : {
                        "type" : "object",
                        "properties" : {
                          "iw360" : {
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "integer"
                              },
                              "status" : {
                                "type" : "string",
                                "enum" : "MediaStatuses"
                              },
                              "url" : {
                                "type" : "string",
                                "format" : "uri"
                              }
                            }
                          },
                          "mainImageUrl" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/media/pictures" : {
      "post" : {
        "tags" : [ "Media - Pictures" ],
        "summary" : "Create new picture for a given classifiedId",
        "security" : [ {
          "apikey_media" : [ ]
        }, {
          "customer_password" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.picture.v1+json" ]
          }
        }, {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer storing the media picture",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of the request",
          "required" : true,
          "content" : {
            "application/vnd.be.immoweb.media.picture.v1+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "classifiedId" : {
                    "type" : "integer"
                  },
                  "alt" : {
                    "type" : "string"
                  },
                  "contentType" : {
                    "type" : "string",
                    "enum" : [ "image/gif", "image/jpeg", "image/png", "image/svg+xml" ]
                  },
                  "img" : {
                    "type" : "string",
                    "description" : "base64 of the image"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "url" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Media - Pictures" ],
        "summary" : "Retrieve picture media for a given classifiedId",
        "security" : [ {
          "apikey_media" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.pictures.v1+json" ]
          }
        }, {
          "name" : "classifiedId",
          "in" : "query",
          "required" : true,
          "description" : "ID of the classified to retrieve picture media from",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.media.pictures.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Picture"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/media/pictures/{id}" : {
      "get" : {
        "tags" : [ "Media - Pictures" ],
        "security" : [ {
          "apikey_media" : [ ]
        }, {
          "customer_password" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.picture.v1+json" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of picture mediato retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve picture media for a given id",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.media.picture.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Picture"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "404" : {
            "description" : "Error - No picture media stored in service for this id"
          }
        }
      },
      "delete" : {
        "tags" : [ "Media - Pictures" ],
        "security" : [ {
          "apikey_media" : [ ]
        }, {
          "customer_password" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer deleting the media picture",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of picture media to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Delete picture media for a given id",
        "responses" : {
          "202" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "404" : {
            "description" : "Error - No picture media stored in service for this id"
          }
        }
      }
    },
    "/media/videos" : {
      "post" : {
        "tags" : [ "Media - Videos" ],
        "summary" : "Create new video for a given classifiedId",
        "security" : [ {
          "apikey_media" : [ ]
        }, {
          "customer_password" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.video.v1+json" ]
          }
        }, {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer storing the media video",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of the request",
          "required" : true,
          "content" : {
            "application/vnd.be.immoweb.media.video.v1+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "classifiedId" : {
                    "type" : "integer"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "url" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Media - Videos" ],
        "summary" : "Retrieve video media for a given classifiedId",
        "security" : [ {
          "apikey_media" : [ ]
        }, {
          "customer_password" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.videos.v1+json" ]
          }
        }, {
          "name" : "classifiedId",
          "in" : "query",
          "required" : true,
          "description" : "ID of the classified to retrieve video media from",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.media.videos.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "404" : {
            "description" : "Error - No video media stored in service for this classified"
          }
        }
      }
    },
    "/media/videos/{id}" : {
      "get" : {
        "tags" : [ "Media - Videos" ],
        "security" : [ {
          "apikey_media" : [ ]
        }, {
          "customer_password" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.video.v1+json" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of video media to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve video media for a given id",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.media.video.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "404" : {
            "description" : "Error - No video media stored for this id"
          }
        }
      },
      "put" : {
        "tags" : [ "Media - Videos" ],
        "security" : [ {
          "apikey_media" : [ ]
        }, {
          "customer_password" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.media.video.v1+json" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of video media to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Update video media for a given id",
        "requestBody" : {
          "description" : "Body of the request",
          "required" : true,
          "content" : {
            "application/vnd.be.immoweb.media.video.v1+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "classifiedId" : {
                    "type" : "integer"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "url" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "404" : {
            "description" : "Error - No video media stored for this id"
          }
        }
      },
      "delete" : {
        "tags" : [ "Media - Videos" ],
        "security" : [ {
          "apikey_media" : [ ]
        }, {
          "customer_password" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Customer-Id",
          "in" : "header",
          "required" : true,
          "description" : "ID of the customer deleting the video media",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of video media to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Delete video media for a given id",
        "responses" : {
          "202" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "404" : {
            "description" : "Error - No video media for this id"
          }
        }
      }
    },
    "/locations/top-cities" : {
      "get" : {
        "tags" : [ "Locations" ],
        "security" : [ {
          "apikey_locations" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.locations.top-cities.v1+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        } ],
        "summary" : "Retrieve main cities area based on number of activeClassifieds",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.location.top-cities.v1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/Locations_TopCities_array"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/agents" : {
      "get" : {
        "tags" : [ "Agents" ],
        "security" : [ {
          "apikey_agents" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.agents.v1+json", "application/vnd.be.immoweb.agents.v1.1+json" ]
          }
        }, {
          "$ref" : "#/components/parameters/accept-language"
        }, {
          "$ref" : "#/components/parameters/customer-search-sort"
        }, {
          "$ref" : "#/components/parameters/customer-search-desc"
        }, {
          "$ref" : "#/components/parameters/customer-search-range"
        }, {
          "$ref" : "#/components/parameters/customer-search-contractTypes"
        }, {
          "$ref" : "#/components/parameters/customer-search-countries"
        }, {
          "$ref" : "#/components/parameters/customer-search-customerIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-customerGroupIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-districts"
        }, {
          "$ref" : "#/components/parameters/customer-search-displayByGroup"
        }, {
          "$ref" : "#/components/parameters/customer-search-includeCustomersBasedOnClassifiedLocation"
        }, {
          "$ref" : "#/components/parameters/customer-search-minClassifiedCount"
        }, {
          "$ref" : "#/components/parameters/customer-search-name"
        }, {
          "$ref" : "#/components/parameters/customer-search-networkIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-notaryNetworkIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-postalCodes"
        }, {
          "$ref" : "#/components/parameters/customer-search-provinces"
        }, {
          "$ref" : "#/components/parameters/customer-search-regions"
        } ],
        "summary" : "Search for agents",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.agents.v1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/Customers"
                }
              },
              "application/vnd.be.immoweb.agents.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/Customers"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/agents/nearby" : {
      "get" : {
        "tags" : [ "Agents" ],
        "security" : [ {
          "apikey_agents" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.customers.v1+json" ]
          }
        }, {
          "$ref" : "#/components/parameters/accept-language"
        }, {
          "$ref" : "#/components/parameters/customer-search-postalCode"
        } ],
        "summary" : "Search for agents closest to postalCode",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.customers.v1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/Customers"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/agents/{agentId}" : {
      "get" : {
        "tags" : [ "Agents" ],
        "security" : [ {
          "apikey_agents" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.customer.v1+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "agentId",
          "in" : "path",
          "description" : "ID of agent to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "summary" : "Retrieve an agent by id",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.customer.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/agents/top-networks" : {
      "get" : {
        "tags" : [ "Agents" ],
        "security" : [ {
          "apikey_agents" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.agents.top-networks.v1.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        } ],
        "summary" : "Search for top network of agents - sorting is made by number of classifieds",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.agents.top-networks.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/AgentsTopNetworks"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/aggregated-authentication" : {
      "post" : {
        "tags" : [ "OAuth" ],
        "security" : [ ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/x-maskedModels/OauthTokenRequest"
              }
            }
          }
        },
        "summary" : "Log into current and legacy oauth system",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "access_manager" : {
                      "type" : "object",
                      "properties" : {
                        "access_token" : {
                          "type" : "string",
                          "example" : "3bdc2277-35e4-473e-8b42-06df19edf032"
                        },
                        "token_type" : {
                          "type" : "string",
                          "example" : "bearer"
                        },
                        "refresh_token" : {
                          "type" : "string",
                          "example" : "d67d6e7b-b91b-44d7-906b-6d3a1a052cc9"
                        },
                        "expires_in" : {
                          "type" : "integer",
                          "example" : 7199
                        },
                        "scope" : {
                          "type" : "string",
                          "example" : "openid"
                        },
                        "id_token" : {
                          "type" : "string",
                          "description" : "Token to provide to api to authenticate subsequent calls",
                          "example" : "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyNjk4MTA5IiwiYXVkIjoiaXdfZnJvbnQiLCJmaXJzdE5hbWUiOiJ0ZXN0IiwibGFzdE5hbWUiOiJ0ZXN0IiwibWFpbCI6ImVtbWFudWVsLmxlcm95QGF4YS5iZSIsImlzcyI6Iml3ZWJfZGIiLCJleHAiOjE1MTY3Mzk3MDMsImlhdCI6MTUxNjcyNTMwMywidXNlcklkIjoiMjY5ODEwOSJ9.RiYg9t148XFfpvDKARFlgDiw0pBQ4LRy4Fz1iGoUNdp5MaGqGayB7NKhN7KIlIsN_tj1xS6Yf5AkOiOIQ60T8T7gTiyc1orPV2U6jILCMYFEvOSOzxPEQCxHJm3f70CxKquvjFQAxysZn5W_MhTIrcIYCr9isPaMylIcVMioTqeg2VMwEmNo0pNzfp9PKRTpS3ub5zCbYMw_nDbc6_anoYjmpJKx8js11-nvA66rW--jxl8Cvb1ORRl9K678s-rsfqPf8Gl2NoQ8OTRn2HZGPIPJ4JxVXcs-Enzt9ittjvoOjbOVArVv9y-oQM7ATm-vD_SWoBmhzPHL-VevF0yngA"
                        }
                      }
                    },
                    "legacy" : {
                      "type" : "object",
                      "properties" : {
                        "access_token" : {
                          "type" : "string",
                          "example" : "9e8118ad-d775-48d8-ac7c-1babe890dd45"
                        },
                        "token_type" : {
                          "type" : "string",
                          "example" : "bearer"
                        },
                        "refresh_token" : {
                          "type" : "string",
                          "example" : "200258b7-1a68-45c5-8313-9df369b81109"
                        },
                        "expires_in" : {
                          "type" : "integer",
                          "example" : 86399
                        },
                        "scope" : {
                          "type" : "string",
                          "example" : "read trust"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/notaries/{notaryNetworkId}/classifieds" : {
      "get" : {
        "tags" : [ "Notaries" ],
        "security" : [ {
          "apikey_notaries" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classifieds.v2.0+json" ]
          }
        }, {
          "name" : "notaryNetworkId",
          "in" : "path",
          "description" : "notaryNetworkId to consider",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/accept-language"
        }, {
          "$ref" : "#/components/parameters/classified-search-range"
        }, {
          "$ref" : "#/components/parameters/classified-search-sort"
        }, {
          "$ref" : "#/components/parameters/classified-search-desc"
        }, {
          "$ref" : "#/components/parameters/classified-search-buildingConditions"
        }, {
          "$ref" : "#/components/parameters/classified-search-classifiedIds"
        }, {
          "$ref" : "#/components/parameters/classified-search-constructionTypes"
        }, {
          "$ref" : "#/components/parameters/classified-search-countries"
        }, {
          "$ref" : "#/components/parameters/classified-search-districts"
        }, {
          "$ref" : "#/components/parameters/classified-search-gardenOrientations"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasDisabledAccess"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasGarden"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasGoodWill"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasFireplace"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasKitchenSetup"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasLift"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasAReceptionDesk"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasSwimmingPool"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasTerrace"
        }, {
          "$ref" : "#/components/parameters/classified-search-hasTerraceOrGarden"
        }, {
          "$ref" : "#/components/parameters/classified-search-isFurnished"
        }, {
          "$ref" : "#/components/parameters/classified-search-isNewlyBuilt"
        }, {
          "$ref" : "#/components/parameters/classified-search-isALifeAnnuitySale"
        }, {
          "$ref" : "#/components/parameters/classified-search-isAPublicSale"
        }, {
          "$ref" : "#/components/parameters/classified-search-isANewlyPublishedClassified"
        }, {
          "$ref" : "#/components/parameters/classified-search-isAnInvestmentProperty"
        }, {
          "$ref" : "#/components/parameters/classified-search-isAWorkSpaceProperty"
        }, {
          "$ref" : "#/components/parameters/classified-search-minAccessDoorCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxAccessDoorCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minBedroomCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxBedroomCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minAvailableSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxAvailableSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minFacadeCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxFacadeCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minGardenSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxGardenSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minKitchenSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxKitchenSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minLandSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxLandSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minLoadingBayCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxLoadingBayCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minParkingPlaces"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxParkingPlaces"
        }, {
          "$ref" : "#/components/parameters/classified-search-minPrice"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxPrice"
        }, {
          "$ref" : "#/components/parameters/classified-search-minPriceOfBusiness"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxPriceOfBusiness"
        }, {
          "$ref" : "#/components/parameters/classified-search-minRoomCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxRoomCount"
        }, {
          "$ref" : "#/components/parameters/classified-search-minShowroomSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxShowroomSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-minTerraceSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-maxTerraceSurface"
        }, {
          "$ref" : "#/components/parameters/classified-search-priceType"
        }, {
          "$ref" : "#/components/parameters/classified-search-propertySubtypes"
        }, {
          "$ref" : "#/components/parameters/classified-search-postalCodes"
        }, {
          "$ref" : "#/components/parameters/classified-search-propertyTypes"
        }, {
          "$ref" : "#/components/parameters/classified-search-provinces"
        }, {
          "$ref" : "#/components/parameters/classified-search-regions"
        }, {
          "$ref" : "#/components/parameters/classified-search-transactionTypes"
        } ],
        "summary" : "Search for classifieds belonging to the notary network defined by notaryNetworkId",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.classifieds.v2.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2"
                }
              },
              "application/vnd.be.immoweb.classifieds.v2.1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/notaries/{notaryNetworkId}/classifieds/{classifiedId}" : {
      "get" : {
        "tags" : [ "Notaries" ],
        "security" : [ {
          "apikey_notaries" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classified.v2.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "notaryNetworkId",
          "in" : "path",
          "description" : "notaryNetworkId to consider",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifiedId",
          "in" : "path",
          "description" : "classifiedId of the classified to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve a classified belonging to the notary network defined by notaryNetworkId and with given id",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.classified.v2.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classified-V2"
                }
              },
              "application/vnd.be.immoweb.classified.v2.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classified-V2.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/notaries/{notaryNetworkId}/classifieds/ui/json" : {
      "get" : {
        "tags" : [ "Notaries" ],
        "security" : [ {
          "apikey_notaries" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classified.uijson.v1.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "notaryNetworkId",
          "in" : "path",
          "description" : "notaryNetworkId to consider",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve a json to depict front page mapping in a json format",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.classified.uijson.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/UIJson"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/notaries/{notaryNetworkId}/customers" : {
      "get" : {
        "tags" : [ "Notaries" ],
        "security" : [ {
          "apikey_notaries" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.customers.v1.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "notaryNetworkId",
          "in" : "path",
          "description" : "notaryNetworkId to consider",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/accept-language"
        }, {
          "$ref" : "#/components/parameters/customer-search-sort"
        }, {
          "$ref" : "#/components/parameters/customer-search-desc"
        }, {
          "$ref" : "#/components/parameters/customer-search-range"
        }, {
          "$ref" : "#/components/parameters/customer-search-customerIds"
        }, {
          "$ref" : "#/components/parameters/customer-search-districts"
        }, {
          "$ref" : "#/components/parameters/customer-search-minClassifiedCount"
        }, {
          "$ref" : "#/components/parameters/customer-search-name"
        }, {
          "$ref" : "#/components/parameters/customer-search-postalCodes"
        }, {
          "$ref" : "#/components/parameters/customer-search-types"
        } ],
        "summary" : "Search for customers belonging to the notary network defined by notaryNetworkId",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.customers.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchCustomerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/notaries/{notaryNetworkId}/customers/{customerId}" : {
      "get" : {
        "tags" : [ "Notaries" ],
        "security" : [ {
          "apikey_notaries" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.customer.v1.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "notaryNetworkId",
          "in" : "path",
          "description" : "notaryNetworkId to consider",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "customerId of the customer to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve a customer belonging to the notary network defined by notaryNetworkId and with given id",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.customer.v1.0+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/notaries/{notaryNetworkId}/customers/{customerId}/classifieds" : {
      "get" : {
        "tags" : [ "Notaries" ],
        "security" : [ {
          "apikey_notaries" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classifieds.v2.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "notaryNetworkId",
          "in" : "path",
          "description" : "notaryNetworkId to consider",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "customerId to consider",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Search for classifieds belonging to the notary network defined by notaryNetworkId and the customer defined by its customerId",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.classifieds.v2.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2"
                }
              },
              "application/vnd.be.immoweb.classifieds.v2.1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    },
    "/notaries/{notaryNetworkId}/agenda/publicSales" : {
      "get" : {
        "tags" : [ "Notaries" ],
        "security" : [ {
          "apikey_notaries" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/vnd.be.immoweb.classifieds.v2.0+json" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
          "schema" : {
            "$ref" : "#/x-enums/AcceptedLanguages"
          }
        }, {
          "name" : "notaryNetworkId",
          "in" : "path",
          "description" : "notaryNetworkId to consider",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Search for publicSales classifieds belonging to the notary network defined by notaryNetworkId. Results are sorted by date (ascending), and filtered by future dates only",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.be.immoweb.classifieds.v2.0+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2"
                }
              },
              "application/vnd.be.immoweb.classifieds.v2.1+json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/SearchClassifiedResponseV2.1"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is malformed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-400"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported media type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/x-maskedModels/CommonErrors-415"
                }
              }
            }
          },
          "401" : {
            "description" : "Error - Authentication failure"
          }
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "components" : {
    "parameters" : {
      "accept-language" : {
        "name" : "Accept-Language",
        "in" : "header",
        "description" : "Accept-Language: fr, be or nl. Default if not provided is en",
        "schema" : {
          "$ref" : "#/x-enums/AcceptedLanguages"
        }
      },
      "classified-search-classifiedIds" : {
        "name" : "classifiedIds",
        "in" : "query",
        "description" : "id of the classifieds to return or csv list of ids",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-customerIds" : {
        "name" : "classifiedIds",
        "in" : "query",
        "description" : "id of the customer to retrieve classifieds from or csv list of customerIds",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-propertyTypes" : {
        "name" : "propertyTypes",
        "in" : "query",
        "description" : "Type or concatenation of types (csv)",
        "required" : true,
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/PropertyTypes"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-transactionTypes" : {
        "name" : "transactionTypes",
        "in" : "query",
        "description" : "FOR_SALE or FOR_RENT",
        "required" : true,
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/TransactionTypes"
          }
        }
      },
      "classified-search-range" : {
        "name" : "range",
        "in" : "query",
        "description" : "Range of the results to return: first-Last. Default if omitted is 0-9",
        "schema" : {
          "type" : "string"
        }
      },
      "classified-search-sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "Criteria for sorting in ascending order. Sort and desc cannot be used combined",
        "schema" : {
          "$ref" : "#/x-enums/ClassifiedSortingOrders"
        }
      },
      "classified-search-desc" : {
        "name" : "desc",
        "in" : "query",
        "description" : "Criteria for sorting in descending order. Sort and desc cannot be used combined",
        "schema" : {
          "$ref" : "#/x-enums/ClassifiedSortingOrders"
        }
      },
      "classified-search-buildingConditions" : {
        "name" : "buildingConditions",
        "in" : "query",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/BuildingConditions"
          }
        }
      },
      "classified-search-constructionTypes" : {
        "name" : "constructionTypes",
        "in" : "query",
        "description" : "List of construction types",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/ConstructionTypes"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-countries" : {
        "name" : "countries",
        "in" : "query",
        "description" : "Country or concatenation of countries (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/Countries"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-districts" : {
        "name" : "districts",
        "in" : "query",
        "description" : "District or concatenation of districts (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-gardenOrientations" : {
        "name" : "gardenOrientations",
        "in" : "query",
        "description" : "List of orientations of the garden",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/Orientations"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-geoPoint" : {
        "name" : "geoSearchPoint",
        "in" : "query",
        "description" : "A single geo point coordinates to initiate a search around the user, comma-separated",
        "schema" : {
          "type" : "string"
        }
      },
      "classified-search-geoPointRadius" : {
        "name" : "geoSearchRadius",
        "in" : "query",
        "description" : "A distance in km representing the radius in which to search around the user",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-hasGoodWill" : {
        "name" : "hasGoodWill",
        "in" : "query",
        "description" : "True if the classified has good will",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-hasDisabledAccess" : {
        "name" : "hasDisabledAccess",
        "in" : "query",
        "description" : "True if the classified has disable access",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-hasFireplace" : {
        "name" : "hasFireplace",
        "in" : "query",
        "description" : "True if the classified has a fireplace",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-hasKitchenSetup" : {
        "name" : "hasKitchenSetup",
        "in" : "query",
        "description" : "True if the classified has a a kitchen setup",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-hasLift" : {
        "name" : "hasLift",
        "in" : "query",
        "description" : "True if the classified is equipped with a lift",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-hasAReceptionDesk" : {
        "name" : "hasAReceptionDesk",
        "in" : "query",
        "description" : "True if the classified has a reception desk",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isFurnished" : {
        "name" : "isFurnished",
        "in" : "query",
        "description" : "The classified contains furnitures",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isALifeAnnuitySale" : {
        "name" : "isALifeAnnuitySale",
        "in" : "query",
        "description" : "True if the sale is a life annuity sale",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isAPublicSale" : {
        "name" : "isAPublicSale",
        "in" : "query",
        "description" : "True if the sale is a public sale (auction)",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isANewlyPublishedClassified" : {
        "name" : "isANewlyPublishedClassified",
        "in" : "query",
        "description" : "True if the sale is a new property",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isAnInvestmentProperty" : {
        "name" : "isAnInvestmentProperty",
        "in" : "query",
        "description" : "True if the sale is a rental complex",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isAWorkSpaceProperty" : {
        "name" : "isAWorkSpaceProperty",
        "in" : "query",
        "description" : "True if the sale is a workspace property",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isAFuturePublicSale" : {
        "name" : "isAFuturePublicSale",
        "in" : "query",
        "description" : "True if the sale is a workspace property",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isConstructionPermitObtained" : {
        "name" : "isConstructionPermitObtained",
        "in" : "query",
        "description" : "True if the construction permit is already obtained",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isNewlyBuilt" : {
        "name" : "isNewlyBuilt",
        "in" : "query",
        "description" : "True if the sale is a newly built",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-isSoldOrRented" : {
        "name" : "isConstructionPermitObtained",
        "in" : "query",
        "description" : "True if the property is already sold or rented",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-minParkingPlaces" : {
        "name" : "minParkingPlaces",
        "in" : "query",
        "description" : "Number minimum of parking spaces",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxParkingPlaces" : {
        "name" : "maxParkingPlaces",
        "in" : "query",
        "description" : "Number maximum of parking spaces",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minSurface" : {
        "name" : "minSurface",
        "in" : "query",
        "description" : "Minimum surface in square meters",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxSurface" : {
        "name" : "maxSurface",
        "in" : "query",
        "description" : "Maximum surface in square meters",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minFacadeCount" : {
        "name" : "minFacadeCount",
        "in" : "query",
        "description" : "Minimum facade count",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxFacadeCount" : {
        "name" : "maxFacadeCount",
        "in" : "query",
        "description" : "Maximum facade count",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minAccessDoorCount" : {
        "name" : "minAccessDoorCount",
        "in" : "query",
        "description" : "Minimum access door count",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxAccessDoorCount" : {
        "name" : "maxAccessDoorCount",
        "in" : "query",
        "description" : "Maximum access door count",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minLoadingBayCount" : {
        "name" : "minLoadingBayCount",
        "in" : "query",
        "description" : "Minimum loadingBay count",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxLoadingBayCount" : {
        "name" : "maxLoadingBayCount",
        "in" : "query",
        "description" : "Maximum loadingBay count",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minPrice" : {
        "name" : "minPrice",
        "in" : "query",
        "description" : "Minimum price filter",
        "schema" : {
          "type" : "number"
        }
      },
      "classified-search-maxPrice" : {
        "name" : "maxPrice",
        "in" : "query",
        "description" : "Maximum price filter",
        "schema" : {
          "type" : "number"
        }
      },
      "classified-search-minPriceOfBusiness" : {
        "name" : "minPriceOfBusiness",
        "in" : "query",
        "description" : "Minimum price of business",
        "schema" : {
          "type" : "number"
        }
      },
      "classified-search-maxPriceOfBusiness" : {
        "name" : "maxPriceOfBusiness",
        "in" : "query",
        "description" : "Maximum price of business",
        "schema" : {
          "type" : "number"
        }
      },
      "classified-search-notaryNetworkIds" : {
        "name" : "notaryNetworkIds",
        "in" : "query",
        "description" : "NotaryNetworkId or concatenation of notaryNetworkIds (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-priceType" : {
        "name" : "priceType",
        "in" : "query",
        "schema" : {
          "$ref" : "#/x-enums/PriceTypes"
        }
      },
      "classified-search-propertySubtypes" : {
        "name" : "propertySubtypes",
        "in" : "query",
        "description" : "SubType or concatenation of subTypes (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/PropertySubtypes"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-postalCodes" : {
        "name" : "postalCodes",
        "in" : "query",
        "description" : "PostalCode or concatenation of postalCodes (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-provinces" : {
        "name" : "provinces",
        "in" : "query",
        "description" : "Province or concatenation of provinces (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-hasTerrace" : {
        "name" : "hasTerrace",
        "in" : "query",
        "description" : "True if the classified has a terrace",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-minTerraceSurface" : {
        "name" : "minTerraceSurface",
        "in" : "query",
        "description" : "Minimum surface of the terrace",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxTerraceSurface" : {
        "name" : "maxTerraceSurface",
        "in" : "query",
        "description" : "Maximum surface of the terrace",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-hasGarden" : {
        "name" : "hasGarden",
        "in" : "query",
        "description" : "True if the classified has a garden",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-minGardenSurface" : {
        "name" : "minGardenSurface",
        "in" : "query",
        "description" : "Minimum surface of the garden",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxGardenSurface" : {
        "name" : "maxGardenSurface",
        "in" : "query",
        "description" : "Maximum surface of the garden",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minGroundBuildableSurface" : {
        "name" : "minGroundBuildableSurface",
        "in" : "query",
        "description" : "Minimum surface to build",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxGroundBuildableSurface" : {
        "name" : "maxGroundBuildableSurface",
        "in" : "query",
        "description" : "Maximum surface to build",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-hasTerraceOrGarden" : {
        "name" : "hasTerraceOrGarden",
        "in" : "query",
        "description" : "True if the classified has at least a terrace or a garden",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-hasSwimmingPool" : {
        "name" : "hasSwimmingPool",
        "in" : "query",
        "description" : "True if the classified has a swimming pool",
        "schema" : {
          "type" : "boolean"
        }
      },
      "classified-search-minKitchenSurface" : {
        "name" : "minKitchenSurface",
        "in" : "query",
        "description" : "Minimum surface of the kitchen",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxKitchenSurface" : {
        "name" : "maxKitchenSurface",
        "in" : "query",
        "description" : "Maximum surface of the kitchen",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minShowroomSurface" : {
        "name" : "minShowroomSurface",
        "in" : "query",
        "description" : "Minimum surface of the showroom",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxShowroomSurface" : {
        "name" : "maxShowroomSurface",
        "in" : "query",
        "description" : "Maximum surface of the showroom",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minLandSurface" : {
        "name" : "minLandSurface",
        "in" : "query",
        "description" : "Minimum surface of the land",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxLandSurface" : {
        "name" : "maxLandSurface",
        "in" : "query",
        "description" : "Maximum surface of the land",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minAvailableSurface" : {
        "name" : "minAvailableSurface",
        "in" : "query",
        "description" : "Minimum surface available",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxAvailableSurface" : {
        "name" : "maxAvailableSurface",
        "in" : "query",
        "description" : "Maximum surface available",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minRoomCount" : {
        "name" : "minRoomCount",
        "in" : "query",
        "description" : "Minimum number of room for the search",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxRoomCount" : {
        "name" : "maxRoomCount",
        "in" : "query",
        "description" : "Maximum number of room for the search",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-minBedroomCount" : {
        "name" : "minBedroomCount",
        "in" : "query",
        "description" : "Minimum number of bedroom for the search",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-maxBedroomCount" : {
        "name" : "maxBedroomCount",
        "in" : "query",
        "description" : "Maximum number of bedroom for the search",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-regions" : {
        "name" : "regions",
        "in" : "query",
        "description" : "Region or concatenation of regions (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/Regions"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "classified-search-maxDaysSinceLastModification" : {
        "name" : "maxDaysSinceLastModification",
        "in" : "query",
        "description" : "Maximum number of days since the classified was modified",
        "schema" : {
          "type" : "integer"
        }
      },
      "classified-search-modifiedSince" : {
        "name" : "modifiedSince",
        "in" : "query",
        "description" : "Returns classifieds modifieds since the provided date. This is a date in ISO 8601 format of YYYY-MM-DDThh:mm or dd/MM/yyyy",
        "schema" : {
          "type" : "string"
        }
      },
      "customer-search-sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "Sorting preference",
        "schema" : {
          "$ref" : "#/x-enums/CustomerSortingOrdersAsc"
        }
      },
      "customer-search-desc" : {
        "name" : "sort",
        "in" : "query",
        "description" : "Sorting preference",
        "schema" : {
          "$ref" : "#/x-enums/CustomerSortingOrders"
        }
      },
      "customer-search-range" : {
        "name" : "range",
        "in" : "query",
        "description" : "Range of the result to return. Format first-last. Example: 0-9 (default if missing)",
        "schema" : {
          "type" : "string",
          "default" : "0-9"
        }
      },
      "customer-search-displayByGroup" : {
        "name" : "displayByGroup",
        "in" : "query",
        "description" : "Group customers by groups if they belong to one",
        "schema" : {
          "type" : "boolean"
        }
      },
      "customer-search-includeCustomersBasedOnClassifiedLocation" : {
        "name" : "includeCustomersBasedOnClassifiedLocation",
        "in" : "query",
        "description" : "If true, include customers having classified matching location criteria",
        "schema" : {
          "type" : "boolean"
        }
      },
      "customer-search-contractTypes" : {
        "name" : "contractTypes",
        "in" : "query",
        "description" : "types of the client",
        "schema" : {
          "$ref" : "#/x-enums/ContractTypes"
        }
      },
      "customer-search-customerIds" : {
        "name" : "customerIds",
        "in" : "query",
        "description" : "CustomerId of the customer to return or csv list of customerId",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-customerGroupIds" : {
        "name" : "customerGroupIds",
        "in" : "query",
        "description" : "customerGroupId of the customer to return or csv list of customerGroupId",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-districts" : {
        "name" : "districts",
        "in" : "query",
        "description" : "District or concatenation of districts (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-minClassifiedCount" : {
        "name" : "minClassifiedCount",
        "in" : "query",
        "description" : "Minimum number of classifier per customer",
        "schema" : {
          "type" : "integer"
        }
      },
      "customer-search-maxClassifiedCount" : {
        "name" : "maxClassifiedCount",
        "in" : "query",
        "description" : "Minimum number of classifier per customer",
        "schema" : {
          "type" : "integer"
        }
      },
      "customer-search-name" : {
        "name" : "name",
        "in" : "query",
        "description" : "name or partial name of the customers to retrieve",
        "schema" : {
          "type" : "string"
        }
      },
      "customer-search-networkIds" : {
        "name" : "networkIds",
        "in" : "query",
        "description" : "networkId or concatenation of networkIds (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-notaryNetworkIds" : {
        "name" : "notaryNetworkIds",
        "in" : "query",
        "description" : "notaryNetworkId or concatenation of notaryNetworkIds (csv)",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-postalCodes" : {
        "name" : "postalCodes",
        "in" : "query",
        "description" : "List of postalCode to search for customers",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-postalCode" : {
        "name" : "postalCode",
        "in" : "query",
        "description" : "postalCode around which searching for customers",
        "schema" : {
          "type" : "string"
        }
      },
      "customer-search-provinces" : {
        "name" : "provinces",
        "in" : "query",
        "description" : "List of provinces to search for customers",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-regions" : {
        "name" : "regions",
        "in" : "query",
        "description" : "List of regions to search for customers",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-countries" : {
        "name" : "countries",
        "in" : "query",
        "description" : "List of countries to search for customers",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      },
      "customer-search-types" : {
        "name" : "types",
        "in" : "query",
        "description" : "List of types of customers",
        "style" : "form",
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/x-enums/CustomerTypes"
          },
          "minItems" : 1,
          "uniqueItems" : true
        }
      }
    },
    "schemas" : {
      "Advertisements" : {
        "type" : "object",
        "properties" : {
          "adims" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/Adim"
            }
          },
          "adimsPlus" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/Adim"
            }
          }
        }
      },
      "Advertisements-Homepage" : {
        "description" : "Feedback from legacy API. No transformation done",
        "type" : "object",
        "properties" : {
          "adimsOnTheHomepage" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/LegacyAdims"
            }
          },
          "adSide" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/LegacyAdims"
            }
          },
          "adFocus" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/LegacyAdims"
            }
          }
        }
      },
      "AutoCompleteResponse-V1" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "type" : {
              "$ref" : "#/x-enums/AutoCompleteTypes"
            },
            "results" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "countryName" : {
                    "type" : "string",
                    "example" : "Belgium",
                    "description" : "Name of the country, if applicable"
                  },
                  "districtName" : {
                    "type" : "string",
                    "example" : "Brussels",
                    "description" : "Name of the district, if applicable"
                  },
                  "localityName" : {
                    "type" : "string",
                    "example" : "Brussels",
                    "description" : "Name of the locality, if applicable"
                  },
                  "agentName" : {
                    "type" : "string",
                    "example" : "Agent Name",
                    "description" : "Name of the agent, if applicable"
                  },
                  "networkName" : {
                    "type" : "string",
                    "example" : "CENTURY 22",
                    "description" : "Name of the network, if applicable"
                  },
                  "postalCode" : {
                    "type" : "string",
                    "example" : "1000",
                    "description" : "Postal Code of the city, if applicable"
                  },
                  "query" : {
                    "type" : "object",
                    "properties" : {
                      "param" : {
                        "type" : "string",
                        "example" : "postalCodes"
                      },
                      "value" : {
                        "type" : "string",
                        "example" : "1000"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AutoCompleteResponse-V1.1" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "type" : {
              "$ref" : "#/x-enums/AutoCompleteTypes"
            },
            "results" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentName" : {
                    "type" : "string",
                    "example" : "Agent Name",
                    "description" : "Name of the agent, if applicable"
                  },
                  "customerGroupName" : {
                    "type" : "string",
                    "example" : "Victoire Properties",
                    "description" : "name of the group of agencies, if applicable"
                  },
                  "countryIsoCode" : {
                    "type" : "string",
                    "example" : "BE",
                    "description" : "IsoCode of the country, if applicable"
                  },
                  "countryName" : {
                    "type" : "string",
                    "example" : "Belgium",
                    "description" : "Name of the country, if applicable"
                  },
                  "districtName" : {
                    "type" : "string",
                    "example" : "Brussels",
                    "description" : "Name of the district, if applicable"
                  },
                  "localityName" : {
                    "type" : "string",
                    "example" : "Brussels",
                    "description" : "Name of the locality, if applicable"
                  },
                  "networkName" : {
                    "type" : "string",
                    "example" : "CENTURY 22",
                    "description" : "Name of the network, if applicable"
                  },
                  "postalCode" : {
                    "type" : "string",
                    "example" : "1000",
                    "description" : "Postal Code of the city, if applicable"
                  },
                  "provinceName" : {
                    "type" : "string",
                    "example" : "Brussels",
                    "description" : "Name of the province, if applicable"
                  },
                  "regionName" : {
                    "type" : "string",
                    "example" : "Brussels",
                    "description" : "Name of the region, if applicable"
                  },
                  "query" : {
                    "type" : "object",
                    "properties" : {
                      "param" : {
                        "type" : "string",
                        "example" : "postalCodes",
                        "description" : "parameter name to use in future searches"
                      },
                      "value" : {
                        "type" : "string",
                        "example" : "1000"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Classified-V2" : {
        "type" : "object",
        "description" : "Notices intended to inform the public about the marketing of a Property and published via Immoweb. A classified is always linked: \\n to a Property: subject of the Classified) \\nto a Transaction: way the Property is proposed to the market) \\nto a Media: all the features that help to describe the Property (PDF files, Pictures, Descriptions, Video, etc.)",
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "cluster" : {
            "$ref" : "#/x-maskedModels/Cluster"
          },
          "customers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/Customer"
            }
          },
          "flagsAndStatistics" : {
            "$ref" : "#/x-maskedModels/FlagsAndStatistics"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/Media"
          },
          "ppp" : {
            "$ref" : "#/x-maskedModels-ppp/PPPInfo-FrontEnd"
          },
          "property" : {
            "$ref" : "#/x-maskedModels/Property"
          },
          "publication" : {
            "$ref" : "#/x-maskedModels/Publication"
          },
          "transaction" : {
            "$ref" : "#/x-maskedModels/Transaction"
          }
        }
      },
      "Classified-V2.1" : {
        "type" : "object",
        "description" : "Notices intended to inform the public about the marketing of a Property and published via Immoweb. A classified is always linked: \\n to a Property: subject of the Classified) \\nto a Transaction: way the Property is proposed to the market) \\nto a Media: all the features that help to describe the Property (PDF files, Pictures, Descriptions, Video, etc.)",
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "cluster" : {
            "$ref" : "#/x-maskedModels/Cluster"
          },
          "customers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/CustomerV2.1"
            }
          },
          "flagsAndStatistics" : {
            "$ref" : "#/x-maskedModels/FlagsAndStatistics"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/Media"
          },
          "ppp" : {
            "$ref" : "#/x-maskedModels-ppp/PPPInfo-FrontEnd"
          },
          "property" : {
            "$ref" : "#/x-maskedModels/Property"
          },
          "publication" : {
            "$ref" : "#/x-maskedModels/Publication"
          },
          "transaction" : {
            "$ref" : "#/x-maskedModels/Transaction"
          }
        }
      },
      "ClassifiedPatch" : {
        "type" : "object",
        "description" : "Notices intended to inform the public about the marketing of a Property and published via Immoweb. A classified is always linked: \\n to a Property: subject of the Classified) \\nto a Transaction: way the Property is proposed to the market) \\nto a Media: all the features that help to describe the Property (PDF files, Pictures, Descriptions, Video, etc.)",
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/MediaPatch"
          }
        }
      },
      "Classified-User-V2" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "cluster" : {
            "$ref" : "#/x-maskedModels/Cluster"
          },
          "customers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/Customer"
            }
          },
          "flagsAndStatistics" : {
            "$ref" : "#/x-maskedModels/FlagsAndStatistics"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/Media"
          },
          "property" : {
            "$ref" : "#/x-maskedModels/Property"
          },
          "publication" : {
            "$ref" : "#/x-maskedModels/Publication"
          },
          "transaction" : {
            "$ref" : "#/x-maskedModels/Transaction"
          },
          "user" : {
            "type" : "object",
            "properties" : {
              "isBookmarked" : {
                "type" : "boolean"
              },
              "isNew" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "Classified-User-V2.1" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "cluster" : {
            "$ref" : "#/x-maskedModels/Cluster"
          },
          "customers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/x-maskedModels/CustomerV2.1"
            }
          },
          "flagsAndStatistics" : {
            "$ref" : "#/x-maskedModels/FlagsAndStatistics"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/Media"
          },
          "property" : {
            "$ref" : "#/x-maskedModels/Property"
          },
          "publication" : {
            "$ref" : "#/x-maskedModels/Publication"
          },
          "transaction" : {
            "$ref" : "#/x-maskedModels/Transaction"
          },
          "user" : {
            "type" : "object",
            "properties" : {
              "isBookmarked" : {
                "type" : "boolean"
              },
              "isNew" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "ClassifiedIn" : {
        "type" : "object",
        "properties" : {
          "externalId" : {
            "type" : "string",
            "maxLength" : 50,
            "example" : "123456"
          },
          "project" : {
            "type" : "object",
            "properties" : {
              "projectInfo" : {
                "type" : "object",
                "properties" : {
                  "phase" : {
                    "$ref" : "#/x-enums-in/ProjectPhases"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 50
                  },
                  "totalHousingUnitsCount" : {
                    "type" : "integer",
                    "minimum" : 2,
                    "example" : 10
                  },
                  "unitDisplayModes" : {
                    "$ref" : "#/x-enums/UnitDisplayModes"
                  },
                  "soldPercentage" : {
                    "type" : "object",
                    "properties" : {
                      "displayMode" : {
                        "$ref" : "#/x-enums-in/SoldPercentageDisplayModes"
                      },
                      "value" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 100,
                        "example" : 80
                      }
                    }
                  }
                }
              },
              "unitInfo" : {
                "type" : "object",
                "properties" : {
                  "projectId" : {
                    "type" : "string",
                    "maxLength" : 50,
                    "example" : "12345AB"
                  },
                  "phase" : {
                    "$ref" : "#/x-enums-in/UnitPhases"
                  }
                }
              }
            }
          },
          "property" : {
            "type" : "object",
            "required" : [ "type", "subtype" ],
            "properties" : {
              "type" : {
                "$ref" : "#/x-enums-in/PropertyTypes"
              },
              "subtype" : {
                "$ref" : "#/x-enums/PropertySubtypes"
              },
              "isHolidayProperty" : {
                "type" : "boolean",
                "example" : false
              },
              "title" : {
                "type" : "object",
                "properties" : {
                  "fr" : {
                    "type" : "string",
                    "maxLength" : 60,
                    "example" : "french title"
                  },
                  "nl" : {
                    "type" : "string",
                    "maxLength" : 60,
                    "example" : "dutch title"
                  },
                  "en" : {
                    "type" : "string",
                    "maxLength" : 60,
                    "example" : "english title"
                  }
                }
              },
              "description" : {
                "type" : "object",
                "properties" : {
                  "fr" : {
                    "type" : "string",
                    "maxLength" : 1500,
                    "example" : "french description"
                  },
                  "nl" : {
                    "type" : "string",
                    "maxLength" : 1500,
                    "example" : "dutch description"
                  },
                  "en" : {
                    "type" : "string",
                    "maxLength" : 1500,
                    "example" : "english description"
                  }
                }
              },
              "location" : {
                "type" : "object",
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "properties" : {
                      "country" : {
                        "$ref" : "#/x-enums/Countries"
                      },
                      "locality" : {
                        "type" : "string",
                        "maxLength" : 50,
                        "example" : "Forest"
                      },
                      "postalCode" : {
                        "type" : "string",
                        "maxLength" : 50,
                        "example" : "1190"
                      },
                      "street" : {
                        "type" : "string",
                        "maxLength" : 150,
                        "example" : "Avenue g√©n√©ral Dumonceau"
                      },
                      "number" : {
                        "type" : "string",
                        "maxLength" : 10,
                        "example" : "56"
                      },
                      "box" : {
                        "type" : "string",
                        "maxLength" : 10,
                        "example" : ""
                      },
                      "propertyName" : {
                        "type" : "string",
                        "maxLength" : 50,
                        "example" : "Moniteur building"
                      },
                      "floor" : {
                        "type" : "integer",
                        "example" : 3
                      },
                      "isPublic" : {
                        "type" : "boolean",
                        "example" : true
                      }
                    }
                  },
                  "surroundings" : {
                    "type" : "object",
                    "properties" : {
                      "hasSeaView" : {
                        "type" : "boolean",
                        "example" : false
                      },
                      "type" : {
                        "$ref" : "#/x-enums/SurroundingTypes"
                      }
                    }
                  }
                }
              },
              "attic" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "minimum" : 1,
                    "example" : 1
                  },
                  "exists" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "isIsolated" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "isAccessibleWithFixedStairs" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "basement" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "minimum" : 1,
                    "example" : 50
                  },
                  "exists" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              },
              "bathroom" : {
                "type" : "object",
                "properties" : {
                  "count" : {
                    "type" : "integer",
                    "example" : 2,
                    "minimum" : 0
                  }
                }
              },
              "bedroom" : {
                "type" : "object",
                "properties" : {
                  "count" : {
                    "type" : "integer",
                    "example" : 3,
                    "minimum" : 0
                  },
                  "items" : {
                    "type" : "array",
                    "maxItems" : 5,
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "surface" : {
                          "type" : "integer",
                          "example" : 14,
                          "minimum" : 1
                        }
                      }
                    }
                  },
                  "hasDressingRoom" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              },
              "building" : {
                "type" : "object",
                "properties" : {
                  "annexCount" : {
                    "type" : "integer",
                    "example" : 0,
                    "minimum" : 0
                  },
                  "condition" : {
                    "$ref" : "#/x-enums-in/BuildingConditions"
                  },
                  "constructionYear" : {
                    "type" : "integer",
                    "example" : 1980,
                    "minimum" : 1753
                  },
                  "facadeCount" : {
                    "type" : "integer",
                    "example" : 4,
                    "minimum" : 1
                  },
                  "floorCount" : {
                    "type" : "integer",
                    "example" : 2,
                    "minimum" : 1
                  },
                  "streetFacadeWidth" : {
                    "type" : "number",
                    "example" : 20,
                    "minimum" : 1
                  },
                  "totalFloorSurface" : {
                    "type" : "integer",
                    "example" : 200,
                    "minimum" : 5,
                    "maximum" : 3000000
                  }
                }
              },
              "certificates" : {
                "type" : "object",
                "properties" : {
                  "isAsBuiltPlan" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "globalInsulationLevel" : {
                    "type" : "integer",
                    "example" : 35,
                    "minimum" : 0
                  },
                  "oilTankCertificateStatus" : {
                    "$ref" : "#/x-enums/OilTankCertificateStatus"
                  },
                  "hasElectricalInstallationComplianceCertificate" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "primaryEnergyConsumptionLevel" : {
                    "type" : "integer",
                    "example" : 150,
                    "minimum" : 0
                  }
                }
              },
              "constructionPermit" : {
                "type" : "object",
                "properties" : {
                  "constructionType" : {
                    "$ref" : "#/x-enums/ConstructionTypes"
                  },
                  "floodZoneType" : {
                    "$ref" : "#/x-enums/FloodZoneTypes"
                  },
                  "isPermitObtained" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "hasObligationToConstruct" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasPlotDivisionAuthorization" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasPossiblePriorityPurchaseRight" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "isBreachingUrbanPlanningRegulation" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "urbanPlanningInformation" : {
                    "type" : "object",
                    "properties" : {
                      "fr" : {
                        "type" : "string",
                        "example" : "French urbanPlanningInformation",
                        "maxLength" : 250
                      },
                      "nl" : {
                        "type" : "string",
                        "example" : "Dutch urbanPlanningInformation",
                        "maxLength" : 250
                      },
                      "en" : {
                        "type" : "string",
                        "example" : "English urbanPlanningInformation",
                        "maxLength" : 250
                      }
                    }
                  }
                }
              },
              "commonEquipment" : {
                "type" : "object",
                "properties" : {
                  "hasCaretakerOrConcierge" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasDisabledAccess" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasLift" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "diningRoom" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "example" : 30,
                    "minimum" : 1
                  },
                  "exists" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              },
              "energy" : {
                "type" : "object",
                "properties" : {
                  "heatingType" : {
                    "$ref" : "#/x-enums-in/HeatingTypes"
                  },
                  "hasHeatPump" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasPhotovoltaicPanels" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasThermicPanels" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasCollectiveWaterHeater" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasDoubleGlazing" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              },
              "kitchen" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "example" : 10,
                    "minimum" : 1
                  },
                  "type" : {
                    "$ref" : "#/x-enums-in/KitchenSetups"
                  }
                }
              },
              "land" : {
                "type" : "object",
                "properties" : {
                  "hasGasWaterElectricityConnection" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "hasSewerConnection" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "surface" : {
                    "type" : "integer",
                    "example" : 500,
                    "minimum" : 1
                  },
                  "rearLand" : {
                    "type" : "integer",
                    "example" : 300,
                    "minimum" : 1
                  },
                  "landWidth" : {
                    "type" : "integer",
                    "example" : 25,
                    "minimum" : 1
                  },
                  "isFacingStreet" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "isFlat" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "hasPlotToRear" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "isWooded" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "totalBuildableGroundFloorSurface" : {
                    "type" : "number",
                    "example" : 200,
                    "minimum" : 0
                  },
                  "latestUseDesignation" : {
                    "$ref" : "#/x-enums-in/LatestUseDesignations"
                  }
                }
              },
              "laundryRoom" : {
                "type" : "object",
                "properties" : {
                  "exists" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              },
              "livingDescription" : {
                "type" : "object",
                "properties" : {
                  "netHabitableSurface" : {
                    "type" : "integer",
                    "example" : 120,
                    "minimum" : 5,
                    "maximum" : 3000000
                  },
                  "habitableUnitCount" : {
                    "type" : "integer",
                    "example" : 1,
                    "minimum" : 1
                  },
                  "roomCount" : {
                    "type" : "integer",
                    "example" : 5,
                    "minimum" : 1
                  },
                  "fireplaceCount" : {
                    "type" : "integer",
                    "example" : 1,
                    "minimum" : 1
                  }
                }
              },
              "livingRoom" : {
                "type" : "object",
                "properties" : {
                  "surface" : {
                    "type" : "integer",
                    "example" : 35,
                    "minimum" : 1
                  },
                  "exists" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              },
              "newlyBuilt" : {
                "type" : "object",
                "properties" : {
                  "isFirstOccupation" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "outdoor" : {
                "type" : "object",
                "properties" : {
                  "garden" : {
                    "type" : "object",
                    "properties" : {
                      "surface" : {
                        "type" : "integer",
                        "example" : 300,
                        "minimum" : 1
                      },
                      "orientation" : {
                        "$ref" : "#/x-enums/Orientations"
                      }
                    }
                  },
                  "terrace" : {
                    "type" : "object",
                    "properties" : {
                      "surface" : {
                        "type" : "integer",
                        "example" : 30,
                        "minimum" : 1
                      },
                      "exists" : {
                        "type" : "boolean",
                        "example" : true
                      },
                      "orientation" : {
                        "$ref" : "#/x-enums/Orientations"
                      }
                    }
                  }
                }
              },
              "parking" : {
                "type" : "object",
                "properties" : {
                  "parkingSpaceCount" : {
                    "type" : "object",
                    "properties" : {
                      "indoor" : {
                        "type" : "integer",
                        "example" : 1,
                        "minimum" : 1
                      },
                      "outdoor" : {
                        "type" : "integer",
                        "example" : 1,
                        "minimum" : 1
                      }
                    }
                  }
                }
              },
              "privateEquipment" : {
                "type" : "object",
                "properties" : {
                  "hasAirConditioning" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasArmoredDoor" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasCableTV" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "hasDoorPhone" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasInternet" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "hasSecureAccessAlarm" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "hasVisiophone" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "showerRoom" : {
                "type" : "object",
                "properties" : {
                  "count" : {
                    "type" : "integer",
                    "example" : 1,
                    "minimum" : 0
                  }
                }
              },
              "specificities" : {
                "type" : "object",
                "properties" : {
                  "BRI" : {
                    "type" : "object",
                    "properties" : {
                      "internalFixturesAndFittings" : {
                        "type" : "object",
                        "properties" : {
                          "fr" : {
                            "type" : "string",
                            "example" : "French internalFixturesAndFittings",
                            "maxLength" : 250
                          },
                          "nl" : {
                            "type" : "string",
                            "example" : "Dutch internalFixturesAndFittings",
                            "maxLength" : 250
                          },
                          "en" : {
                            "type" : "string",
                            "example" : "English internalFixturesAndFittings",
                            "maxLength" : 250
                          }
                        }
                      },
                      "miscellaneousFixturesAndFittings" : {
                        "type" : "object",
                        "properties" : {
                          "fr" : {
                            "type" : "string",
                            "example" : "French miscellaneousFixturesAndFittings",
                            "maxLength" : 250
                          },
                          "nl" : {
                            "type" : "string",
                            "example" : "French miscellaneousFixturesAndFittings",
                            "maxLength" : 250
                          },
                          "en" : {
                            "type" : "string",
                            "example" : "French miscellaneousFixturesAndFittings",
                            "maxLength" : 250
                          }
                        }
                      }
                    }
                  },
                  "industrial" : {
                    "type" : "object",
                    "properties" : {
                      "accessDoorCount" : {
                        "type" : "integer",
                        "example" : 3,
                        "minimum" : 0
                      },
                      "sectionalDoorCount" : {
                        "type" : "integer",
                        "example" : 5,
                        "minimum" : 0
                      },
                      "slidingDoorCount" : {
                        "type" : "integer",
                        "example" : 2,
                        "minimum" : 0
                      },
                      "loadingBayCount" : {
                        "type" : "integer",
                        "example" : 2,
                        "minimum" : 0
                      },
                      "coveredBaysCount" : {
                        "type" : "integer",
                        "example" : 1,
                        "minimum" : 0
                      },
                      "loadingBayWithLiftingDeviceCount" : {
                        "type" : "integer",
                        "example" : 1,
                        "minimum" : 0
                      },
                      "minAvailableHeight" : {
                        "type" : "integer",
                        "example" : 3,
                        "minimum" : 0
                      },
                      "maxAvailableHeight" : {
                        "type" : "integer",
                        "example" : 5,
                        "minimum" : 0
                      }
                    }
                  },
                  "largeEnterprise" : {
                    "type" : "object",
                    "properties" : {
                      "showroomSurface" : {
                        "type" : "integer",
                        "example" : 500,
                        "minimum" : 0
                      },
                      "hasReceptionDesk" : {
                        "type" : "boolean",
                        "example" : true
                      }
                    }
                  },
                  "shop" : {
                    "type" : "object",
                    "properties" : {
                      "shopWindowWidth" : {
                        "type" : "integer",
                        "example" : 25,
                        "minimum" : 0
                      },
                      "hasGoodwill" : {
                        "type" : "boolean",
                        "example" : true
                      },
                      "goodwillPrice" : {
                        "type" : "integer",
                        "example" : 50000,
                        "minimum" : 0
                      }
                    }
                  },
                  "SME" : {
                    "type" : "object",
                    "properties" : {
                      "office" : {
                        "type" : "object",
                        "properties" : {
                          "surface" : {
                            "type" : "integer",
                            "example" : 100,
                            "minimum" : 1
                          },
                          "exists" : {
                            "type" : "boolean",
                            "example" : true
                          }
                        }
                      },
                      "workSpace" : {
                        "type" : "object",
                        "properties" : {
                          "surface" : {
                            "type" : "integer",
                            "example" : 50,
                            "minimum" : 1
                          },
                          "exists" : {
                            "type" : "boolean",
                            "example" : true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "toilet" : {
                "type" : "object",
                "properties" : {
                  "count" : {
                    "type" : "integer",
                    "example" : 2,
                    "minimum" : 0
                  }
                }
              },
              "wellnessEquipment" : {
                "type" : "object",
                "properties" : {
                  "hasJacuzzi" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasSauna" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "hasSwimmingPool" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              }
            }
          },
          "transaction" : {
            "type" : "object",
            "required" : [ "type", "subtype" ],
            "properties" : {
              "type" : {
                "$ref" : "#/x-enums/TransactionTypes"
              },
              "subtype" : {
                "$ref" : "#/x-enums-in/TransactionSubtypes"
              },
              "availabilityPeriodType" : {
                "$ref" : "#/x-enums/AvailabilityPeriodTypes"
              },
              "availabilityDate" : {
                "type" : "string",
                "example" : "2014-01-27T00:40:57.165Z",
                "format" : "date-time"
              },
              "certificates" : {
                "type" : "object",
                "properties" : {
                  "epc" : {
                    "type" : "object",
                    "properties" : {
                      "description" : {
                        "type" : "object",
                        "properties" : {
                          "fr" : {
                            "type" : "string",
                            "example" : "French epc description",
                            "maxLength" : 750
                          },
                          "nl" : {
                            "type" : "string",
                            "example" : "Dutch epc description",
                            "maxLength" : 750
                          },
                          "en" : {
                            "type" : "string",
                            "example" : "English epc description",
                            "maxLength" : 750
                          }
                        }
                      },
                      "reportReference" : {
                        "type" : "string",
                        "example" : "20120507-0000078947-01-8",
                        "maxLength" : 100
                      },
                      "score" : {
                        "$ref" : "#/x-enums-in/EpcScoreTypes"
                      }
                    }
                  },
                  "carbonEmission" : {
                    "type" : "integer",
                    "example" : 82,
                    "minimum" : 1
                  },
                  "primaryEnergyConsumption" : {
                    "type" : "object",
                    "properties" : {
                      "perSqm" : {
                        "type" : "integer",
                        "example" : 412,
                        "minimum" : 1
                      },
                      "yearlyTheoreticalTotal" : {
                        "type" : "integer",
                        "example" : 18135,
                        "minimum" : 1
                      }
                    }
                  }
                }
              },
              "investor" : {
                "type" : "object",
                "properties" : {
                  "isInvestmentProperty" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "expectedMonthlyRentalIncome" : {
                    "type" : "number",
                    "example" : 1000,
                    "minimum" : 1
                  },
                  "occupancyRate" : {
                    "type" : "number",
                    "example" : 80,
                    "minimum" : 1,
                    "maximum" : 100
                  }
                }
              },
              "sale" : {
                "type" : "object",
                "required" : [ "vatAndOrRegistrationFeeTypes" ],
                "properties" : {
                  "price" : {
                    "type" : "number",
                    "example" : 300000,
                    "minimum" : 2500,
                    "maximum" : 35000000
                  },
                  "pricePerSqm" : {
                    "type" : "number",
                    "example" : 1000,
                    "minimum" : 1
                  },
                  "cadastralIncome" : {
                    "type" : "number",
                    "example" : 1000,
                    "minimum" : 1
                  },
                  "hasStartingPrice" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "vatAndOrRegistrationFeeTypes" : {
                    "$ref" : "#/x-enums-in/VatAndOrRegistrationFeeTypes"
                  },
                  "lifeAnnuity" : {
                    "type" : "object",
                    "required" : [ "monthlyAmount" ],
                    "properties" : {
                      "estimatedPropertyValue" : {
                        "type" : "number",
                        "example" : 350000,
                        "minimum" : 0,
                        "maximum" : 5000000000
                      },
                      "lumpSum" : {
                        "type" : "number",
                        "example" : 35000,
                        "minimum" : 0
                      },
                      "monthlyAmount" : {
                        "type" : "number",
                        "example" : 1000,
                        "minimum" : 0
                      },
                      "isIndexed" : {
                        "type" : "boolean",
                        "example" : false
                      },
                      "isJointAndSurvivorContract" : {
                        "type" : "boolean",
                        "example" : false
                      },
                      "isBareOwnership" : {
                        "type" : "boolean",
                        "example" : false
                      },
                      "contractMaximumDurationDescription" : {
                        "type" : "object",
                        "properties" : {
                          "fr" : {
                            "type" : "string",
                            "example" : "French contractMaximumDurationDescription",
                            "maxLength" : 100
                          },
                          "nl" : {
                            "type" : "string",
                            "example" : "Dutch contractMaximumDurationDescription",
                            "maxLength" : 100
                          },
                          "en" : {
                            "type" : "string",
                            "example" : "English contractMaximumDurationDescription",
                            "maxLength" : 100
                          }
                        }
                      },
                      "annuitants" : {
                        "type" : "object",
                        "properties" : {
                          "count" : {
                            "type" : "integer",
                            "example" : 1,
                            "minimum" : 1,
                            "maximum" : 2
                          },
                          "ages" : {
                            "type" : "array",
                            "items" : {
                              "type" : "integer",
                              "example" : 80
                            },
                            "maxItems" : 2
                          }
                        }
                      }
                    }
                  },
                  "publicSale" : {
                    "type" : "object",
                    "properties" : {
                      "hasUniqueSession" : {
                        "type" : "boolean",
                        "example" : false
                      },
                      "firstSessionStartingPrice" : {
                        "type" : "number",
                        "example" : 100000,
                        "minimum" : 1
                      },
                      "hasHigherBidRight" : {
                        "type" : "boolean",
                        "example" : true
                      },
                      "isForcedSale" : {
                        "type" : "boolean",
                        "example" : true
                      },
                      "lastSessionReachedPrice" : {
                        "type" : "number",
                        "example" : 120000,
                        "minimum" : 1
                      },
                      "overbidSessionStartingPrice" : {
                        "type" : "number",
                        "example" : 125000,
                        "minimum" : 1
                      },
                      "pendingOverbidAmount" : {
                        "type" : "number",
                        "example" : 125000,
                        "minimum" : 1
                      },
                      "pendingOverbidDeadline" : {
                        "type" : "string",
                        "example" : "2018-04-24T12:47:52.342Z",
                        "format" : "date-time"
                      },
                      "firstSessionDeadline" : {
                        "type" : "string",
                        "example" : "2018-04-24T12:47:52.342Z",
                        "format" : "date-time"
                      },
                      "overbidSessionDeadline" : {
                        "type" : "string",
                        "example" : "2018-04-24T12:47:52.342Z",
                        "format" : "date-time"
                      },
                      "viewingArrangements" : {
                        "type" : "object",
                        "properties" : {
                          "fr" : {
                            "type" : "string",
                            "example" : "French viewingArrangements",
                            "maxLength" : 250
                          },
                          "nl" : {
                            "type" : "string",
                            "example" : "Dutch viewingArrangements",
                            "maxLength" : 250
                          },
                          "en" : {
                            "type" : "string",
                            "example" : "English viewingArrangements",
                            "maxLength" : 250
                          }
                        }
                      },
                      "venue" : {
                        "type" : "object",
                        "properties" : {
                          "fr" : {
                            "type" : "string",
                            "example" : "French venue",
                            "maxLength" : 250
                          },
                          "nl" : {
                            "type" : "string",
                            "example" : "Dutch venue",
                            "maxLength" : 250
                          },
                          "en" : {
                            "type" : "string",
                            "example" : "English venue",
                            "maxLength" : 250
                          }
                        }
                      }
                    }
                  }
                }
              },
              "rental" : {
                "type" : "object",
                "required" : [ "monthlyRentalPrice" ],
                "properties" : {
                  "monthlyRentalPrice" : {
                    "type" : "number",
                    "example" : 1000,
                    "minimum" : 25,
                    "maximum" : 1000000
                  },
                  "monthlyRentalCosts" : {
                    "type" : "number",
                    "example" : 150,
                    "minimum" : 1
                  },
                  "nonResidential" : {
                    "type" : "object",
                    "properties" : {
                      "yearlyRentalPrice" : {
                        "type" : "number",
                        "example" : 120000,
                        "minimum" : 300,
                        "maximum" : 12000000
                      },
                      "yearlyRentalPricePerSqm" : {
                        "type" : "number",
                        "example" : 5000,
                        "minimum" : 5,
                        "maximum" : 25000
                      }
                    }
                  },
                  "residential" : {
                    "type" : "object",
                    "properties" : {
                      "isFurnished" : {
                        "type" : "boolean",
                        "example" : false
                      }
                    }
                  }
                }
              },
              "soldOrRented" : {
                "type" : "object",
                "properties" : {
                  "isSoldOrRented" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "price" : {
                    "type" : "number",
                    "example" : 355000,
                    "minimum" : 0
                  },
                  "date" : {
                    "type" : "string",
                    "example" : "2018-04-24T12:47:52.342Z",
                    "format" : "date-time"
                  },
                  "isSoldOrRentedPriceDisplayed" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              }
            }
          },
          "publication" : {
            "type" : "object",
            "properties" : {
              "isActive" : {
                "type" : "boolean",
                "example" : true
              },
              "visualisationOption" : {
                "$ref" : "#/x-enums-in/VisualisationOptions"
              }
            }
          },
          "media" : {
            "type" : "object",
            "properties" : {
              "pictures" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uri",
                  "example" : "https:www.somesite.com/pictures/picture1.jpg"
                },
                "maxItems" : 30
              },
              "virtualExperience" : {
                "type" : "string",
                "format" : "uri",
                "example" : "https:www.somesite.com/VR"
              }
            }
          }
        },
        "required" : [ "externalId" ]
      },
      "Customer" : {
        "type" : "object",
        "description" : "Information regarding customers",
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "type" : {
            "$ref" : "#/x-enums/CustomerTypes"
          },
          "contactInfo" : {
            "$ref" : "#/x-maskedModels/CustomerContactInfo"
          },
          "groupInfo" : {
            "$ref" : "#/x-maskedModels/CustomerGroupInfo"
          },
          "publicInfo" : {
            "$ref" : "#/x-maskedModels/CustomerPublicInfo"
          },
          "location" : {
            "$ref" : "#/x-maskedModels/CustomerLocation"
          },
          "timetable" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "dayOfTheWeek" : {
                  "$ref" : "#/x-enums/DaysOfTheWeek"
                },
                "openingHours" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "from" : {
                        "type" : "string",
                        "x-oldKey" : "timetable.{day}.hourStart"
                      },
                      "to" : {
                        "type" : "string",
                        "x-oldKey" : "timetable.{day}.hourEnd"
                      },
                      "appointmentRequired" : {
                        "type" : "boolean",
                        "x-oldKey" : "timetable.{day}.appointment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SavedSearch" : {
        "description" : "Saved search of user",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "lastModificationDate" : {
            "type" : "string",
            "description" : "This is a date in ISO 8601 format of YYYY-MM-DDThh:mm",
            "example" : "2018-02-16T12:56:03.527+0100"
          },
          "query" : {
            "$ref" : "#/x-maskedModels/SavedSearchBody"
          }
        }
      },
      "SearchedClassified-V2" : {
        "description" : "Basic information about a classified returned during search 2",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "cluster" : {
            "$ref" : "#/x-maskedModels/ClusterSearch"
          },
          "customer" : {
            "type" : "object",
            "properties" : {
              "info" : {
                "type" : "object",
                "properties" : {
                  "logoUrl" : {
                    "type" : "string",
                    "description" : "agency logo url",
                    "x-oldKey" : "results[].agencyLogo"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "flagsAndStatistics" : {
            "$ref" : "#/x-maskedModels/SearchResponseFlagsAndStatistics"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/SearchResponseMedia"
          },
          "property" : {
            "$ref" : "#/x-maskedModels/SearchResponseProperty"
          },
          "publication" : {
            "$ref" : "#/x-maskedModels/SearchResponsePublication"
          },
          "transaction" : {
            "$ref" : "#/x-maskedModels/SearchResponseTransaction"
          }
        }
      },
      "SearchedClassified-V2.1" : {
        "description" : "Basic information about a classified returned during search 2",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "cluster" : {
            "$ref" : "#/x-maskedModels/ClusterSearch-V2.1"
          },
          "customer" : {
            "type" : "object",
            "properties" : {
              "publicInfo" : {
                "type" : "object",
                "properties" : {
                  "logoUrl" : {
                    "type" : "string",
                    "description" : "agency logo url",
                    "x-oldKey" : "results[].agencyLogo"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "flagsAndStatistics" : {
            "$ref" : "#/x-maskedModels/SearchResponseFlagsAndStatistics"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/SearchResponseMedia"
          },
          "property" : {
            "$ref" : "#/x-maskedModels/SearchResponseProperty-V2.1"
          },
          "publication" : {
            "$ref" : "#/x-maskedModels/SearchResponsePublication"
          },
          "transaction" : {
            "$ref" : "#/x-maskedModels/SearchResponseTransactionV2.1"
          }
        }
      },
      "SearchedClassified-User-V2" : {
        "description" : "Basic information about a classified returned during search 2",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "cluster" : {
            "$ref" : "#/x-maskedModels/ClusterSearch"
          },
          "customers" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "info" : {
                  "type" : "object",
                  "properties" : {
                    "logoUrl" : {
                      "type" : "string",
                      "description" : "agency logo url",
                      "x-oldKey" : "results[].agencyLogo"
                    }
                  }
                }
              }
            }
          },
          "flagsAndStatistics" : {
            "$ref" : "#/x-maskedModels/SearchResponseFlagsAndStatistics"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/SearchResponseMedia"
          },
          "property" : {
            "$ref" : "#/x-maskedModels/SearchResponseProperty"
          },
          "publication" : {
            "$ref" : "#/x-maskedModels/SearchResponsePublication"
          },
          "transaction" : {
            "$ref" : "#/x-maskedModels/SearchResponseTransaction"
          },
          "user" : {
            "type" : "object",
            "properties" : {
              "isBookmarked" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "SearchedClassified-User-V2.1" : {
        "description" : "Basic information about a classified returned during search 2",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "x-oldKey" : "id"
          },
          "cluster" : {
            "$ref" : "#/x-maskedModels/ClusterSearch"
          },
          "customers" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "publicInfo" : {
                  "type" : "object",
                  "properties" : {
                    "logoUrl" : {
                      "type" : "string",
                      "description" : "agency logo url",
                      "x-oldKey" : "results[].agencyLogo"
                    }
                  }
                }
              }
            }
          },
          "flagsAndStatistics" : {
            "$ref" : "#/x-maskedModels/SearchResponseFlagsAndStatistics"
          },
          "media" : {
            "$ref" : "#/x-maskedModels/SearchResponseMedia"
          },
          "property" : {
            "$ref" : "#/x-maskedModels/SearchResponseProperty"
          },
          "publication" : {
            "$ref" : "#/x-maskedModels/SearchResponsePublication"
          },
          "transaction" : {
            "$ref" : "#/x-maskedModels/SearchResponseTransaction"
          },
          "user" : {
            "type" : "object",
            "properties" : {
              "isBookmarked" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "User" : {
        "description" : "Information regarding a user",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 2698109
          },
          "account" : {
            "type" : "object",
            "properties" : {
              "acceptsHtmlEmails" : {
                "type" : "boolean"
              },
              "lastConnection" : {
                "type" : "string",
                "example" : "2018-01-23T08:51:52.753+01:00"
              },
              "lastLogin" : {
                "type" : "string",
                "example" : "2018-01-19T14:41:06.107+01:00"
              },
              "connectionOrigin" : {
                "type" : "string"
              }
            }
          },
          "personal" : {
            "type" : "object",
            "properties" : {
              "gender" : {
                "$ref" : "#/x-enums/Gender"
              },
              "lastName" : {
                "type" : "string"
              },
              "firstName" : {
                "type" : "string"
              },
              "language" : {
                "type" : "string",
                "example" : "en"
              }
            }
          },
          "address" : {
            "type" : "object",
            "properties" : {
              "country" : {
                "type" : "string"
              },
              "locality" : {
                "type" : "string",
                "example" : "Brussels City"
              },
              "postalcode" : {
                "type" : "string"
              }
            }
          },
          "contact" : {
            "properties" : {
              "email" : {
                "type" : "string",
                "example" : "name.lastname@immoweb.be"
              },
              "phoneCallingTime" : {
                "type" : "string"
              },
              "mobileCallingTime" : {
                "type" : "string"
              }
            }
          },
          "business" : {
            "type" : "object"
          },
          "newslettersPreferences" : {
            "type" : "object",
            "properties" : {
              "acceptTermsAndConditions" : {
                "type" : "boolean"
              },
              "acknowledgeInternalPrivacy" : {
                "type" : "boolean"
              },
              "acknowledgeExternalPrivacy" : {
                "type" : "boolean"
              },
              "savedEstatesNotifications" : {
                "type" : "boolean"
              },
              "savedSearchesNotifications" : {
                "type" : "boolean"
              }
            }
          },
          "userInterests" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "domainCode" : {
                  "$ref" : "#/x-enums/DomainCodes"
                },
                "topicCode" : {
                  "$ref" : "#/x-enums/TopicCodes"
                },
                "selected" : {
                  "type" : "boolean"
                },
                "label" : {
                  "type" : "string",
                  "example" : "Bathroom"
                }
              }
            }
          }
        }
      },
      "PPPItem" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/x-enums-ppp/PPPStatuses"
          },
          "pppInfo" : {
            "type" : "object",
            "properties" : {
              "colors" : {
                "type" : "object",
                "properties" : {
                  "main" : {
                    "type" : "string",
                    "description" : "hex value of the page main color. Eg: #01172E",
                    "example" : "#01172E"
                  },
                  "secondary" : {
                    "type" : "string",
                    "description" : "hex value of the page secondary color. Eg: #01172E",
                    "example" : "#01172E"
                  }
                }
              },
              "projectConstructor" : {
                "type" : "object",
                "properties" : {
                  "logoUrl" : {
                    "type" : "string",
                    "format" : "Uri",
                    "example" : "https://mySite.com/path_to_my_logo"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "Constructor Name"
                  }
                }
              },
              "media" : {
                "type" : "object",
                "properties" : {
                  "mainImage" : {
                    "type" : "object",
                    "properties" : {
                      "url" : {
                        "type" : "string",
                        "example" : "https://mySite.com/path_to_my_mainImage"
                      }
                    }
                  },
                  "mainVideo" : {
                    "type" : "object",
                    "properties" : {
                      "url" : {
                        "type" : "object",
                        "properties" : {
                          "en" : {
                            "type" : "string",
                            "format" : "Uri"
                          },
                          "fr" : {
                            "type" : "string",
                            "format" : "Uri"
                          },
                          "nl" : {
                            "type" : "string",
                            "format" : "Uri"
                          }
                        }
                      }
                    }
                  },
                  "images" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "logoUrl" : {
                    "type" : "string",
                    "format" : "Uri"
                  }
                }
              },
              "tabs" : {
                "type" : "object",
                "properties" : {
                  "custom" : {
                    "type" : "object",
                    "properties" : {
                      "content" : {
                        "$ref" : "#/x-maskedModels-ppp/multiLanguageTabContent"
                      },
                      "title" : {
                        "$ref" : "#/x-maskedModels-ppp/multiLanguageText"
                      },
                      "isVisible" : {
                        "type" : "boolean"
                      }
                    }
                  },
                  "situation" : {
                    "type" : "object",
                    "properties" : {
                      "text" : {
                        "$ref" : "#/x-maskedModels-ppp/multiLanguageText"
                      }
                    }
                  },
                  "units" : {
                    "type" : "object",
                    "properties" : {
                      "mainImage" : {
                        "type" : "object",
                        "properties" : {
                          "url" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  },
                  "invest" : {
                    "type" : "object",
                    "properties" : {
                      "isVisible" : {
                        "type" : "boolean"
                      },
                      "content" : {
                        "$ref" : "#/x-maskedModels-ppp/multiLanguageTabContent"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "360Item" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "classifiedId" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string",
            "enum" : "MediaStatuses"
          },
          "url" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "Picture" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "classifiedId" : {
            "type" : "integer"
          },
          "alt" : {
            "type" : "string",
            "description" : "alternative text"
          },
          "url" : {
            "type" : "string",
            "format" : "uri",
            "description" : "url to GET to display the full picture"
          }
        }
      },
      "Video" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "classifiedId" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string",
            "description" : "name of the picture"
          },
          "url" : {
            "type" : "string",
            "format" : "uri",
            "description" : "url to GET to display the full video"
          }
        }
      }
    },
    "securitySchemes" : {
      "ppp_cms_api_key" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      },
      "customer_password" : {
        "type" : "oauth2",
        "flows" : {
          "password" : {
            "tokenUrl" : "https://connect-test.immoweb.be/customers/oauth/token",
            "scopes" : {
              "openid" : "Allow access to list of ressources accessible for a customer"
            }
          }
        }
      },
      "user_password" : {
        "type" : "oauth2",
        "flows" : {
          "password" : {
            "tokenUrl" : "https://connect-test.immoweb.be/users/oauth/token",
            "scopes" : {
              "openid" : "Allow access to ressources accessible for a logged in user"
            }
          }
        }
      },
      "apikey_advertisements" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      },
      "apikey_autocomplete" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      },
      "apikey_classifieds" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      },
      "apikey_customers" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      },
      "apikey_notaries" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      },
      "apikey_locations" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      },
      "apikey_users" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      },
      "apikey_media" : {
        "type" : "apiKey",
        "name" : "x-iw-api-key",
        "in" : "header"
      }
    }
  }
}
